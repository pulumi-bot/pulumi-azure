// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Iot
{
    public static class GetSharedAccessPolicy
    {
        /// <summary>
        /// Use this data source to access information about an existing IotHub Shared Access Policy
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Azure.Iot.GetSharedAccessPolicy.InvokeAsync(new Azure.Iot.GetSharedAccessPolicyArgs
        ///         {
        ///             Name = "example",
        ///             ResourceGroupName = azurerm_resource_group.Example.Name,
        ///             IothubName = azurerm_iothub.Example.Name,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSharedAccessPolicyResult> InvokeAsync(GetSharedAccessPolicyArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSharedAccessPolicyResult>("azure:iot/getSharedAccessPolicy:getSharedAccessPolicy", args ?? new GetSharedAccessPolicyArgs(), options.WithVersion());

        public static Output<GetSharedAccessPolicyResult> Apply(GetSharedAccessPolicyApplyArgs args, InvokeOptions? options = null)
        {
            return Pulumi.Output.All(
                args.IothubName.Box(),
                args.Name.Box(),
                args.ResourceGroupName.Box()
            ).Apply(a => {
                    var args = new GetSharedAccessPolicyArgs();
                    a[0].Set(args, nameof(args.IothubName));
                    a[1].Set(args, nameof(args.Name));
                    a[2].Set(args, nameof(args.ResourceGroupName));
                    return InvokeAsync(args, options);
            });
        }
    }


    public sealed class GetSharedAccessPolicyArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the IoTHub to which this Shared Access Policy belongs.
        /// </summary>
        [Input("iothubName", required: true)]
        public string IothubName { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the IotHub Shared Access Policy resource.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the resource group under which the IotHub Shared Access Policy resource has to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetSharedAccessPolicyArgs()
        {
        }
    }

    public sealed class GetSharedAccessPolicyApplyArgs
    {
        /// <summary>
        /// The name of the IoTHub to which this Shared Access Policy belongs.
        /// </summary>
        [Input("iothubName", required: true)]
        public Input<string> IothubName { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the IotHub Shared Access Policy resource.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The name of the resource group under which the IotHub Shared Access Policy resource has to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetSharedAccessPolicyApplyArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSharedAccessPolicyResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string IothubName;
        public readonly string Name;
        /// <summary>
        /// The primary connection string of the Shared Access Policy.
        /// </summary>
        public readonly string PrimaryConnectionString;
        /// <summary>
        /// The primary key used to create the authentication token.
        /// </summary>
        public readonly string PrimaryKey;
        public readonly string ResourceGroupName;
        /// <summary>
        /// The secondary connection string of the Shared Access Policy.
        /// </summary>
        public readonly string SecondaryConnectionString;
        /// <summary>
        /// The secondary key used to create the authentication token.
        /// </summary>
        public readonly string SecondaryKey;

        [OutputConstructor]
        private GetSharedAccessPolicyResult(
            string id,

            string iothubName,

            string name,

            string primaryConnectionString,

            string primaryKey,

            string resourceGroupName,

            string secondaryConnectionString,

            string secondaryKey)
        {
            Id = id;
            IothubName = iothubName;
            Name = name;
            PrimaryConnectionString = primaryConnectionString;
            PrimaryKey = primaryKey;
            ResourceGroupName = resourceGroupName;
            SecondaryConnectionString = secondaryConnectionString;
            SecondaryKey = secondaryKey;
        }
    }
}
