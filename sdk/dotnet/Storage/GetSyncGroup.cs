// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Storage
{
    public static class GetSyncGroup
    {
        /// <summary>
        /// Use this data source to access information about an existing Storage Sync Group.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Azure.Storage.GetSyncGroup.InvokeAsync(new Azure.Storage.GetSyncGroupArgs
        ///         {
        ///             Name = "existing-ss-group",
        ///             StorageSyncId = "existing-ss-id",
        ///         }));
        ///         this.Id = example.Apply(example =&gt; example.Id);
        ///     }
        /// 
        ///     [Output("id")]
        ///     public Output&lt;string&gt; Id { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSyncGroupResult> InvokeAsync(GetSyncGroupArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSyncGroupResult>("azure:storage/getSyncGroup:getSyncGroup", args ?? new GetSyncGroupArgs(), options.WithVersion());

        public static Output<GetSyncGroupResult> Apply(GetSyncGroupApplyArgs args, InvokeOptions? options = null)
        {
            return Pulumi.Output.All(
                args.Name.Box(),
                args.StorageSyncId.Box()
            ).Apply(a => {
                    var args = new GetSyncGroupArgs();
                    a[0].Set(args, nameof(args.Name));
                    a[1].Set(args, nameof(args.StorageSyncId));
                    return InvokeAsync(args, options);
            });
        }
    }


    public sealed class GetSyncGroupArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of this Storage Sync Group.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The resource ID of the Storage Sync where this Storage Sync Group is.
        /// </summary>
        [Input("storageSyncId", required: true)]
        public string StorageSyncId { get; set; } = null!;

        public GetSyncGroupArgs()
        {
        }
    }

    public sealed class GetSyncGroupApplyArgs
    {
        /// <summary>
        /// The name of this Storage Sync Group.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The resource ID of the Storage Sync where this Storage Sync Group is.
        /// </summary>
        [Input("storageSyncId", required: true)]
        public Input<string> StorageSyncId { get; set; } = null!;

        public GetSyncGroupApplyArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSyncGroupResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string StorageSyncId;

        [OutputConstructor]
        private GetSyncGroupResult(
            string id,

            string name,

            string storageSyncId)
        {
            Id = id;
            Name = name;
            StorageSyncId = storageSyncId;
        }
    }
}
