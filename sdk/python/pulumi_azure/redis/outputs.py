# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

@pulumi.output_type
class CachePatchSchedule(dict):
    day_of_week: str = pulumi.output_property("dayOfWeek")
    start_hour_utc: Optional[float] = pulumi.output_property("startHourUtc")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class CacheRedisConfiguration(dict):
    aof_backup_enabled: Optional[bool] = pulumi.output_property("aofBackupEnabled")
    aof_storage_connection_string0: Optional[str] = pulumi.output_property("aofStorageConnectionString0")
    aof_storage_connection_string1: Optional[str] = pulumi.output_property("aofStorageConnectionString1")
    enable_authentication: Optional[bool] = pulumi.output_property("enableAuthentication")
    """
    If set to `false`, the Redis instance will be accessible without authentication. Defaults to `true`.
    """
    maxclients: Optional[float] = pulumi.output_property("maxclients")
    """
    Returns the max number of connected clients at the same time.
    """
    maxfragmentationmemory_reserved: Optional[float] = pulumi.output_property("maxfragmentationmemoryReserved")
    """
    Value in megabytes reserved to accommodate for memory fragmentation. Defaults are shown below.
    """
    maxmemory_delta: Optional[float] = pulumi.output_property("maxmemoryDelta")
    """
    The max-memory delta for this Redis instance. Defaults are shown below.
    """
    maxmemory_policy: Optional[str] = pulumi.output_property("maxmemoryPolicy")
    """
    How Redis will select what to remove when `maxmemory` is reached. Defaults are shown below.
    """
    maxmemory_reserved: Optional[float] = pulumi.output_property("maxmemoryReserved")
    """
    Value in megabytes reserved for non-cache usage e.g. failover. Defaults are shown below.
    """
    notify_keyspace_events: Optional[str] = pulumi.output_property("notifyKeyspaceEvents")
    """
    Keyspace notifications allows clients to subscribe to Pub/Sub channels in order to receive events affecting the Redis data set in some way. [Reference](https://redis.io/topics/notifications#configuration)
    """
    rdb_backup_enabled: Optional[bool] = pulumi.output_property("rdbBackupEnabled")
    """
    Is Backup Enabled? Only supported on Premium SKU's.
    """
    rdb_backup_frequency: Optional[float] = pulumi.output_property("rdbBackupFrequency")
    """
    The Backup Frequency in Minutes. Only supported on Premium SKU's. Possible values are: `15`, `30`, `60`, `360`, `720` and `1440`.
    """
    rdb_backup_max_snapshot_count: Optional[float] = pulumi.output_property("rdbBackupMaxSnapshotCount")
    """
    The maximum number of snapshots to create as a backup. Only supported for Premium SKU's.
    """
    rdb_storage_connection_string: Optional[str] = pulumi.output_property("rdbStorageConnectionString")
    """
    The Connection String to the Storage Account. Only supported for Premium SKU's. In the format: `DefaultEndpointsProtocol=https;BlobEndpoint=${azurerm_storage_account.example.primary_blob_endpoint};AccountName=${azurerm_storage_account.example.name};AccountKey=${azurerm_storage_account.example.primary_access_key}`.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetCachePatchSchedule(dict):
    day_of_week: str = pulumi.output_property("dayOfWeek")
    """
    the Weekday name for the patch item
    """
    start_hour_utc: float = pulumi.output_property("startHourUtc")
    """
    The Start Hour for maintenance in UTC
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetCacheRedisConfiguration(dict):
    aof_backup_enabled: bool = pulumi.output_property("aofBackupEnabled")
    aof_storage_connection_string0: str = pulumi.output_property("aofStorageConnectionString0")
    aof_storage_connection_string1: str = pulumi.output_property("aofStorageConnectionString1")
    enable_authentication: bool = pulumi.output_property("enableAuthentication")
    """
    Specifies if authentication is enabled
    """
    maxclients: float = pulumi.output_property("maxclients")
    maxfragmentationmemory_reserved: float = pulumi.output_property("maxfragmentationmemoryReserved")
    """
    Value in megabytes reserved to accommodate for memory fragmentation.
    """
    maxmemory_delta: float = pulumi.output_property("maxmemoryDelta")
    """
    The max-memory delta for this Redis instance.
    """
    maxmemory_policy: str = pulumi.output_property("maxmemoryPolicy")
    """
    How Redis will select what to remove when `maxmemory` is reached.
    """
    maxmemory_reserved: float = pulumi.output_property("maxmemoryReserved")
    """
    The value in megabytes reserved for non-cache usage e.g. failover
    """
    notify_keyspace_events: str = pulumi.output_property("notifyKeyspaceEvents")
    rdb_backup_enabled: bool = pulumi.output_property("rdbBackupEnabled")
    """
    Is Backup Enabled? Only supported on Premium SKU's.
    """
    rdb_backup_frequency: float = pulumi.output_property("rdbBackupFrequency")
    """
    The Backup Frequency in Minutes. Only supported on Premium SKU's.
    """
    rdb_backup_max_snapshot_count: float = pulumi.output_property("rdbBackupMaxSnapshotCount")
    """
    The maximum number of snapshots that can be created as a backup.
    """
    rdb_storage_connection_string: str = pulumi.output_property("rdbStorageConnectionString")
    """
    The Connection String to the Storage Account. Only supported for Premium SKU's.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


