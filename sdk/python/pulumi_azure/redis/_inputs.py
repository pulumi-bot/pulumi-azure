# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Mapping, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'CachePatchScheduleArgs',
    'CacheRedisConfigurationArgs',
]

@pulumi.input_type
class CachePatchScheduleArgs:
    def __init__(__self__, *,
                 day_of_week: pulumi.Input[str],
                 start_hour_utc: Optional[pulumi.Input[float]] = None):
        pulumi.set(__self__, "dayOfWeek", day_of_week)
        pulumi.set(__self__, "startHourUtc", start_hour_utc)

    @property
    @pulumi.getter(name="dayOfWeek")
    def day_of_week(self) -> pulumi.Input[str]:
        ...

    @day_of_week.setter
    def day_of_week(self, value: pulumi.Input[str]):
        ...

    @property
    @pulumi.getter(name="startHourUtc")
    def start_hour_utc(self) -> Optional[pulumi.Input[float]]:
        ...

    @start_hour_utc.setter
    def start_hour_utc(self, value: Optional[pulumi.Input[float]]):
        ...


@pulumi.input_type
class CacheRedisConfigurationArgs:
    def __init__(__self__, *,
                 aof_backup_enabled: Optional[pulumi.Input[bool]] = None,
                 aof_storage_connection_string0: Optional[pulumi.Input[str]] = None,
                 aof_storage_connection_string1: Optional[pulumi.Input[str]] = None,
                 enable_authentication: Optional[pulumi.Input[bool]] = None,
                 maxclients: Optional[pulumi.Input[float]] = None,
                 maxfragmentationmemory_reserved: Optional[pulumi.Input[float]] = None,
                 maxmemory_delta: Optional[pulumi.Input[float]] = None,
                 maxmemory_policy: Optional[pulumi.Input[str]] = None,
                 maxmemory_reserved: Optional[pulumi.Input[float]] = None,
                 notify_keyspace_events: Optional[pulumi.Input[str]] = None,
                 rdb_backup_enabled: Optional[pulumi.Input[bool]] = None,
                 rdb_backup_frequency: Optional[pulumi.Input[float]] = None,
                 rdb_backup_max_snapshot_count: Optional[pulumi.Input[float]] = None,
                 rdb_storage_connection_string: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[bool] enable_authentication: If set to `false`, the Redis instance will be accessible without authentication. Defaults to `true`.
        :param pulumi.Input[float] maxclients: Returns the max number of connected clients at the same time.
        :param pulumi.Input[float] maxfragmentationmemory_reserved: Value in megabytes reserved to accommodate for memory fragmentation. Defaults are shown below.
        :param pulumi.Input[float] maxmemory_delta: The max-memory delta for this Redis instance. Defaults are shown below.
        :param pulumi.Input[str] maxmemory_policy: How Redis will select what to remove when `maxmemory` is reached. Defaults are shown below.
        :param pulumi.Input[float] maxmemory_reserved: Value in megabytes reserved for non-cache usage e.g. failover. Defaults are shown below.
        :param pulumi.Input[str] notify_keyspace_events: Keyspace notifications allows clients to subscribe to Pub/Sub channels in order to receive events affecting the Redis data set in some way. [Reference](https://redis.io/topics/notifications#configuration)
        :param pulumi.Input[bool] rdb_backup_enabled: Is Backup Enabled? Only supported on Premium SKU's.
        :param pulumi.Input[float] rdb_backup_frequency: The Backup Frequency in Minutes. Only supported on Premium SKU's. Possible values are: `15`, `30`, `60`, `360`, `720` and `1440`.
        :param pulumi.Input[float] rdb_backup_max_snapshot_count: The maximum number of snapshots to create as a backup. Only supported for Premium SKU's.
        :param pulumi.Input[str] rdb_storage_connection_string: The Connection String to the Storage Account. Only supported for Premium SKU's. In the format: `DefaultEndpointsProtocol=https;BlobEndpoint=${azurerm_storage_account.example.primary_blob_endpoint};AccountName=${azurerm_storage_account.example.name};AccountKey=${azurerm_storage_account.example.primary_access_key}`.
        """
        pulumi.set(__self__, "aofBackupEnabled", aof_backup_enabled)
        pulumi.set(__self__, "aofStorageConnectionString0", aof_storage_connection_string0)
        pulumi.set(__self__, "aofStorageConnectionString1", aof_storage_connection_string1)
        pulumi.set(__self__, "enableAuthentication", enable_authentication)
        pulumi.set(__self__, "maxclients", maxclients)
        pulumi.set(__self__, "maxfragmentationmemoryReserved", maxfragmentationmemory_reserved)
        pulumi.set(__self__, "maxmemoryDelta", maxmemory_delta)
        pulumi.set(__self__, "maxmemoryPolicy", maxmemory_policy)
        pulumi.set(__self__, "maxmemoryReserved", maxmemory_reserved)
        pulumi.set(__self__, "notifyKeyspaceEvents", notify_keyspace_events)
        pulumi.set(__self__, "rdbBackupEnabled", rdb_backup_enabled)
        pulumi.set(__self__, "rdbBackupFrequency", rdb_backup_frequency)
        pulumi.set(__self__, "rdbBackupMaxSnapshotCount", rdb_backup_max_snapshot_count)
        pulumi.set(__self__, "rdbStorageConnectionString", rdb_storage_connection_string)

    @property
    @pulumi.getter(name="aofBackupEnabled")
    def aof_backup_enabled(self) -> Optional[pulumi.Input[bool]]:
        ...

    @aof_backup_enabled.setter
    def aof_backup_enabled(self, value: Optional[pulumi.Input[bool]]):
        ...

    @property
    @pulumi.getter(name="aofStorageConnectionString0")
    def aof_storage_connection_string0(self) -> Optional[pulumi.Input[str]]:
        ...

    @aof_storage_connection_string0.setter
    def aof_storage_connection_string0(self, value: Optional[pulumi.Input[str]]):
        ...

    @property
    @pulumi.getter(name="aofStorageConnectionString1")
    def aof_storage_connection_string1(self) -> Optional[pulumi.Input[str]]:
        ...

    @aof_storage_connection_string1.setter
    def aof_storage_connection_string1(self, value: Optional[pulumi.Input[str]]):
        ...

    @property
    @pulumi.getter(name="enableAuthentication")
    def enable_authentication(self) -> Optional[pulumi.Input[bool]]:
        """
        If set to `false`, the Redis instance will be accessible without authentication. Defaults to `true`.
        """
        ...

    @enable_authentication.setter
    def enable_authentication(self, value: Optional[pulumi.Input[bool]]):
        ...

    @property
    @pulumi.getter
    def maxclients(self) -> Optional[pulumi.Input[float]]:
        """
        Returns the max number of connected clients at the same time.
        """
        ...

    @maxclients.setter
    def maxclients(self, value: Optional[pulumi.Input[float]]):
        ...

    @property
    @pulumi.getter(name="maxfragmentationmemoryReserved")
    def maxfragmentationmemory_reserved(self) -> Optional[pulumi.Input[float]]:
        """
        Value in megabytes reserved to accommodate for memory fragmentation. Defaults are shown below.
        """
        ...

    @maxfragmentationmemory_reserved.setter
    def maxfragmentationmemory_reserved(self, value: Optional[pulumi.Input[float]]):
        ...

    @property
    @pulumi.getter(name="maxmemoryDelta")
    def maxmemory_delta(self) -> Optional[pulumi.Input[float]]:
        """
        The max-memory delta for this Redis instance. Defaults are shown below.
        """
        ...

    @maxmemory_delta.setter
    def maxmemory_delta(self, value: Optional[pulumi.Input[float]]):
        ...

    @property
    @pulumi.getter(name="maxmemoryPolicy")
    def maxmemory_policy(self) -> Optional[pulumi.Input[str]]:
        """
        How Redis will select what to remove when `maxmemory` is reached. Defaults are shown below.
        """
        ...

    @maxmemory_policy.setter
    def maxmemory_policy(self, value: Optional[pulumi.Input[str]]):
        ...

    @property
    @pulumi.getter(name="maxmemoryReserved")
    def maxmemory_reserved(self) -> Optional[pulumi.Input[float]]:
        """
        Value in megabytes reserved for non-cache usage e.g. failover. Defaults are shown below.
        """
        ...

    @maxmemory_reserved.setter
    def maxmemory_reserved(self, value: Optional[pulumi.Input[float]]):
        ...

    @property
    @pulumi.getter(name="notifyKeyspaceEvents")
    def notify_keyspace_events(self) -> Optional[pulumi.Input[str]]:
        """
        Keyspace notifications allows clients to subscribe to Pub/Sub channels in order to receive events affecting the Redis data set in some way. [Reference](https://redis.io/topics/notifications#configuration)
        """
        ...

    @notify_keyspace_events.setter
    def notify_keyspace_events(self, value: Optional[pulumi.Input[str]]):
        ...

    @property
    @pulumi.getter(name="rdbBackupEnabled")
    def rdb_backup_enabled(self) -> Optional[pulumi.Input[bool]]:
        """
        Is Backup Enabled? Only supported on Premium SKU's.
        """
        ...

    @rdb_backup_enabled.setter
    def rdb_backup_enabled(self, value: Optional[pulumi.Input[bool]]):
        ...

    @property
    @pulumi.getter(name="rdbBackupFrequency")
    def rdb_backup_frequency(self) -> Optional[pulumi.Input[float]]:
        """
        The Backup Frequency in Minutes. Only supported on Premium SKU's. Possible values are: `15`, `30`, `60`, `360`, `720` and `1440`.
        """
        ...

    @rdb_backup_frequency.setter
    def rdb_backup_frequency(self, value: Optional[pulumi.Input[float]]):
        ...

    @property
    @pulumi.getter(name="rdbBackupMaxSnapshotCount")
    def rdb_backup_max_snapshot_count(self) -> Optional[pulumi.Input[float]]:
        """
        The maximum number of snapshots to create as a backup. Only supported for Premium SKU's.
        """
        ...

    @rdb_backup_max_snapshot_count.setter
    def rdb_backup_max_snapshot_count(self, value: Optional[pulumi.Input[float]]):
        ...

    @property
    @pulumi.getter(name="rdbStorageConnectionString")
    def rdb_storage_connection_string(self) -> Optional[pulumi.Input[str]]:
        """
        The Connection String to the Storage Account. Only supported for Premium SKU's. In the format: `DefaultEndpointsProtocol=https;BlobEndpoint=${azurerm_storage_account.example.primary_blob_endpoint};AccountName=${azurerm_storage_account.example.name};AccountKey=${azurerm_storage_account.example.primary_access_key}`.
        """
        ...

    @rdb_storage_connection_string.setter
    def rdb_storage_connection_string(self, value: Optional[pulumi.Input[str]]):
        ...


