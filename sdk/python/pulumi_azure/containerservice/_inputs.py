# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

@pulumi.input_type
class GroupContainerArgs:
    cpu: pulumi.Input[float] = pulumi.input_property("cpu")
    """
    The required number of CPU cores of the containers. Changing this forces a new resource to be created.
    """
    image: pulumi.Input[str] = pulumi.input_property("image")
    """
    The container image name. Changing this forces a new resource to be created.
    """
    memory: pulumi.Input[float] = pulumi.input_property("memory")
    """
    The required memory of the containers in GB. Changing this forces a new resource to be created.
    """
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    Specifies the name of the Container Group. Changing this forces a new resource to be created.
    """
    commands: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("commands")
    """
    A list of commands which should be run on the container. Changing this forces a new resource to be created.
    """
    environment_variables: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("environmentVariables")
    """
    A list of environment variables to be set on the container. Specified as a map of name/value pairs. Changing this forces a new resource to be created.
    """
    gpu: Optional[pulumi.Input['GroupContainerGpuArgs']] = pulumi.input_property("gpu")
    """
    A `gpu` block as defined below. Changing this forces a new resource to be created.
    """
    liveness_probe: Optional[pulumi.Input['GroupContainerLivenessProbeArgs']] = pulumi.input_property("livenessProbe")
    """
    The definition of a readiness probe for this container as documented in the `liveness_probe` block below. Changing this forces a new resource to be created.
    """
    ports: Optional[pulumi.Input[List[pulumi.Input['GroupContainerPortArgs']]]] = pulumi.input_property("ports")
    """
    A set of public ports for the container. Changing this forces a new resource to be created. Set as documented in the `ports` block below.
    """
    readiness_probe: Optional[pulumi.Input['GroupContainerReadinessProbeArgs']] = pulumi.input_property("readinessProbe")
    """
    The definition of a readiness probe for this container as documented in the `readiness_probe` block below. Changing this forces a new resource to be created.
    """
    secure_environment_variables: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("secureEnvironmentVariables")
    """
    A list of sensitive environment variables to be set on the container. Specified as a map of name/value pairs. Changing this forces a new resource to be created.
    """
    volumes: Optional[pulumi.Input[List[pulumi.Input['GroupContainerVolumeArgs']]]] = pulumi.input_property("volumes")
    """
    The definition of a volume mount for this container as documented in the `volume` block below. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, cpu: pulumi.Input[float], image: pulumi.Input[str], memory: pulumi.Input[float], name: pulumi.Input[str], commands: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, environment_variables: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None, gpu: Optional[pulumi.Input['GroupContainerGpuArgs']] = None, liveness_probe: Optional[pulumi.Input['GroupContainerLivenessProbeArgs']] = None, ports: Optional[pulumi.Input[List[pulumi.Input['GroupContainerPortArgs']]]] = None, readiness_probe: Optional[pulumi.Input['GroupContainerReadinessProbeArgs']] = None, secure_environment_variables: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None, volumes: Optional[pulumi.Input[List[pulumi.Input['GroupContainerVolumeArgs']]]] = None) -> None:
        """
        :param pulumi.Input[float] cpu: The required number of CPU cores of the containers. Changing this forces a new resource to be created.
        :param pulumi.Input[str] image: The container image name. Changing this forces a new resource to be created.
        :param pulumi.Input[float] memory: The required memory of the containers in GB. Changing this forces a new resource to be created.
        :param pulumi.Input[str] name: Specifies the name of the Container Group. Changing this forces a new resource to be created.
        :param pulumi.Input[List[pulumi.Input[str]]] commands: A list of commands which should be run on the container. Changing this forces a new resource to be created.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] environment_variables: A list of environment variables to be set on the container. Specified as a map of name/value pairs. Changing this forces a new resource to be created.
        :param pulumi.Input['GroupContainerGpuArgs'] gpu: A `gpu` block as defined below. Changing this forces a new resource to be created.
        :param pulumi.Input['GroupContainerLivenessProbeArgs'] liveness_probe: The definition of a readiness probe for this container as documented in the `liveness_probe` block below. Changing this forces a new resource to be created.
        :param pulumi.Input[List[pulumi.Input['GroupContainerPortArgs']]] ports: A set of public ports for the container. Changing this forces a new resource to be created. Set as documented in the `ports` block below.
        :param pulumi.Input['GroupContainerReadinessProbeArgs'] readiness_probe: The definition of a readiness probe for this container as documented in the `readiness_probe` block below. Changing this forces a new resource to be created.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] secure_environment_variables: A list of sensitive environment variables to be set on the container. Specified as a map of name/value pairs. Changing this forces a new resource to be created.
        :param pulumi.Input[List[pulumi.Input['GroupContainerVolumeArgs']]] volumes: The definition of a volume mount for this container as documented in the `volume` block below. Changing this forces a new resource to be created.
        """
        __self__.cpu = cpu
        __self__.image = image
        __self__.memory = memory
        __self__.name = name
        __self__.commands = commands
        __self__.environment_variables = environment_variables
        __self__.gpu = gpu
        __self__.liveness_probe = liveness_probe
        __self__.ports = ports
        __self__.readiness_probe = readiness_probe
        __self__.secure_environment_variables = secure_environment_variables
        __self__.volumes = volumes

@pulumi.input_type
class GroupContainerGpuArgs:
    count: Optional[pulumi.Input[float]] = pulumi.input_property("count")
    """
    The number of GPUs which should be assigned to this container. Allowed values are `1`, `2`, or `4`. Changing this forces a new resource to be created.
    """
    sku: Optional[pulumi.Input[str]] = pulumi.input_property("sku")
    """
    The Sku which should be used for the GPU. Possible values are `K80`, `P100`, or `V100`. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, count: Optional[pulumi.Input[float]] = None, sku: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[float] count: The number of GPUs which should be assigned to this container. Allowed values are `1`, `2`, or `4`. Changing this forces a new resource to be created.
        :param pulumi.Input[str] sku: The Sku which should be used for the GPU. Possible values are `K80`, `P100`, or `V100`. Changing this forces a new resource to be created.
        """
        __self__.count = count
        __self__.sku = sku

@pulumi.input_type
class GroupContainerLivenessProbeArgs:
    execs: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("execs")
    """
    Commands to be run to validate container readiness. Changing this forces a new resource to be created.
    """
    failure_threshold: Optional[pulumi.Input[float]] = pulumi.input_property("failureThreshold")
    """
    How many times to try the probe before restarting the container (liveness probe) or marking the container as unhealthy (readiness probe). The default value is `3` and the minimum value is `1`. Changing this forces a new resource to be created.
    """
    http_gets: Optional[pulumi.Input[List[pulumi.Input['GroupContainerLivenessProbeHttpGetArgs']]]] = pulumi.input_property("httpGets")
    """
    The definition of the httpget for this container as documented in the `httpget` block below. Changing this forces a new resource to be created.
    """
    initial_delay_seconds: Optional[pulumi.Input[float]] = pulumi.input_property("initialDelaySeconds")
    """
    Number of seconds after the container has started before liveness or readiness probes are initiated. Changing this forces a new resource to be created.
    """
    period_seconds: Optional[pulumi.Input[float]] = pulumi.input_property("periodSeconds")
    """
    How often (in seconds) to perform the probe. The default value is `10` and the minimum value is `1`. Changing this forces a new resource to be created.
    """
    success_threshold: Optional[pulumi.Input[float]] = pulumi.input_property("successThreshold")
    """
    Minimum consecutive successes for the probe to be considered successful after having failed. The default value is `1` and the minimum value is `1`. Changing this forces a new resource to be created.
    """
    timeout_seconds: Optional[pulumi.Input[float]] = pulumi.input_property("timeoutSeconds")
    """
    Number of seconds after which the probe times out. The default value is `1` and the minimum value is `1`. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, execs: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, failure_threshold: Optional[pulumi.Input[float]] = None, http_gets: Optional[pulumi.Input[List[pulumi.Input['GroupContainerLivenessProbeHttpGetArgs']]]] = None, initial_delay_seconds: Optional[pulumi.Input[float]] = None, period_seconds: Optional[pulumi.Input[float]] = None, success_threshold: Optional[pulumi.Input[float]] = None, timeout_seconds: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[str]]] execs: Commands to be run to validate container readiness. Changing this forces a new resource to be created.
        :param pulumi.Input[float] failure_threshold: How many times to try the probe before restarting the container (liveness probe) or marking the container as unhealthy (readiness probe). The default value is `3` and the minimum value is `1`. Changing this forces a new resource to be created.
        :param pulumi.Input[List[pulumi.Input['GroupContainerLivenessProbeHttpGetArgs']]] http_gets: The definition of the httpget for this container as documented in the `httpget` block below. Changing this forces a new resource to be created.
        :param pulumi.Input[float] initial_delay_seconds: Number of seconds after the container has started before liveness or readiness probes are initiated. Changing this forces a new resource to be created.
        :param pulumi.Input[float] period_seconds: How often (in seconds) to perform the probe. The default value is `10` and the minimum value is `1`. Changing this forces a new resource to be created.
        :param pulumi.Input[float] success_threshold: Minimum consecutive successes for the probe to be considered successful after having failed. The default value is `1` and the minimum value is `1`. Changing this forces a new resource to be created.
        :param pulumi.Input[float] timeout_seconds: Number of seconds after which the probe times out. The default value is `1` and the minimum value is `1`. Changing this forces a new resource to be created.
        """
        __self__.execs = execs
        __self__.failure_threshold = failure_threshold
        __self__.http_gets = http_gets
        __self__.initial_delay_seconds = initial_delay_seconds
        __self__.period_seconds = period_seconds
        __self__.success_threshold = success_threshold
        __self__.timeout_seconds = timeout_seconds

@pulumi.input_type
class GroupContainerLivenessProbeHttpGetArgs:
    path: Optional[pulumi.Input[str]] = pulumi.input_property("path")
    """
    Path to access on the HTTP server. Changing this forces a new resource to be created.
    """
    port: Optional[pulumi.Input[float]] = pulumi.input_property("port")
    """
    The port number the container will expose. Changing this forces a new resource to be created.
    """
    scheme: Optional[pulumi.Input[str]] = pulumi.input_property("scheme")
    """
    Scheme to use for connecting to the host. Possible values are `Http` and `Https`. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, path: Optional[pulumi.Input[str]] = None, port: Optional[pulumi.Input[float]] = None, scheme: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] path: Path to access on the HTTP server. Changing this forces a new resource to be created.
        :param pulumi.Input[float] port: The port number the container will expose. Changing this forces a new resource to be created.
        :param pulumi.Input[str] scheme: Scheme to use for connecting to the host. Possible values are `Http` and `Https`. Changing this forces a new resource to be created.
        """
        __self__.path = path
        __self__.port = port
        __self__.scheme = scheme

@pulumi.input_type
class GroupContainerPortArgs:
    port: Optional[pulumi.Input[float]] = pulumi.input_property("port")
    """
    The port number the container will expose. Changing this forces a new resource to be created.
    """
    protocol: Optional[pulumi.Input[str]] = pulumi.input_property("protocol")
    """
    The network protocol associated with port. Possible values are `TCP` & `UDP`. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, port: Optional[pulumi.Input[float]] = None, protocol: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[float] port: The port number the container will expose. Changing this forces a new resource to be created.
        :param pulumi.Input[str] protocol: The network protocol associated with port. Possible values are `TCP` & `UDP`. Changing this forces a new resource to be created.
        """
        __self__.port = port
        __self__.protocol = protocol

@pulumi.input_type
class GroupContainerReadinessProbeArgs:
    execs: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("execs")
    """
    Commands to be run to validate container readiness. Changing this forces a new resource to be created.
    """
    failure_threshold: Optional[pulumi.Input[float]] = pulumi.input_property("failureThreshold")
    """
    How many times to try the probe before restarting the container (liveness probe) or marking the container as unhealthy (readiness probe). The default value is `3` and the minimum value is `1`. Changing this forces a new resource to be created.
    """
    http_gets: Optional[pulumi.Input[List[pulumi.Input['GroupContainerReadinessProbeHttpGetArgs']]]] = pulumi.input_property("httpGets")
    """
    The definition of the httpget for this container as documented in the `httpget` block below. Changing this forces a new resource to be created.
    """
    initial_delay_seconds: Optional[pulumi.Input[float]] = pulumi.input_property("initialDelaySeconds")
    """
    Number of seconds after the container has started before liveness or readiness probes are initiated. Changing this forces a new resource to be created.
    """
    period_seconds: Optional[pulumi.Input[float]] = pulumi.input_property("periodSeconds")
    """
    How often (in seconds) to perform the probe. The default value is `10` and the minimum value is `1`. Changing this forces a new resource to be created.
    """
    success_threshold: Optional[pulumi.Input[float]] = pulumi.input_property("successThreshold")
    """
    Minimum consecutive successes for the probe to be considered successful after having failed. The default value is `1` and the minimum value is `1`. Changing this forces a new resource to be created.
    """
    timeout_seconds: Optional[pulumi.Input[float]] = pulumi.input_property("timeoutSeconds")
    """
    Number of seconds after which the probe times out. The default value is `1` and the minimum value is `1`. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, execs: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, failure_threshold: Optional[pulumi.Input[float]] = None, http_gets: Optional[pulumi.Input[List[pulumi.Input['GroupContainerReadinessProbeHttpGetArgs']]]] = None, initial_delay_seconds: Optional[pulumi.Input[float]] = None, period_seconds: Optional[pulumi.Input[float]] = None, success_threshold: Optional[pulumi.Input[float]] = None, timeout_seconds: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[str]]] execs: Commands to be run to validate container readiness. Changing this forces a new resource to be created.
        :param pulumi.Input[float] failure_threshold: How many times to try the probe before restarting the container (liveness probe) or marking the container as unhealthy (readiness probe). The default value is `3` and the minimum value is `1`. Changing this forces a new resource to be created.
        :param pulumi.Input[List[pulumi.Input['GroupContainerReadinessProbeHttpGetArgs']]] http_gets: The definition of the httpget for this container as documented in the `httpget` block below. Changing this forces a new resource to be created.
        :param pulumi.Input[float] initial_delay_seconds: Number of seconds after the container has started before liveness or readiness probes are initiated. Changing this forces a new resource to be created.
        :param pulumi.Input[float] period_seconds: How often (in seconds) to perform the probe. The default value is `10` and the minimum value is `1`. Changing this forces a new resource to be created.
        :param pulumi.Input[float] success_threshold: Minimum consecutive successes for the probe to be considered successful after having failed. The default value is `1` and the minimum value is `1`. Changing this forces a new resource to be created.
        :param pulumi.Input[float] timeout_seconds: Number of seconds after which the probe times out. The default value is `1` and the minimum value is `1`. Changing this forces a new resource to be created.
        """
        __self__.execs = execs
        __self__.failure_threshold = failure_threshold
        __self__.http_gets = http_gets
        __self__.initial_delay_seconds = initial_delay_seconds
        __self__.period_seconds = period_seconds
        __self__.success_threshold = success_threshold
        __self__.timeout_seconds = timeout_seconds

@pulumi.input_type
class GroupContainerReadinessProbeHttpGetArgs:
    path: Optional[pulumi.Input[str]] = pulumi.input_property("path")
    """
    Path to access on the HTTP server. Changing this forces a new resource to be created.
    """
    port: Optional[pulumi.Input[float]] = pulumi.input_property("port")
    """
    The port number the container will expose. Changing this forces a new resource to be created.
    """
    scheme: Optional[pulumi.Input[str]] = pulumi.input_property("scheme")
    """
    Scheme to use for connecting to the host. Possible values are `Http` and `Https`. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, path: Optional[pulumi.Input[str]] = None, port: Optional[pulumi.Input[float]] = None, scheme: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] path: Path to access on the HTTP server. Changing this forces a new resource to be created.
        :param pulumi.Input[float] port: The port number the container will expose. Changing this forces a new resource to be created.
        :param pulumi.Input[str] scheme: Scheme to use for connecting to the host. Possible values are `Http` and `Https`. Changing this forces a new resource to be created.
        """
        __self__.path = path
        __self__.port = port
        __self__.scheme = scheme

@pulumi.input_type
class GroupContainerVolumeArgs:
    mount_path: pulumi.Input[str] = pulumi.input_property("mountPath")
    """
    The path on which this volume is to be mounted. Changing this forces a new resource to be created.
    """
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    Specifies the name of the Container Group. Changing this forces a new resource to be created.
    """
    share_name: pulumi.Input[str] = pulumi.input_property("shareName")
    """
    The Azure storage share that is to be mounted as a volume. This must be created on the storage account specified as above. Changing this forces a new resource to be created.
    """
    storage_account_key: pulumi.Input[str] = pulumi.input_property("storageAccountKey")
    """
    The access key for the Azure Storage account specified as above. Changing this forces a new resource to be created.
    """
    storage_account_name: pulumi.Input[str] = pulumi.input_property("storageAccountName")
    """
    The Azure storage account from which the volume is to be mounted. Changing this forces a new resource to be created.
    """
    read_only: Optional[pulumi.Input[bool]] = pulumi.input_property("readOnly")
    """
    Specify if the volume is to be mounted as read only or not. The default value is `false`. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, mount_path: pulumi.Input[str], name: pulumi.Input[str], share_name: pulumi.Input[str], storage_account_key: pulumi.Input[str], storage_account_name: pulumi.Input[str], read_only: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[str] mount_path: The path on which this volume is to be mounted. Changing this forces a new resource to be created.
        :param pulumi.Input[str] name: Specifies the name of the Container Group. Changing this forces a new resource to be created.
        :param pulumi.Input[str] share_name: The Azure storage share that is to be mounted as a volume. This must be created on the storage account specified as above. Changing this forces a new resource to be created.
        :param pulumi.Input[str] storage_account_key: The access key for the Azure Storage account specified as above. Changing this forces a new resource to be created.
        :param pulumi.Input[str] storage_account_name: The Azure storage account from which the volume is to be mounted. Changing this forces a new resource to be created.
        :param pulumi.Input[bool] read_only: Specify if the volume is to be mounted as read only or not. The default value is `false`. Changing this forces a new resource to be created.
        """
        __self__.mount_path = mount_path
        __self__.name = name
        __self__.share_name = share_name
        __self__.storage_account_key = storage_account_key
        __self__.storage_account_name = storage_account_name
        __self__.read_only = read_only

@pulumi.input_type
class GroupDiagnosticsArgs:
    log_analytics: pulumi.Input['GroupDiagnosticsLogAnalyticsArgs'] = pulumi.input_property("logAnalytics")
    """
    A `log_analytics` block as defined below. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, log_analytics: pulumi.Input['GroupDiagnosticsLogAnalyticsArgs']) -> None:
        """
        :param pulumi.Input['GroupDiagnosticsLogAnalyticsArgs'] log_analytics: A `log_analytics` block as defined below. Changing this forces a new resource to be created.
        """
        __self__.log_analytics = log_analytics

@pulumi.input_type
class GroupDiagnosticsLogAnalyticsArgs:
    workspace_id: pulumi.Input[str] = pulumi.input_property("workspaceId")
    """
    The Workspace ID of the Log Analytics Workspace. Changing this forces a new resource to be created.
    """
    workspace_key: pulumi.Input[str] = pulumi.input_property("workspaceKey")
    """
    The Workspace Key of the Log Analytics Workspace. Changing this forces a new resource to be created.
    """
    log_type: Optional[pulumi.Input[str]] = pulumi.input_property("logType")
    """
    The log type which should be used. Possible values are `ContainerInsights` and `ContainerInstanceLogs`. Changing this forces a new resource to be created.
    """
    metadata: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("metadata")
    """
    Any metadata required for Log Analytics. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, workspace_id: pulumi.Input[str], workspace_key: pulumi.Input[str], log_type: Optional[pulumi.Input[str]] = None, metadata: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[str] workspace_id: The Workspace ID of the Log Analytics Workspace. Changing this forces a new resource to be created.
        :param pulumi.Input[str] workspace_key: The Workspace Key of the Log Analytics Workspace. Changing this forces a new resource to be created.
        :param pulumi.Input[str] log_type: The log type which should be used. Possible values are `ContainerInsights` and `ContainerInstanceLogs`. Changing this forces a new resource to be created.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] metadata: Any metadata required for Log Analytics. Changing this forces a new resource to be created.
        """
        __self__.workspace_id = workspace_id
        __self__.workspace_key = workspace_key
        __self__.log_type = log_type
        __self__.metadata = metadata

@pulumi.input_type
class GroupIdentityArgs:
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    The Managed Service Identity Type of this container group. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identity_ids` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities. Changing this forces a new resource to be created.
    """
    identity_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("identityIds")
    """
    Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`. Changing this forces a new resource to be created.
    """
    principal_id: Optional[pulumi.Input[str]] = pulumi.input_property("principalId")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, type: pulumi.Input[str], identity_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, principal_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] type: The Managed Service Identity Type of this container group. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identity_ids` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities. Changing this forces a new resource to be created.
        :param pulumi.Input[List[pulumi.Input[str]]] identity_ids: Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`. Changing this forces a new resource to be created.
        """
        __self__.type = type
        __self__.identity_ids = identity_ids
        __self__.principal_id = principal_id

@pulumi.input_type
class GroupImageRegistryCredentialArgs:
    password: pulumi.Input[str] = pulumi.input_property("password")
    """
    The password with which to connect to the registry. Changing this forces a new resource to be created.
    """
    server: pulumi.Input[str] = pulumi.input_property("server")
    """
    The address to use to connect to the registry without protocol ("https"/"http"). For example: "myacr.acr.io". Changing this forces a new resource to be created.
    """
    username: pulumi.Input[str] = pulumi.input_property("username")
    """
    The username with which to connect to the registry. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, password: pulumi.Input[str], server: pulumi.Input[str], username: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] password: The password with which to connect to the registry. Changing this forces a new resource to be created.
        :param pulumi.Input[str] server: The address to use to connect to the registry without protocol ("https"/"http"). For example: "myacr.acr.io". Changing this forces a new resource to be created.
        :param pulumi.Input[str] username: The username with which to connect to the registry. Changing this forces a new resource to be created.
        """
        __self__.password = password
        __self__.server = server
        __self__.username = username

@pulumi.input_type
class KubernetesClusterAddonProfileArgs:
    aci_connector_linux: Optional[pulumi.Input['KubernetesClusterAddonProfileAciConnectorLinuxArgs']] = pulumi.input_property("aciConnectorLinux")
    """
    A `aci_connector_linux` block. For more details, please visit [Create and configure an AKS cluster to use virtual nodes](https://docs.microsoft.com/en-us/azure/aks/virtual-nodes-portal).
    """
    azure_policy: Optional[pulumi.Input['KubernetesClusterAddonProfileAzurePolicyArgs']] = pulumi.input_property("azurePolicy")
    """
    A `azure_policy` block as defined below. For more details please visit [Understand Azure Policy for Azure Kubernetes Service](https://docs.microsoft.com/en-ie/azure/governance/policy/concepts/rego-for-aks)
    """
    http_application_routing: Optional[pulumi.Input['KubernetesClusterAddonProfileHttpApplicationRoutingArgs']] = pulumi.input_property("httpApplicationRouting")
    """
    A `http_application_routing` block as defined below.
    """
    kube_dashboard: Optional[pulumi.Input['KubernetesClusterAddonProfileKubeDashboardArgs']] = pulumi.input_property("kubeDashboard")
    """
    A `kube_dashboard` block as defined below.
    """
    oms_agent: Optional[pulumi.Input['KubernetesClusterAddonProfileOmsAgentArgs']] = pulumi.input_property("omsAgent")
    """
    A `oms_agent` block as defined below. For more details, please visit [How to onboard Azure Monitor for containers](https://docs.microsoft.com/en-us/azure/monitoring/monitoring-container-insights-onboard).
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, aci_connector_linux: Optional[pulumi.Input['KubernetesClusterAddonProfileAciConnectorLinuxArgs']] = None, azure_policy: Optional[pulumi.Input['KubernetesClusterAddonProfileAzurePolicyArgs']] = None, http_application_routing: Optional[pulumi.Input['KubernetesClusterAddonProfileHttpApplicationRoutingArgs']] = None, kube_dashboard: Optional[pulumi.Input['KubernetesClusterAddonProfileKubeDashboardArgs']] = None, oms_agent: Optional[pulumi.Input['KubernetesClusterAddonProfileOmsAgentArgs']] = None) -> None:
        """
        :param pulumi.Input['KubernetesClusterAddonProfileAciConnectorLinuxArgs'] aci_connector_linux: A `aci_connector_linux` block. For more details, please visit [Create and configure an AKS cluster to use virtual nodes](https://docs.microsoft.com/en-us/azure/aks/virtual-nodes-portal).
        :param pulumi.Input['KubernetesClusterAddonProfileAzurePolicyArgs'] azure_policy: A `azure_policy` block as defined below. For more details please visit [Understand Azure Policy for Azure Kubernetes Service](https://docs.microsoft.com/en-ie/azure/governance/policy/concepts/rego-for-aks)
        :param pulumi.Input['KubernetesClusterAddonProfileHttpApplicationRoutingArgs'] http_application_routing: A `http_application_routing` block as defined below.
        :param pulumi.Input['KubernetesClusterAddonProfileKubeDashboardArgs'] kube_dashboard: A `kube_dashboard` block as defined below.
        :param pulumi.Input['KubernetesClusterAddonProfileOmsAgentArgs'] oms_agent: A `oms_agent` block as defined below. For more details, please visit [How to onboard Azure Monitor for containers](https://docs.microsoft.com/en-us/azure/monitoring/monitoring-container-insights-onboard).
        """
        __self__.aci_connector_linux = aci_connector_linux
        __self__.azure_policy = azure_policy
        __self__.http_application_routing = http_application_routing
        __self__.kube_dashboard = kube_dashboard
        __self__.oms_agent = oms_agent

@pulumi.input_type
class KubernetesClusterAddonProfileAciConnectorLinuxArgs:
    enabled: pulumi.Input[bool] = pulumi.input_property("enabled")
    """
    Is the virtual node addon enabled?
    """
    subnet_name: Optional[pulumi.Input[str]] = pulumi.input_property("subnetName")
    """
    The subnet name for the virtual nodes to run. This is required when `aci_connector_linux` `enabled` argument is set to `true`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, enabled: pulumi.Input[bool], subnet_name: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[bool] enabled: Is the virtual node addon enabled?
        :param pulumi.Input[str] subnet_name: The subnet name for the virtual nodes to run. This is required when `aci_connector_linux` `enabled` argument is set to `true`.
        """
        __self__.enabled = enabled
        __self__.subnet_name = subnet_name

@pulumi.input_type
class KubernetesClusterAddonProfileAzurePolicyArgs:
    enabled: pulumi.Input[bool] = pulumi.input_property("enabled")
    """
    Is the Azure Policy for Kubernetes Add On enabled?
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, enabled: pulumi.Input[bool]) -> None:
        """
        :param pulumi.Input[bool] enabled: Is the Azure Policy for Kubernetes Add On enabled?
        """
        __self__.enabled = enabled

@pulumi.input_type
class KubernetesClusterAddonProfileHttpApplicationRoutingArgs:
    enabled: pulumi.Input[bool] = pulumi.input_property("enabled")
    """
    Is HTTP Application Routing Enabled? Changing this forces a new resource to be created.
    """
    http_application_routing_zone_name: Optional[pulumi.Input[str]] = pulumi.input_property("httpApplicationRoutingZoneName")
    """
    The Zone Name of the HTTP Application Routing.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, enabled: pulumi.Input[bool], http_application_routing_zone_name: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[bool] enabled: Is HTTP Application Routing Enabled? Changing this forces a new resource to be created.
        :param pulumi.Input[str] http_application_routing_zone_name: The Zone Name of the HTTP Application Routing.
        """
        __self__.enabled = enabled
        __self__.http_application_routing_zone_name = http_application_routing_zone_name

@pulumi.input_type
class KubernetesClusterAddonProfileKubeDashboardArgs:
    enabled: pulumi.Input[bool] = pulumi.input_property("enabled")
    """
    Is the Kubernetes Dashboard enabled?
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, enabled: pulumi.Input[bool]) -> None:
        """
        :param pulumi.Input[bool] enabled: Is the Kubernetes Dashboard enabled?
        """
        __self__.enabled = enabled

@pulumi.input_type
class KubernetesClusterAddonProfileOmsAgentArgs:
    enabled: pulumi.Input[bool] = pulumi.input_property("enabled")
    """
    Is the OMS Agent Enabled?
    """
    log_analytics_workspace_id: Optional[pulumi.Input[str]] = pulumi.input_property("logAnalyticsWorkspaceId")
    """
    The ID of the Log Analytics Workspace which the OMS Agent should send data to. Must be present if `enabled` is `true`.
    """
    oms_agent_identities: Optional[pulumi.Input[List[pulumi.Input['KubernetesClusterAddonProfileOmsAgentOmsAgentIdentityArgs']]]] = pulumi.input_property("omsAgentIdentities")
    """
    An `oms_agent_identity` block as defined below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, enabled: pulumi.Input[bool], log_analytics_workspace_id: Optional[pulumi.Input[str]] = None, oms_agent_identities: Optional[pulumi.Input[List[pulumi.Input['KubernetesClusterAddonProfileOmsAgentOmsAgentIdentityArgs']]]] = None) -> None:
        """
        :param pulumi.Input[bool] enabled: Is the OMS Agent Enabled?
        :param pulumi.Input[str] log_analytics_workspace_id: The ID of the Log Analytics Workspace which the OMS Agent should send data to. Must be present if `enabled` is `true`.
        :param pulumi.Input[List[pulumi.Input['KubernetesClusterAddonProfileOmsAgentOmsAgentIdentityArgs']]] oms_agent_identities: An `oms_agent_identity` block as defined below.
        """
        __self__.enabled = enabled
        __self__.log_analytics_workspace_id = log_analytics_workspace_id
        __self__.oms_agent_identities = oms_agent_identities

@pulumi.input_type
class KubernetesClusterAddonProfileOmsAgentOmsAgentIdentityArgs:
    client_id: Optional[pulumi.Input[str]] = pulumi.input_property("clientId")
    """
    The Client ID for the Service Principal.
    """
    object_id: Optional[pulumi.Input[str]] = pulumi.input_property("objectId")
    """
    The Object ID of the user-defined Managed Identity used by the OMS Agents.
    """
    user_assigned_identity_id: Optional[pulumi.Input[str]] = pulumi.input_property("userAssignedIdentityId")
    """
    The ID of the User Assigned Identity used by the OMS Agents.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, client_id: Optional[pulumi.Input[str]] = None, object_id: Optional[pulumi.Input[str]] = None, user_assigned_identity_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] client_id: The Client ID for the Service Principal.
        :param pulumi.Input[str] object_id: The Object ID of the user-defined Managed Identity used by the OMS Agents.
        :param pulumi.Input[str] user_assigned_identity_id: The ID of the User Assigned Identity used by the OMS Agents.
        """
        __self__.client_id = client_id
        __self__.object_id = object_id
        __self__.user_assigned_identity_id = user_assigned_identity_id

@pulumi.input_type
class KubernetesClusterAutoScalerProfileArgs:
    balance_similar_node_groups: Optional[pulumi.Input[bool]] = pulumi.input_property("balanceSimilarNodeGroups")
    """
    Detect similar node groups and balance the number of nodes between them. Defaults to `false`.
    """
    max_graceful_termination_sec: Optional[pulumi.Input[str]] = pulumi.input_property("maxGracefulTerminationSec")
    """
    Maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node. Defaults to `600`.
    """
    scale_down_delay_after_add: Optional[pulumi.Input[str]] = pulumi.input_property("scaleDownDelayAfterAdd")
    """
    How long after the scale up of AKS nodes the scale down evaluation resumes. Defaults to `10m`.
    """
    scale_down_delay_after_delete: Optional[pulumi.Input[str]] = pulumi.input_property("scaleDownDelayAfterDelete")
    """
    How long after node deletion that scale down evaluation resumes. Defaults to the value used for `scan_interval`.
    """
    scale_down_delay_after_failure: Optional[pulumi.Input[str]] = pulumi.input_property("scaleDownDelayAfterFailure")
    """
    How long after scale down failure that scale down evaluation resumes. Defaults to `3m`.
    """
    scale_down_unneeded: Optional[pulumi.Input[str]] = pulumi.input_property("scaleDownUnneeded")
    """
    How long a node should be unneeded before it is eligible for scale down. Defaults to `10m`.
    """
    scale_down_unready: Optional[pulumi.Input[str]] = pulumi.input_property("scaleDownUnready")
    """
    How long an unready node should be unneeded before it is eligible for scale down. Defaults to `20m`.
    """
    scale_down_utilization_threshold: Optional[pulumi.Input[str]] = pulumi.input_property("scaleDownUtilizationThreshold")
    """
    Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down. Defaults to `0.5`.
    """
    scan_interval: Optional[pulumi.Input[str]] = pulumi.input_property("scanInterval")
    """
    How often the AKS Cluster should be re-evaluated for scale up/down. Defaults to `10s`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, balance_similar_node_groups: Optional[pulumi.Input[bool]] = None, max_graceful_termination_sec: Optional[pulumi.Input[str]] = None, scale_down_delay_after_add: Optional[pulumi.Input[str]] = None, scale_down_delay_after_delete: Optional[pulumi.Input[str]] = None, scale_down_delay_after_failure: Optional[pulumi.Input[str]] = None, scale_down_unneeded: Optional[pulumi.Input[str]] = None, scale_down_unready: Optional[pulumi.Input[str]] = None, scale_down_utilization_threshold: Optional[pulumi.Input[str]] = None, scan_interval: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[bool] balance_similar_node_groups: Detect similar node groups and balance the number of nodes between them. Defaults to `false`.
        :param pulumi.Input[str] max_graceful_termination_sec: Maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node. Defaults to `600`.
        :param pulumi.Input[str] scale_down_delay_after_add: How long after the scale up of AKS nodes the scale down evaluation resumes. Defaults to `10m`.
        :param pulumi.Input[str] scale_down_delay_after_delete: How long after node deletion that scale down evaluation resumes. Defaults to the value used for `scan_interval`.
        :param pulumi.Input[str] scale_down_delay_after_failure: How long after scale down failure that scale down evaluation resumes. Defaults to `3m`.
        :param pulumi.Input[str] scale_down_unneeded: How long a node should be unneeded before it is eligible for scale down. Defaults to `10m`.
        :param pulumi.Input[str] scale_down_unready: How long an unready node should be unneeded before it is eligible for scale down. Defaults to `20m`.
        :param pulumi.Input[str] scale_down_utilization_threshold: Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down. Defaults to `0.5`.
        :param pulumi.Input[str] scan_interval: How often the AKS Cluster should be re-evaluated for scale up/down. Defaults to `10s`.
        """
        __self__.balance_similar_node_groups = balance_similar_node_groups
        __self__.max_graceful_termination_sec = max_graceful_termination_sec
        __self__.scale_down_delay_after_add = scale_down_delay_after_add
        __self__.scale_down_delay_after_delete = scale_down_delay_after_delete
        __self__.scale_down_delay_after_failure = scale_down_delay_after_failure
        __self__.scale_down_unneeded = scale_down_unneeded
        __self__.scale_down_unready = scale_down_unready
        __self__.scale_down_utilization_threshold = scale_down_utilization_threshold
        __self__.scan_interval = scan_interval

@pulumi.input_type
class KubernetesClusterDefaultNodePoolArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The name which should be used for the default Kubernetes Node Pool. Changing this forces a new resource to be created.
    """
    vm_size: pulumi.Input[str] = pulumi.input_property("vmSize")
    """
    The size of the Virtual Machine, such as `Standard_DS2_v2`.
    """
    availability_zones: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("availabilityZones")
    """
    A list of Availability Zones across which the Node Pool should be spread.
    """
    enable_auto_scaling: Optional[pulumi.Input[bool]] = pulumi.input_property("enableAutoScaling")
    """
    Should [the Kubernetes Auto Scaler](https://docs.microsoft.com/en-us/azure/aks/cluster-autoscaler) be enabled for this Node Pool? Defaults to `false`.
    """
    enable_node_public_ip: Optional[pulumi.Input[bool]] = pulumi.input_property("enableNodePublicIp")
    """
    Should nodes in this Node Pool have a Public IP Address? Defaults to `false`.
    """
    max_count: Optional[pulumi.Input[float]] = pulumi.input_property("maxCount")
    """
    The maximum number of nodes which should exist in this Node Pool. If specified this must be between `1` and `100`.
    """
    max_pods: Optional[pulumi.Input[float]] = pulumi.input_property("maxPods")
    """
    The maximum number of pods that can run on each agent. Changing this forces a new resource to be created.
    """
    min_count: Optional[pulumi.Input[float]] = pulumi.input_property("minCount")
    """
    The minimum number of nodes which should exist in this Node Pool. If specified this must be between `1` and `100`.
    """
    node_count: Optional[pulumi.Input[float]] = pulumi.input_property("nodeCount")
    """
    The initial number of nodes which should exist in this Node Pool. If specified this must be between `1` and `100` and between `min_count` and `max_count`.
    """
    node_labels: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("nodeLabels")
    """
    A map of Kubernetes labels which should be applied to nodes in the Default Node Pool. Changing this forces a new resource to be created.
    """
    node_taints: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("nodeTaints")
    """
    A list of Kubernetes taints which should be applied to nodes in the agent pool (e.g `key=value:NoSchedule`). Changing this forces a new resource to be created.
    """
    orchestrator_version: Optional[pulumi.Input[str]] = pulumi.input_property("orchestratorVersion")
    """
    Version of Kubernetes used for the Agents. If not specified, the latest recommended version will be used at provisioning time (but won't auto-upgrade)
    """
    os_disk_size_gb: Optional[pulumi.Input[float]] = pulumi.input_property("osDiskSizeGb")
    """
    The size of the OS Disk which should be used for each agent in the Node Pool. Changing this forces a new resource to be created.
    """
    tags: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("tags")
    """
    A mapping of tags to assign to the Node Pool.
    """
    type: Optional[pulumi.Input[str]] = pulumi.input_property("type")
    """
    The type of Node Pool which should be created. Possible values are `AvailabilitySet` and `VirtualMachineScaleSets`. Defaults to `VirtualMachineScaleSets`.
    """
    vnet_subnet_id: Optional[pulumi.Input[str]] = pulumi.input_property("vnetSubnetId")
    """
    The ID of a Subnet where the Kubernetes Node Pool should exist. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], vm_size: pulumi.Input[str], availability_zones: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, enable_auto_scaling: Optional[pulumi.Input[bool]] = None, enable_node_public_ip: Optional[pulumi.Input[bool]] = None, max_count: Optional[pulumi.Input[float]] = None, max_pods: Optional[pulumi.Input[float]] = None, min_count: Optional[pulumi.Input[float]] = None, node_count: Optional[pulumi.Input[float]] = None, node_labels: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None, node_taints: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, orchestrator_version: Optional[pulumi.Input[str]] = None, os_disk_size_gb: Optional[pulumi.Input[float]] = None, tags: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None, type: Optional[pulumi.Input[str]] = None, vnet_subnet_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] name: The name which should be used for the default Kubernetes Node Pool. Changing this forces a new resource to be created.
        :param pulumi.Input[str] vm_size: The size of the Virtual Machine, such as `Standard_DS2_v2`.
        :param pulumi.Input[List[pulumi.Input[str]]] availability_zones: A list of Availability Zones across which the Node Pool should be spread.
        :param pulumi.Input[bool] enable_auto_scaling: Should [the Kubernetes Auto Scaler](https://docs.microsoft.com/en-us/azure/aks/cluster-autoscaler) be enabled for this Node Pool? Defaults to `false`.
        :param pulumi.Input[bool] enable_node_public_ip: Should nodes in this Node Pool have a Public IP Address? Defaults to `false`.
        :param pulumi.Input[float] max_count: The maximum number of nodes which should exist in this Node Pool. If specified this must be between `1` and `100`.
        :param pulumi.Input[float] max_pods: The maximum number of pods that can run on each agent. Changing this forces a new resource to be created.
        :param pulumi.Input[float] min_count: The minimum number of nodes which should exist in this Node Pool. If specified this must be between `1` and `100`.
        :param pulumi.Input[float] node_count: The initial number of nodes which should exist in this Node Pool. If specified this must be between `1` and `100` and between `min_count` and `max_count`.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] node_labels: A map of Kubernetes labels which should be applied to nodes in the Default Node Pool. Changing this forces a new resource to be created.
        :param pulumi.Input[List[pulumi.Input[str]]] node_taints: A list of Kubernetes taints which should be applied to nodes in the agent pool (e.g `key=value:NoSchedule`). Changing this forces a new resource to be created.
        :param pulumi.Input[str] orchestrator_version: Version of Kubernetes used for the Agents. If not specified, the latest recommended version will be used at provisioning time (but won't auto-upgrade)
        :param pulumi.Input[float] os_disk_size_gb: The size of the OS Disk which should be used for each agent in the Node Pool. Changing this forces a new resource to be created.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] tags: A mapping of tags to assign to the Node Pool.
        :param pulumi.Input[str] type: The type of Node Pool which should be created. Possible values are `AvailabilitySet` and `VirtualMachineScaleSets`. Defaults to `VirtualMachineScaleSets`.
        :param pulumi.Input[str] vnet_subnet_id: The ID of a Subnet where the Kubernetes Node Pool should exist. Changing this forces a new resource to be created.
        """
        __self__.name = name
        __self__.vm_size = vm_size
        __self__.availability_zones = availability_zones
        __self__.enable_auto_scaling = enable_auto_scaling
        __self__.enable_node_public_ip = enable_node_public_ip
        __self__.max_count = max_count
        __self__.max_pods = max_pods
        __self__.min_count = min_count
        __self__.node_count = node_count
        __self__.node_labels = node_labels
        __self__.node_taints = node_taints
        __self__.orchestrator_version = orchestrator_version
        __self__.os_disk_size_gb = os_disk_size_gb
        __self__.tags = tags
        __self__.type = type
        __self__.vnet_subnet_id = vnet_subnet_id

@pulumi.input_type
class KubernetesClusterIdentityArgs:
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    The type of identity used for the managed cluster. At this time the only supported value is `SystemAssigned`.
    """
    principal_id: Optional[pulumi.Input[str]] = pulumi.input_property("principalId")
    """
    The principal id of the system assigned identity which is used by master components.
    """
    tenant_id: Optional[pulumi.Input[str]] = pulumi.input_property("tenantId")
    """
    The Tenant ID used for Azure Active Directory Application. If this isn't specified the Tenant ID of the current Subscription is used.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, type: pulumi.Input[str], principal_id: Optional[pulumi.Input[str]] = None, tenant_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] type: The type of identity used for the managed cluster. At this time the only supported value is `SystemAssigned`.
        :param pulumi.Input[str] principal_id: The principal id of the system assigned identity which is used by master components.
        :param pulumi.Input[str] tenant_id: The Tenant ID used for Azure Active Directory Application. If this isn't specified the Tenant ID of the current Subscription is used.
        """
        __self__.type = type
        __self__.principal_id = principal_id
        __self__.tenant_id = tenant_id

@pulumi.input_type
class KubernetesClusterKubeAdminConfigArgs:
    client_certificate: Optional[pulumi.Input[str]] = pulumi.input_property("clientCertificate")
    """
    Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
    """
    client_key: Optional[pulumi.Input[str]] = pulumi.input_property("clientKey")
    """
    Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
    """
    cluster_ca_certificate: Optional[pulumi.Input[str]] = pulumi.input_property("clusterCaCertificate")
    """
    Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
    """
    host: Optional[pulumi.Input[str]] = pulumi.input_property("host")
    """
    The Kubernetes cluster server host.
    """
    password: Optional[pulumi.Input[str]] = pulumi.input_property("password")
    """
    A password or token used to authenticate to the Kubernetes cluster.
    """
    username: Optional[pulumi.Input[str]] = pulumi.input_property("username")
    """
    A username used to authenticate to the Kubernetes cluster.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, client_certificate: Optional[pulumi.Input[str]] = None, client_key: Optional[pulumi.Input[str]] = None, cluster_ca_certificate: Optional[pulumi.Input[str]] = None, host: Optional[pulumi.Input[str]] = None, password: Optional[pulumi.Input[str]] = None, username: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] client_certificate: Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
        :param pulumi.Input[str] client_key: Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
        :param pulumi.Input[str] cluster_ca_certificate: Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
        :param pulumi.Input[str] host: The Kubernetes cluster server host.
        :param pulumi.Input[str] password: A password or token used to authenticate to the Kubernetes cluster.
        :param pulumi.Input[str] username: A username used to authenticate to the Kubernetes cluster.
        """
        __self__.client_certificate = client_certificate
        __self__.client_key = client_key
        __self__.cluster_ca_certificate = cluster_ca_certificate
        __self__.host = host
        __self__.password = password
        __self__.username = username

@pulumi.input_type
class KubernetesClusterKubeConfigArgs:
    client_certificate: Optional[pulumi.Input[str]] = pulumi.input_property("clientCertificate")
    """
    Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
    """
    client_key: Optional[pulumi.Input[str]] = pulumi.input_property("clientKey")
    """
    Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
    """
    cluster_ca_certificate: Optional[pulumi.Input[str]] = pulumi.input_property("clusterCaCertificate")
    """
    Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
    """
    host: Optional[pulumi.Input[str]] = pulumi.input_property("host")
    """
    The Kubernetes cluster server host.
    """
    password: Optional[pulumi.Input[str]] = pulumi.input_property("password")
    """
    A password or token used to authenticate to the Kubernetes cluster.
    """
    username: Optional[pulumi.Input[str]] = pulumi.input_property("username")
    """
    A username used to authenticate to the Kubernetes cluster.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, client_certificate: Optional[pulumi.Input[str]] = None, client_key: Optional[pulumi.Input[str]] = None, cluster_ca_certificate: Optional[pulumi.Input[str]] = None, host: Optional[pulumi.Input[str]] = None, password: Optional[pulumi.Input[str]] = None, username: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] client_certificate: Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
        :param pulumi.Input[str] client_key: Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
        :param pulumi.Input[str] cluster_ca_certificate: Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
        :param pulumi.Input[str] host: The Kubernetes cluster server host.
        :param pulumi.Input[str] password: A password or token used to authenticate to the Kubernetes cluster.
        :param pulumi.Input[str] username: A username used to authenticate to the Kubernetes cluster.
        """
        __self__.client_certificate = client_certificate
        __self__.client_key = client_key
        __self__.cluster_ca_certificate = cluster_ca_certificate
        __self__.host = host
        __self__.password = password
        __self__.username = username

@pulumi.input_type
class KubernetesClusterKubeletIdentityArgs:
    client_id: Optional[pulumi.Input[str]] = pulumi.input_property("clientId")
    """
    The Client ID for the Service Principal.
    """
    object_id: Optional[pulumi.Input[str]] = pulumi.input_property("objectId")
    """
    The Object ID of the user-defined Managed Identity used by the OMS Agents.
    """
    user_assigned_identity_id: Optional[pulumi.Input[str]] = pulumi.input_property("userAssignedIdentityId")
    """
    The ID of the User Assigned Identity used by the OMS Agents.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, client_id: Optional[pulumi.Input[str]] = None, object_id: Optional[pulumi.Input[str]] = None, user_assigned_identity_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] client_id: The Client ID for the Service Principal.
        :param pulumi.Input[str] object_id: The Object ID of the user-defined Managed Identity used by the OMS Agents.
        :param pulumi.Input[str] user_assigned_identity_id: The ID of the User Assigned Identity used by the OMS Agents.
        """
        __self__.client_id = client_id
        __self__.object_id = object_id
        __self__.user_assigned_identity_id = user_assigned_identity_id

@pulumi.input_type
class KubernetesClusterLinuxProfileArgs:
    admin_username: pulumi.Input[str] = pulumi.input_property("adminUsername")
    """
    The Admin Username for the Cluster. Changing this forces a new resource to be created.
    """
    ssh_key: pulumi.Input['KubernetesClusterLinuxProfileSshKeyArgs'] = pulumi.input_property("sshKey")
    """
    An `ssh_key` block. Only one is currently allowed. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, admin_username: pulumi.Input[str], ssh_key: pulumi.Input['KubernetesClusterLinuxProfileSshKeyArgs']) -> None:
        """
        :param pulumi.Input[str] admin_username: The Admin Username for the Cluster. Changing this forces a new resource to be created.
        :param pulumi.Input['KubernetesClusterLinuxProfileSshKeyArgs'] ssh_key: An `ssh_key` block. Only one is currently allowed. Changing this forces a new resource to be created.
        """
        __self__.admin_username = admin_username
        __self__.ssh_key = ssh_key

@pulumi.input_type
class KubernetesClusterLinuxProfileSshKeyArgs:
    key_data: pulumi.Input[str] = pulumi.input_property("keyData")
    """
    The Public SSH Key used to access the cluster. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, key_data: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] key_data: The Public SSH Key used to access the cluster. Changing this forces a new resource to be created.
        """
        __self__.key_data = key_data

@pulumi.input_type
class KubernetesClusterNetworkProfileArgs:
    network_plugin: pulumi.Input[str] = pulumi.input_property("networkPlugin")
    """
    Network plugin to use for networking. Currently supported values are `azure` and `kubenet`. Changing this forces a new resource to be created.
    """
    dns_service_ip: Optional[pulumi.Input[str]] = pulumi.input_property("dnsServiceIp")
    """
    IP address within the Kubernetes service address range that will be used by cluster service discovery (kube-dns). Changing this forces a new resource to be created.
    """
    docker_bridge_cidr: Optional[pulumi.Input[str]] = pulumi.input_property("dockerBridgeCidr")
    """
    IP address (in CIDR notation) used as the Docker bridge IP address on nodes. Changing this forces a new resource to be created.
    """
    load_balancer_profile: Optional[pulumi.Input['KubernetesClusterNetworkProfileLoadBalancerProfileArgs']] = pulumi.input_property("loadBalancerProfile")
    """
    A `load_balancer_profile` block. This can only be specified when `load_balancer_sku` is set to `Standard`.
    """
    load_balancer_sku: Optional[pulumi.Input[str]] = pulumi.input_property("loadBalancerSku")
    """
    Specifies the SKU of the Load Balancer used for this Kubernetes Cluster. Possible values are `Basic` and `Standard`. Defaults to `Standard`.
    """
    network_policy: Optional[pulumi.Input[str]] = pulumi.input_property("networkPolicy")
    """
    Sets up network policy to be used with Azure CNI. [Network policy allows us to control the traffic flow between pods](https://docs.microsoft.com/en-us/azure/aks/use-network-policies). Currently supported values are `calico` and `azure`. Changing this forces a new resource to be created.
    """
    outbound_type: Optional[pulumi.Input[str]] = pulumi.input_property("outboundType")
    """
    The outbound (egress) routing method which should be used for this Kubernetes Cluster. Possible values are `loadBalancer` and `userDefinedRouting`. Defaults to `loadBalancer`.
    """
    pod_cidr: Optional[pulumi.Input[str]] = pulumi.input_property("podCidr")
    """
    The CIDR to use for pod IP addresses. This field can only be set when `network_plugin` is set to `kubenet`. Changing this forces a new resource to be created.
    """
    service_cidr: Optional[pulumi.Input[str]] = pulumi.input_property("serviceCidr")
    """
    The Network Range used by the Kubernetes service. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, network_plugin: pulumi.Input[str], dns_service_ip: Optional[pulumi.Input[str]] = None, docker_bridge_cidr: Optional[pulumi.Input[str]] = None, load_balancer_profile: Optional[pulumi.Input['KubernetesClusterNetworkProfileLoadBalancerProfileArgs']] = None, load_balancer_sku: Optional[pulumi.Input[str]] = None, network_policy: Optional[pulumi.Input[str]] = None, outbound_type: Optional[pulumi.Input[str]] = None, pod_cidr: Optional[pulumi.Input[str]] = None, service_cidr: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] network_plugin: Network plugin to use for networking. Currently supported values are `azure` and `kubenet`. Changing this forces a new resource to be created.
        :param pulumi.Input[str] dns_service_ip: IP address within the Kubernetes service address range that will be used by cluster service discovery (kube-dns). Changing this forces a new resource to be created.
        :param pulumi.Input[str] docker_bridge_cidr: IP address (in CIDR notation) used as the Docker bridge IP address on nodes. Changing this forces a new resource to be created.
        :param pulumi.Input['KubernetesClusterNetworkProfileLoadBalancerProfileArgs'] load_balancer_profile: A `load_balancer_profile` block. This can only be specified when `load_balancer_sku` is set to `Standard`.
        :param pulumi.Input[str] load_balancer_sku: Specifies the SKU of the Load Balancer used for this Kubernetes Cluster. Possible values are `Basic` and `Standard`. Defaults to `Standard`.
        :param pulumi.Input[str] network_policy: Sets up network policy to be used with Azure CNI. [Network policy allows us to control the traffic flow between pods](https://docs.microsoft.com/en-us/azure/aks/use-network-policies). Currently supported values are `calico` and `azure`. Changing this forces a new resource to be created.
        :param pulumi.Input[str] outbound_type: The outbound (egress) routing method which should be used for this Kubernetes Cluster. Possible values are `loadBalancer` and `userDefinedRouting`. Defaults to `loadBalancer`.
        :param pulumi.Input[str] pod_cidr: The CIDR to use for pod IP addresses. This field can only be set when `network_plugin` is set to `kubenet`. Changing this forces a new resource to be created.
        :param pulumi.Input[str] service_cidr: The Network Range used by the Kubernetes service. Changing this forces a new resource to be created.
        """
        __self__.network_plugin = network_plugin
        __self__.dns_service_ip = dns_service_ip
        __self__.docker_bridge_cidr = docker_bridge_cidr
        __self__.load_balancer_profile = load_balancer_profile
        __self__.load_balancer_sku = load_balancer_sku
        __self__.network_policy = network_policy
        __self__.outbound_type = outbound_type
        __self__.pod_cidr = pod_cidr
        __self__.service_cidr = service_cidr

@pulumi.input_type
class KubernetesClusterNetworkProfileLoadBalancerProfileArgs:
    effective_outbound_ips: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("effectiveOutboundIps")
    """
    The outcome (resource IDs) of the specified arguments.
    """
    idle_timeout_in_minutes: Optional[pulumi.Input[float]] = pulumi.input_property("idleTimeoutInMinutes")
    """
    Desired outbound flow idle timeout in minutes for the cluster load balancer. Must be between `4` and `120` inclusive. Defaults to `30`.
    """
    managed_outbound_ip_count: Optional[pulumi.Input[float]] = pulumi.input_property("managedOutboundIpCount")
    """
    Count of desired managed outbound IPs for the cluster load balancer. Must be between `1` and `100` inclusive.
    """
    outbound_ip_address_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("outboundIpAddressIds")
    """
    The ID of the Public IP Addresses which should be used for outbound communication for the cluster load balancer.
    """
    outbound_ip_prefix_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("outboundIpPrefixIds")
    """
    The ID of the outbound Public IP Address Prefixes which should be used for the cluster load balancer.
    """
    outbound_ports_allocated: Optional[pulumi.Input[float]] = pulumi.input_property("outboundPortsAllocated")
    """
    Number of desired SNAT port for each VM in the clusters load balancer. Must be between `0` and `64000` inclusive. Defaults to `0`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, effective_outbound_ips: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, idle_timeout_in_minutes: Optional[pulumi.Input[float]] = None, managed_outbound_ip_count: Optional[pulumi.Input[float]] = None, outbound_ip_address_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, outbound_ip_prefix_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, outbound_ports_allocated: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[str]]] effective_outbound_ips: The outcome (resource IDs) of the specified arguments.
        :param pulumi.Input[float] idle_timeout_in_minutes: Desired outbound flow idle timeout in minutes for the cluster load balancer. Must be between `4` and `120` inclusive. Defaults to `30`.
        :param pulumi.Input[float] managed_outbound_ip_count: Count of desired managed outbound IPs for the cluster load balancer. Must be between `1` and `100` inclusive.
        :param pulumi.Input[List[pulumi.Input[str]]] outbound_ip_address_ids: The ID of the Public IP Addresses which should be used for outbound communication for the cluster load balancer.
        :param pulumi.Input[List[pulumi.Input[str]]] outbound_ip_prefix_ids: The ID of the outbound Public IP Address Prefixes which should be used for the cluster load balancer.
        :param pulumi.Input[float] outbound_ports_allocated: Number of desired SNAT port for each VM in the clusters load balancer. Must be between `0` and `64000` inclusive. Defaults to `0`.
        """
        __self__.effective_outbound_ips = effective_outbound_ips
        __self__.idle_timeout_in_minutes = idle_timeout_in_minutes
        __self__.managed_outbound_ip_count = managed_outbound_ip_count
        __self__.outbound_ip_address_ids = outbound_ip_address_ids
        __self__.outbound_ip_prefix_ids = outbound_ip_prefix_ids
        __self__.outbound_ports_allocated = outbound_ports_allocated

@pulumi.input_type
class KubernetesClusterRoleBasedAccessControlArgs:
    enabled: pulumi.Input[bool] = pulumi.input_property("enabled")
    """
    Is Role Based Access Control Enabled? Changing this forces a new resource to be created.
    """
    azure_active_directory: Optional[pulumi.Input['KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArgs']] = pulumi.input_property("azureActiveDirectory")
    """
    An `azure_active_directory` block.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, enabled: pulumi.Input[bool], azure_active_directory: Optional[pulumi.Input['KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArgs']] = None) -> None:
        """
        :param pulumi.Input[bool] enabled: Is Role Based Access Control Enabled? Changing this forces a new resource to be created.
        :param pulumi.Input['KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArgs'] azure_active_directory: An `azure_active_directory` block.
        """
        __self__.enabled = enabled
        __self__.azure_active_directory = azure_active_directory

@pulumi.input_type
class KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArgs:
    admin_group_object_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("adminGroupObjectIds")
    """
    A list of Object IDs of Azure Active Directory Groups which should have Admin Role on the Cluster.
    """
    client_app_id: Optional[pulumi.Input[str]] = pulumi.input_property("clientAppId")
    """
    The Client ID of an Azure Active Directory Application.
    """
    managed: Optional[pulumi.Input[bool]] = pulumi.input_property("managed")
    """
    Is the Azure Active Directory integration Managed, meaning that Azure will create/manage the Service Principal used for integration.
    """
    server_app_id: Optional[pulumi.Input[str]] = pulumi.input_property("serverAppId")
    """
    The Server ID of an Azure Active Directory Application.
    """
    server_app_secret: Optional[pulumi.Input[str]] = pulumi.input_property("serverAppSecret")
    """
    The Server Secret of an Azure Active Directory Application.
    """
    tenant_id: Optional[pulumi.Input[str]] = pulumi.input_property("tenantId")
    """
    The Tenant ID used for Azure Active Directory Application. If this isn't specified the Tenant ID of the current Subscription is used.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, admin_group_object_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, client_app_id: Optional[pulumi.Input[str]] = None, managed: Optional[pulumi.Input[bool]] = None, server_app_id: Optional[pulumi.Input[str]] = None, server_app_secret: Optional[pulumi.Input[str]] = None, tenant_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[str]]] admin_group_object_ids: A list of Object IDs of Azure Active Directory Groups which should have Admin Role on the Cluster.
        :param pulumi.Input[str] client_app_id: The Client ID of an Azure Active Directory Application.
        :param pulumi.Input[bool] managed: Is the Azure Active Directory integration Managed, meaning that Azure will create/manage the Service Principal used for integration.
        :param pulumi.Input[str] server_app_id: The Server ID of an Azure Active Directory Application.
        :param pulumi.Input[str] server_app_secret: The Server Secret of an Azure Active Directory Application.
        :param pulumi.Input[str] tenant_id: The Tenant ID used for Azure Active Directory Application. If this isn't specified the Tenant ID of the current Subscription is used.
        """
        __self__.admin_group_object_ids = admin_group_object_ids
        __self__.client_app_id = client_app_id
        __self__.managed = managed
        __self__.server_app_id = server_app_id
        __self__.server_app_secret = server_app_secret
        __self__.tenant_id = tenant_id

@pulumi.input_type
class KubernetesClusterServicePrincipalArgs:
    client_id: pulumi.Input[str] = pulumi.input_property("clientId")
    """
    The Client ID for the Service Principal.
    """
    client_secret: pulumi.Input[str] = pulumi.input_property("clientSecret")
    """
    The Client Secret for the Service Principal.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, client_id: pulumi.Input[str], client_secret: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] client_id: The Client ID for the Service Principal.
        :param pulumi.Input[str] client_secret: The Client Secret for the Service Principal.
        """
        __self__.client_id = client_id
        __self__.client_secret = client_secret

@pulumi.input_type
class KubernetesClusterWindowsProfileArgs:
    admin_username: pulumi.Input[str] = pulumi.input_property("adminUsername")
    """
    The Admin Username for Windows VMs.
    """
    admin_password: Optional[pulumi.Input[str]] = pulumi.input_property("adminPassword")
    """
    The Admin Password for Windows VMs.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, admin_username: pulumi.Input[str], admin_password: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] admin_username: The Admin Username for Windows VMs.
        :param pulumi.Input[str] admin_password: The Admin Password for Windows VMs.
        """
        __self__.admin_username = admin_username
        __self__.admin_password = admin_password

@pulumi.input_type
class RegistryNetworkRuleSetArgs:
    default_action: Optional[pulumi.Input[str]] = pulumi.input_property("defaultAction")
    """
    The behaviour for requests matching no rules. Either `Allow` or `Deny`. Defaults to `Allow`
    """
    ip_rules: Optional[pulumi.Input[List[pulumi.Input['RegistryNetworkRuleSetIpRuleArgs']]]] = pulumi.input_property("ipRules")
    """
    One or more `ip_rule` blocks as defined below.
    """
    virtual_networks: Optional[pulumi.Input[List[pulumi.Input['RegistryNetworkRuleSetVirtualNetworkArgs']]]] = pulumi.input_property("virtualNetworks")
    """
    One or more `virtual_network` blocks as defined below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, default_action: Optional[pulumi.Input[str]] = None, ip_rules: Optional[pulumi.Input[List[pulumi.Input['RegistryNetworkRuleSetIpRuleArgs']]]] = None, virtual_networks: Optional[pulumi.Input[List[pulumi.Input['RegistryNetworkRuleSetVirtualNetworkArgs']]]] = None) -> None:
        """
        :param pulumi.Input[str] default_action: The behaviour for requests matching no rules. Either `Allow` or `Deny`. Defaults to `Allow`
        :param pulumi.Input[List[pulumi.Input['RegistryNetworkRuleSetIpRuleArgs']]] ip_rules: One or more `ip_rule` blocks as defined below.
        :param pulumi.Input[List[pulumi.Input['RegistryNetworkRuleSetVirtualNetworkArgs']]] virtual_networks: One or more `virtual_network` blocks as defined below.
        """
        __self__.default_action = default_action
        __self__.ip_rules = ip_rules
        __self__.virtual_networks = virtual_networks

@pulumi.input_type
class RegistryNetworkRuleSetIpRuleArgs:
    action: pulumi.Input[str] = pulumi.input_property("action")
    """
    The behaviour for requests matching this rule. At this time the only supported value is `Allow`
    """
    ip_range: pulumi.Input[str] = pulumi.input_property("ipRange")
    """
    The CIDR block from which requests will match the rule.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, action: pulumi.Input[str], ip_range: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] action: The behaviour for requests matching this rule. At this time the only supported value is `Allow`
        :param pulumi.Input[str] ip_range: The CIDR block from which requests will match the rule.
        """
        __self__.action = action
        __self__.ip_range = ip_range

@pulumi.input_type
class RegistryNetworkRuleSetVirtualNetworkArgs:
    action: pulumi.Input[str] = pulumi.input_property("action")
    """
    The behaviour for requests matching this rule. At this time the only supported value is `Allow`
    """
    subnet_id: pulumi.Input[str] = pulumi.input_property("subnetId")
    """
    The subnet id from which requests will match the rule.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, action: pulumi.Input[str], subnet_id: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] action: The behaviour for requests matching this rule. At this time the only supported value is `Allow`
        :param pulumi.Input[str] subnet_id: The subnet id from which requests will match the rule.
        """
        __self__.action = action
        __self__.subnet_id = subnet_id

