# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'DatabaseExtendedAuditingPolicy',
    'DatabaseThreatDetectionPolicy',
    'DatabaseVulnerabilityAssessmentRuleBaselineBaselineResult',
    'ElasticPoolPerDatabaseSettings',
    'ElasticPoolSku',
    'ServerAzureadAdministrator',
    'ServerExtendedAuditingPolicy',
    'ServerIdentity',
    'ServerVulnerabilityAssessmentRecurringScans',
    'VirtualMachineAutoPatching',
    'VirtualMachineKeyVaultCredential',
]

@pulumi.output_type
class DatabaseExtendedAuditingPolicy(dict):
    retention_in_days: Optional[float] = pulumi.output_property("retentionInDays")
    """
    Specifies the number of days to retain logs for in the storage account.
    """
    storage_account_access_key: str = pulumi.output_property("storageAccountAccessKey")
    """
    Specifies the access key to use for the auditing storage account.
    """
    storage_account_access_key_is_secondary: Optional[bool] = pulumi.output_property("storageAccountAccessKeyIsSecondary")
    """
    Specifies whether `storage_account_access_key` value is the storage's secondary key.
    """
    storage_endpoint: str = pulumi.output_property("storageEndpoint")
    """
    Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net).
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DatabaseThreatDetectionPolicy(dict):
    disabled_alerts: Optional[List[str]] = pulumi.output_property("disabledAlerts")
    """
    Specifies a list of alerts which should be disabled. Possible values include `Access_Anomaly`, `Sql_Injection` and `Sql_Injection_Vulnerability`.
    """
    email_account_admins: Optional[str] = pulumi.output_property("emailAccountAdmins")
    """
    Should the account administrators be emailed when this alert is triggered?
    """
    email_addresses: Optional[List[str]] = pulumi.output_property("emailAddresses")
    """
    A list of email addresses which alerts should be sent to.
    """
    retention_days: Optional[float] = pulumi.output_property("retentionDays")
    """
    Specifies the number of days to keep in the Threat Detection audit logs.
    """
    state: Optional[str] = pulumi.output_property("state")
    """
    The State of the Policy. Possible values are `Enabled`, `Disabled` or `New`.
    """
    storage_account_access_key: Optional[str] = pulumi.output_property("storageAccountAccessKey")
    """
    Specifies the identifier key of the Threat Detection audit storage account. Required if `state` is `Enabled`.
    """
    storage_endpoint: Optional[str] = pulumi.output_property("storageEndpoint")
    """
    Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs. Required if `state` is `Enabled`.
    """
    use_server_default: Optional[str] = pulumi.output_property("useServerDefault")
    """
    Should the default server policy be used? Defaults to `Disabled`.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DatabaseVulnerabilityAssessmentRuleBaselineBaselineResult(dict):
    results: List[str] = pulumi.output_property("results")
    """
    A list representing a result of the baseline.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ElasticPoolPerDatabaseSettings(dict):
    max_capacity: float = pulumi.output_property("maxCapacity")
    """
    The maximum capacity any one database can consume.
    """
    min_capacity: float = pulumi.output_property("minCapacity")
    """
    The minimum capacity all databases are guaranteed.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ElasticPoolSku(dict):
    capacity: float = pulumi.output_property("capacity")
    """
    The scale up/out capacity, representing server's compute units. For more information see the documentation for your Elasticpool configuration: [vCore-based](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-vcore-resource-limits-elastic-pools) or [DTU-based](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-dtu-resource-limits-elastic-pools).
    """
    family: Optional[str] = pulumi.output_property("family")
    """
    The `family` of hardware `Gen4` or `Gen5`.
    """
    name: str = pulumi.output_property("name")
    """
    Specifies the SKU Name for this Elasticpool. The name of the SKU, will be either `vCore` based `tier` + `family` pattern (e.g. GP_Gen4, BC_Gen5) or the `DTU` based `BasicPool`, `StandardPool`, or `PremiumPool` pattern.
    """
    tier: str = pulumi.output_property("tier")
    """
    The tier of the particular SKU. Possible values are `GeneralPurpose`, `BusinessCritical`, `Basic`, `Standard`, or `Premium`. For more information see the documentation for your Elasticpool configuration: [vCore-based](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-vcore-resource-limits-elastic-pools) or [DTU-based](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-dtu-resource-limits-elastic-pools).
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ServerAzureadAdministrator(dict):
    login_username: str = pulumi.output_property("loginUsername")
    """
    (Required)  The login username of the Azure AD Administrator of this SQL Server.
    """
    object_id: str = pulumi.output_property("objectId")
    """
    (Required) The object id of the Azure AD Administrator of this SQL Server.
    """
    tenant_id: Optional[str] = pulumi.output_property("tenantId")
    """
    (Optional) The tenant id of the Azure AD Administrator of this SQL Server.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ServerExtendedAuditingPolicy(dict):
    retention_in_days: Optional[float] = pulumi.output_property("retentionInDays")
    """
    (Optional) Specifies the number of days to retain logs for in the storage account.
    """
    storage_account_access_key: str = pulumi.output_property("storageAccountAccessKey")
    """
    (Required)  Specifies the access key to use for the auditing storage account.
    """
    storage_account_access_key_is_secondary: Optional[bool] = pulumi.output_property("storageAccountAccessKeyIsSecondary")
    """
    (Optional) Specifies whether `storage_account_access_key` value is the storage's secondary key.
    """
    storage_endpoint: str = pulumi.output_property("storageEndpoint")
    """
    (Required) Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net).
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ServerIdentity(dict):
    principal_id: Optional[str] = pulumi.output_property("principalId")
    """
    The Principal ID for the Service Principal associated with the Identity of this SQL Server.
    """
    tenant_id: Optional[str] = pulumi.output_property("tenantId")
    """
    (Optional) The tenant id of the Azure AD Administrator of this SQL Server.
    """
    type: str = pulumi.output_property("type")
    """
    Specifies the identity type of the Microsoft SQL Server. At this time the only allowed value is `SystemAssigned`.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ServerVulnerabilityAssessmentRecurringScans(dict):
    email_subscription_admins: Optional[bool] = pulumi.output_property("emailSubscriptionAdmins")
    """
    Boolean flag which specifies if the schedule scan notification will be sent to the subscription administrators. Defaults to `false`.
    """
    emails: Optional[List[str]] = pulumi.output_property("emails")
    """
    Specifies an array of e-mail addresses to which the scan notification is sent.
    """
    enabled: Optional[bool] = pulumi.output_property("enabled")
    """
    Boolean flag which specifies if recurring scans is enabled or disabled. Defaults to `false`.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class VirtualMachineAutoPatching(dict):
    day_of_week: str = pulumi.output_property("dayOfWeek")
    """
    The day of week to apply the patch on.
    """
    maintenance_window_duration_in_minutes: float = pulumi.output_property("maintenanceWindowDurationInMinutes")
    """
    The size of the Maintenance Window in minutes.
    """
    maintenance_window_starting_hour: float = pulumi.output_property("maintenanceWindowStartingHour")
    """
    The Hour, in the Virtual Machine Time-Zone when the patching maintenance window should begin.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class VirtualMachineKeyVaultCredential(dict):
    key_vault_url: str = pulumi.output_property("keyVaultUrl")
    """
    The azure Key Vault url. Changing this forces a new resource to be created.
    """
    name: str = pulumi.output_property("name")
    """
    The credential name.
    """
    service_principal_name: str = pulumi.output_property("servicePrincipalName")
    """
    The service principal name to access key vault. Changing this forces a new resource to be created.
    """
    service_principal_secret: str = pulumi.output_property("servicePrincipalSecret")
    """
    The service principal name secret to access key vault. Changing this forces a new resource to be created.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


