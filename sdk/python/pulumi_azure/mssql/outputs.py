# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Mapping, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'DatabaseExtendedAuditingPolicy',
    'DatabaseThreatDetectionPolicy',
    'DatabaseVulnerabilityAssessmentRuleBaselineBaselineResult',
    'ElasticPoolPerDatabaseSettings',
    'ElasticPoolSku',
    'ServerAzureadAdministrator',
    'ServerExtendedAuditingPolicy',
    'ServerIdentity',
    'ServerVulnerabilityAssessmentRecurringScans',
    'VirtualMachineAutoPatching',
    'VirtualMachineKeyVaultCredential',
]

@pulumi.output_type
class DatabaseExtendedAuditingPolicy(dict):
    @property
    @pulumi.getter(name="retentionInDays")
    def retention_in_days(self) -> Optional[float]:
        """
        Specifies the number of days to retain logs for in the storage account.
        """
        ...

    @property
    @pulumi.getter(name="storageAccountAccessKey")
    def storage_account_access_key(self) -> str:
        """
        Specifies the access key to use for the auditing storage account.
        """
        ...

    @property
    @pulumi.getter(name="storageAccountAccessKeyIsSecondary")
    def storage_account_access_key_is_secondary(self) -> Optional[bool]:
        """
        Specifies whether `storage_account_access_key` value is the storage's secondary key.
        """
        ...

    @property
    @pulumi.getter(name="storageEndpoint")
    def storage_endpoint(self) -> str:
        """
        Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net).
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DatabaseThreatDetectionPolicy(dict):
    @property
    @pulumi.getter(name="disabledAlerts")
    def disabled_alerts(self) -> Optional[List[str]]:
        """
        Specifies a list of alerts which should be disabled. Possible values include `Access_Anomaly`, `Sql_Injection` and `Sql_Injection_Vulnerability`.
        """
        ...

    @property
    @pulumi.getter(name="emailAccountAdmins")
    def email_account_admins(self) -> Optional[str]:
        """
        Should the account administrators be emailed when this alert is triggered?
        """
        ...

    @property
    @pulumi.getter(name="emailAddresses")
    def email_addresses(self) -> Optional[List[str]]:
        """
        A list of email addresses which alerts should be sent to.
        """
        ...

    @property
    @pulumi.getter(name="retentionDays")
    def retention_days(self) -> Optional[float]:
        """
        Specifies the number of days to keep in the Threat Detection audit logs.
        """
        ...

    @property
    @pulumi.getter
    def state(self) -> Optional[str]:
        """
        The State of the Policy. Possible values are `Enabled`, `Disabled` or `New`.
        """
        ...

    @property
    @pulumi.getter(name="storageAccountAccessKey")
    def storage_account_access_key(self) -> Optional[str]:
        """
        Specifies the identifier key of the Threat Detection audit storage account. Required if `state` is `Enabled`.
        """
        ...

    @property
    @pulumi.getter(name="storageEndpoint")
    def storage_endpoint(self) -> Optional[str]:
        """
        Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs. Required if `state` is `Enabled`.
        """
        ...

    @property
    @pulumi.getter(name="useServerDefault")
    def use_server_default(self) -> Optional[str]:
        """
        Should the default server policy be used? Defaults to `Disabled`.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DatabaseVulnerabilityAssessmentRuleBaselineBaselineResult(dict):
    @property
    @pulumi.getter
    def results(self) -> List[str]:
        """
        A list representing a result of the baseline.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ElasticPoolPerDatabaseSettings(dict):
    @property
    @pulumi.getter(name="maxCapacity")
    def max_capacity(self) -> float:
        """
        The maximum capacity any one database can consume.
        """
        ...

    @property
    @pulumi.getter(name="minCapacity")
    def min_capacity(self) -> float:
        """
        The minimum capacity all databases are guaranteed.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ElasticPoolSku(dict):
    @property
    @pulumi.getter
    def capacity(self) -> float:
        """
        The scale up/out capacity, representing server's compute units. For more information see the documentation for your Elasticpool configuration: [vCore-based](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-vcore-resource-limits-elastic-pools) or [DTU-based](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-dtu-resource-limits-elastic-pools).
        """
        ...

    @property
    @pulumi.getter
    def family(self) -> Optional[str]:
        """
        The `family` of hardware `Gen4` or `Gen5`.
        """
        ...

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Specifies the SKU Name for this Elasticpool. The name of the SKU, will be either `vCore` based `tier` + `family` pattern (e.g. GP_Gen4, BC_Gen5) or the `DTU` based `BasicPool`, `StandardPool`, or `PremiumPool` pattern.
        """
        ...

    @property
    @pulumi.getter
    def tier(self) -> str:
        """
        The tier of the particular SKU. Possible values are `GeneralPurpose`, `BusinessCritical`, `Basic`, `Standard`, or `Premium`. For more information see the documentation for your Elasticpool configuration: [vCore-based](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-vcore-resource-limits-elastic-pools) or [DTU-based](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-dtu-resource-limits-elastic-pools).
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ServerAzureadAdministrator(dict):
    @property
    @pulumi.getter(name="loginUsername")
    def login_username(self) -> str:
        """
        (Required)  The login username of the Azure AD Administrator of this SQL Server.
        """
        ...

    @property
    @pulumi.getter(name="objectId")
    def object_id(self) -> str:
        """
        (Required) The object id of the Azure AD Administrator of this SQL Server.
        """
        ...

    @property
    @pulumi.getter(name="tenantId")
    def tenant_id(self) -> Optional[str]:
        """
        (Optional) The tenant id of the Azure AD Administrator of this SQL Server.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ServerExtendedAuditingPolicy(dict):
    @property
    @pulumi.getter(name="retentionInDays")
    def retention_in_days(self) -> Optional[float]:
        """
        (Optional) Specifies the number of days to retain logs for in the storage account.
        """
        ...

    @property
    @pulumi.getter(name="storageAccountAccessKey")
    def storage_account_access_key(self) -> str:
        """
        (Required)  Specifies the access key to use for the auditing storage account.
        """
        ...

    @property
    @pulumi.getter(name="storageAccountAccessKeyIsSecondary")
    def storage_account_access_key_is_secondary(self) -> Optional[bool]:
        """
        (Optional) Specifies whether `storage_account_access_key` value is the storage's secondary key.
        """
        ...

    @property
    @pulumi.getter(name="storageEndpoint")
    def storage_endpoint(self) -> str:
        """
        (Required) Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net).
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ServerIdentity(dict):
    @property
    @pulumi.getter(name="principalId")
    def principal_id(self) -> Optional[str]:
        """
        The Principal ID for the Service Principal associated with the Identity of this SQL Server.
        """
        ...

    @property
    @pulumi.getter(name="tenantId")
    def tenant_id(self) -> Optional[str]:
        """
        (Optional) The tenant id of the Azure AD Administrator of this SQL Server.
        """
        ...

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        Specifies the identity type of the Microsoft SQL Server. At this time the only allowed value is `SystemAssigned`.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ServerVulnerabilityAssessmentRecurringScans(dict):
    @property
    @pulumi.getter(name="emailSubscriptionAdmins")
    def email_subscription_admins(self) -> Optional[bool]:
        """
        Boolean flag which specifies if the schedule scan notification will be sent to the subscription administrators. Defaults to `false`.
        """
        ...

    @property
    @pulumi.getter
    def emails(self) -> Optional[List[str]]:
        """
        Specifies an array of e-mail addresses to which the scan notification is sent.
        """
        ...

    @property
    @pulumi.getter
    def enabled(self) -> Optional[bool]:
        """
        Boolean flag which specifies if recurring scans is enabled or disabled. Defaults to `false`.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class VirtualMachineAutoPatching(dict):
    @property
    @pulumi.getter(name="dayOfWeek")
    def day_of_week(self) -> str:
        """
        The day of week to apply the patch on.
        """
        ...

    @property
    @pulumi.getter(name="maintenanceWindowDurationInMinutes")
    def maintenance_window_duration_in_minutes(self) -> float:
        """
        The size of the Maintenance Window in minutes.
        """
        ...

    @property
    @pulumi.getter(name="maintenanceWindowStartingHour")
    def maintenance_window_starting_hour(self) -> float:
        """
        The Hour, in the Virtual Machine Time-Zone when the patching maintenance window should begin.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class VirtualMachineKeyVaultCredential(dict):
    @property
    @pulumi.getter(name="keyVaultUrl")
    def key_vault_url(self) -> str:
        """
        The azure Key Vault url. Changing this forces a new resource to be created.
        """
        ...

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The credential name.
        """
        ...

    @property
    @pulumi.getter(name="servicePrincipalName")
    def service_principal_name(self) -> str:
        """
        The service principal name to access key vault. Changing this forces a new resource to be created.
        """
        ...

    @property
    @pulumi.getter(name="servicePrincipalSecret")
    def service_principal_secret(self) -> str:
        """
        The service principal name secret to access key vault. Changing this forces a new resource to be created.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


