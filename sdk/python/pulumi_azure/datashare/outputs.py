# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

@pulumi.output_type
class AccountIdentity(dict):
    principal_id: Optional[str] = pulumi.output_property("principalId")
    """
    The Principal ID for the Service Principal associated with the Identity of this Data Share Account.
    """
    tenant_id: Optional[str] = pulumi.output_property("tenantId")
    """
    The Tenant ID for the Service Principal associated with the Identity of this Data Share Account.
    """
    type: str = pulumi.output_property("type")
    """
    Specifies the identity type of the Data Share Account. At this time the only allowed value is `SystemAssigned`.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DatasetBlobStorageStorageAccount(dict):
    name: str = pulumi.output_property("name")
    """
    The name of the storage account to be shared with the receiver. Changing this forces a new Data Share Blob Storage Dataset to be created.
    """
    resource_group_name: str = pulumi.output_property("resourceGroupName")
    """
    The resource group name of the storage account to be shared with the receiver. Changing this forces a new Data Share Blob Storage Dataset to be created.
    """
    subscription_id: str = pulumi.output_property("subscriptionId")
    """
    The subscription id of the storage account to be shared with the receiver. Changing this forces a new Data Share Blob Storage Dataset to be created.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ShareSnapshotSchedule(dict):
    name: str = pulumi.output_property("name")
    """
    The name of the snapshot schedule.
    """
    recurrence: str = pulumi.output_property("recurrence")
    """
    The interval of the synchronization with the source data. Possible values are `Hour` and `Day`.
    """
    start_time: str = pulumi.output_property("startTime")
    """
    The synchronization with the source data's start time.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetAccountIdentity(dict):
    principal_id: str = pulumi.output_property("principalId")
    """
    The ID of the Principal (Client) in Azure Active Directory.
    """
    tenant_id: str = pulumi.output_property("tenantId")
    """
    The ID of the Azure Active Directory Tenant.
    """
    type: str = pulumi.output_property("type")
    """
    The identity type of the Data Share Account.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetDatasetBlobStorageStorageAccount(dict):
    name: str = pulumi.output_property("name")
    """
    The name of this Data Share Blob Storage Dataset.
    """
    resource_group_name: str = pulumi.output_property("resourceGroupName")
    """
    The resource group name of the storage account to be shared with the receiver.
    """
    subscription_id: str = pulumi.output_property("subscriptionId")
    """
    The subscription id of the storage account to be shared with the receiver.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetShareSnapshotSchedule(dict):
    name: str = pulumi.output_property("name")
    """
    The name of this Data Share.
    """
    recurrence: str = pulumi.output_property("recurrence")
    """
    The interval of the synchronization with the source data.
    """
    start_time: str = pulumi.output_property("startTime")
    """
    The synchronization with the source data's start time.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


