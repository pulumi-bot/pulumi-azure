# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Mapping, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'GlobalVMShutdownScheduleNotificationSettings',
    'LinuxVirtualMachineGalleryImageReference',
    'LinuxVirtualMachineInboundNatRule',
    'ScheduleDailyRecurrence',
    'ScheduleHourlyRecurrence',
    'ScheduleNotificationSettings',
    'ScheduleWeeklyRecurrence',
    'VirtualNetworkSubnet',
    'WindowsVirtualMachineGalleryImageReference',
    'WindowsVirtualMachineInboundNatRule',
    'GetVirtualNetworkAllowedSubnet',
    'GetVirtualNetworkSubnetOverride',
]

@pulumi.output_type
class GlobalVMShutdownScheduleNotificationSettings(dict):
    @property
    @pulumi.getter
    def enabled(self) -> bool:
        """
        Whether to enable pre-shutdown notifications. Possible values are `true` and `false`. Defaults to `false`
        """
        ...

    @property
    @pulumi.getter(name="timeInMinutes")
    def time_in_minutes(self) -> Optional[float]:
        """
        Time in minutes between 15 and 120 before a shutdown event at which a notification will be sent. Defaults to `30`.
        """
        ...

    @property
    @pulumi.getter(name="webhookUrl")
    def webhook_url(self) -> Optional[str]:
        """
        The webhook URL to which the notification will be sent. Required if `enabled` is `true`. Optional otherwise.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class LinuxVirtualMachineGalleryImageReference(dict):
    @property
    @pulumi.getter
    def offer(self) -> str:
        """
        The Offer of the Gallery Image. Changing this forces a new resource to be created.
        """
        ...

    @property
    @pulumi.getter
    def publisher(self) -> str:
        """
        The Publisher of the Gallery Image. Changing this forces a new resource to be created.
        """
        ...

    @property
    @pulumi.getter
    def sku(self) -> str:
        """
        The SKU of the Gallery Image. Changing this forces a new resource to be created.
        """
        ...

    @property
    @pulumi.getter
    def version(self) -> str:
        """
        The Version of the Gallery Image. Changing this forces a new resource to be created.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class LinuxVirtualMachineInboundNatRule(dict):
    @property
    @pulumi.getter(name="backendPort")
    def backend_port(self) -> float:
        """
        The Backend Port associated with this NAT Rule. Changing this forces a new resource to be created.
        """
        ...

    @property
    @pulumi.getter(name="frontendPort")
    def frontend_port(self) -> Optional[float]:
        """
        The frontend port associated with this Inbound NAT Rule.
        """
        ...

    @property
    @pulumi.getter
    def protocol(self) -> str:
        """
        The Protocol used for this NAT Rule. Possible values are `Tcp` and `Udp`. Changing this forces a new resource to be created.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ScheduleDailyRecurrence(dict):
    @property
    @pulumi.getter
    def time(self) -> str:
        """
        The time each day when the schedule takes effect.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ScheduleHourlyRecurrence(dict):
    @property
    @pulumi.getter
    def minute(self) -> float:
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ScheduleNotificationSettings(dict):
    @property
    @pulumi.getter
    def status(self) -> Optional[str]:
        """
        The status of the notification. Possible values are `Enabled` and `Disabled`. Defaults to `Disabled`
        """
        ...

    @property
    @pulumi.getter(name="timeInMinutes")
    def time_in_minutes(self) -> Optional[float]:
        """
        Time in minutes before event at which notification will be sent.
        """
        ...

    @property
    @pulumi.getter(name="webhookUrl")
    def webhook_url(self) -> Optional[str]:
        """
        The webhook URL to which the notification will be sent.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ScheduleWeeklyRecurrence(dict):
    @property
    @pulumi.getter
    def time(self) -> str:
        """
        The time when the schedule takes effect.
        """
        ...

    @property
    @pulumi.getter(name="weekDays")
    def week_days(self) -> Optional[List[str]]:
        """
        A list of days that this schedule takes effect . Possible values include `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday` and `Sunday`.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class VirtualNetworkSubnet(dict):
    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        """
        Specifies the name of the Dev Test Virtual Network. Changing this forces a new resource to be created.
        """
        ...

    @property
    @pulumi.getter(name="useInVirtualMachineCreation")
    def use_in_virtual_machine_creation(self) -> Optional[str]:
        """
        Can this subnet be used for creating Virtual Machines? Possible values are `Allow`, `Default` and `Deny`.
        """
        ...

    @property
    @pulumi.getter(name="usePublicIpAddress")
    def use_public_ip_address(self) -> Optional[str]:
        """
        Can Virtual Machines in this Subnet use Public IP Addresses? Possible values are `Allow`, `Default` and `Deny`.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class WindowsVirtualMachineGalleryImageReference(dict):
    @property
    @pulumi.getter
    def offer(self) -> str:
        """
        The Offer of the Gallery Image. Changing this forces a new resource to be created.
        """
        ...

    @property
    @pulumi.getter
    def publisher(self) -> str:
        """
        The Publisher of the Gallery Image. Changing this forces a new resource to be created.
        """
        ...

    @property
    @pulumi.getter
    def sku(self) -> str:
        """
        The SKU of the Gallery Image. Changing this forces a new resource to be created.
        """
        ...

    @property
    @pulumi.getter
    def version(self) -> str:
        """
        The Version of the Gallery Image. Changing this forces a new resource to be created.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class WindowsVirtualMachineInboundNatRule(dict):
    @property
    @pulumi.getter(name="backendPort")
    def backend_port(self) -> float:
        """
        The Backend Port associated with this NAT Rule. Changing this forces a new resource to be created.
        """
        ...

    @property
    @pulumi.getter(name="frontendPort")
    def frontend_port(self) -> Optional[float]:
        """
        The frontend port associated with this Inbound NAT Rule.
        """
        ...

    @property
    @pulumi.getter
    def protocol(self) -> str:
        """
        The Protocol used for this NAT Rule. Possible values are `Tcp` and `Udp`. Changing this forces a new resource to be created.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetVirtualNetworkAllowedSubnet(dict):
    @property
    @pulumi.getter(name="allowPublicIp")
    def allow_public_ip(self) -> str:
        """
        Indicates if this subnet allows public IP addresses. Possible values are `Allow`, `Default` and `Deny`.
        """
        ...

    @property
    @pulumi.getter(name="labSubnetName")
    def lab_subnet_name(self) -> str:
        """
        The name of the subnet.
        """
        ...

    @property
    @pulumi.getter(name="resourceId")
    def resource_id(self) -> str:
        """
        The resource identifier for the subnet.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetVirtualNetworkSubnetOverride(dict):
    @property
    @pulumi.getter(name="labSubnetName")
    def lab_subnet_name(self) -> str:
        """
        The name of the subnet.
        """
        ...

    @property
    @pulumi.getter(name="resourceId")
    def resource_id(self) -> str:
        """
        The resource identifier for the subnet.
        """
        ...

    @property
    @pulumi.getter(name="useInVmCreationPermission")
    def use_in_vm_creation_permission(self) -> str:
        """
        Indicates if the subnet can be used for VM creation.  Possible values are `Allow`, `Default` and `Deny`.
        """
        ...

    @property
    @pulumi.getter(name="usePublicIpAddressPermission")
    def use_public_ip_address_permission(self) -> str:
        ...

    @property
    @pulumi.getter(name="virtualNetworkPoolName")
    def virtual_network_pool_name(self) -> str:
        """
        The virtual network pool associated with this subnet.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


