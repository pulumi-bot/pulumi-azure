# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Mapping, Optional, Tuple, Union
from .. import _utilities, _tables
from . import outputs

__all__ = [
    'ApiImport',
    'ApiImportWsdlSelector',
    'ApiOperationRequest',
    'ApiOperationRequestHeader',
    'ApiOperationRequestQueryParameter',
    'ApiOperationRequestRepresentation',
    'ApiOperationRequestRepresentationFormParameter',
    'ApiOperationResponse',
    'ApiOperationResponseHeader',
    'ApiOperationResponseRepresentation',
    'ApiOperationResponseRepresentationFormParameter',
    'ApiOperationTemplateParameter',
    'ApiSubscriptionKeyParameterNames',
    'AuthorizationServerTokenBodyParameter',
    'BackendCredentials',
    'BackendCredentialsAuthorization',
    'BackendProxy',
    'BackendServiceFabricCluster',
    'BackendServiceFabricClusterServerX509Name',
    'BackendTls',
    'LoggerApplicationInsights',
    'LoggerEventhub',
    'ServiceAdditionalLocation',
    'ServiceCertificate',
    'ServiceHostnameConfiguration',
    'ServiceHostnameConfigurationDeveloperPortal',
    'ServiceHostnameConfigurationManagement',
    'ServiceHostnameConfigurationPortal',
    'ServiceHostnameConfigurationProxy',
    'ServiceHostnameConfigurationScm',
    'ServiceIdentity',
    'ServicePolicy',
    'ServiceProtocols',
    'ServiceSecurity',
    'ServiceSignIn',
    'ServiceSignUp',
    'ServiceSignUpTermsOfService',
    'ServiceVirtualNetworkConfiguration',
    'GetApiSubscriptionKeyParameterName',
    'GetServiceAdditionalLocation',
    'GetServiceHostnameConfiguration',
    'GetServiceHostnameConfigurationDeveloperPortal',
    'GetServiceHostnameConfigurationManagement',
    'GetServiceHostnameConfigurationPortal',
    'GetServiceHostnameConfigurationProxy',
    'GetServiceHostnameConfigurationScm',
    'GetServiceIdentity',
]

@pulumi.output_type
class ApiImport(dict):
    @property
    @pulumi.getter(name="contentFormat")
    def content_format(self) -> str:
        """
        The format of the content from which the API Definition should be imported. Possible values are: `openapi`, `openapi+json`, `openapi+json-link`, `openapi-link`, `swagger-json`, `swagger-link-json`, `wadl-link-json`, `wadl-xml`, `wsdl` and `wsdl-link`.
        """
        ...

    @property
    @pulumi.getter(name="contentValue")
    def content_value(self) -> str:
        """
        The Content from which the API Definition should be imported. When a `content_format` of `*-link-*` is specified this must be a URL, otherwise this must be defined inline.
        """
        ...

    @property
    @pulumi.getter(name="wsdlSelector")
    def wsdl_selector(self) -> Optional['outputs.ApiImportWsdlSelector']:
        """
        A `wsdl_selector` block as defined below, which allows you to limit the import of a WSDL to only a subset of the document. This can only be specified when `content_format` is `wsdl` or `wsdl-link`.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ApiImportWsdlSelector(dict):
    @property
    @pulumi.getter(name="endpointName")
    def endpoint_name(self) -> str:
        """
        The name of endpoint (port) to import from WSDL.
        """
        ...

    @property
    @pulumi.getter(name="serviceName")
    def service_name(self) -> str:
        """
        The name of service to import from WSDL.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ApiOperationRequest(dict):
    @property
    @pulumi.getter
    def description(self) -> Optional[str]:
        """
        A description of the HTTP Request, which may include HTML tags.
        """
        ...

    @property
    @pulumi.getter
    def headers(self) -> Optional[List['outputs.ApiOperationRequestHeader']]:
        """
        One or more `header` blocks as defined above.
        """
        ...

    @property
    @pulumi.getter(name="queryParameters")
    def query_parameters(self) -> Optional[List['outputs.ApiOperationRequestQueryParameter']]:
        """
        One or more `query_parameter` blocks as defined above.
        """
        ...

    @property
    @pulumi.getter
    def representations(self) -> Optional[List['outputs.ApiOperationRequestRepresentation']]:
        """
        One or more `representation` blocks as defined below.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ApiOperationRequestHeader(dict):
    @property
    @pulumi.getter(name="defaultValue")
    def default_value(self) -> Optional[str]:
        """
        The default value for this Header.
        """
        ...

    @property
    @pulumi.getter
    def description(self) -> Optional[str]:
        """
        A description of this Header.
        """
        ...

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The Name of this Header.
        """
        ...

    @property
    @pulumi.getter
    def required(self) -> bool:
        """
        Is this Header Required?
        """
        ...

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        The Type of this Header, such as a `string`.
        """
        ...

    @property
    @pulumi.getter
    def values(self) -> Optional[List[str]]:
        """
        One or more acceptable values for this Header.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ApiOperationRequestQueryParameter(dict):
    @property
    @pulumi.getter(name="defaultValue")
    def default_value(self) -> Optional[str]:
        """
        The default value for this Query Parameter.
        """
        ...

    @property
    @pulumi.getter
    def description(self) -> Optional[str]:
        """
        A description of this Query Parameter.
        """
        ...

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The Name of this Query Parameter.
        """
        ...

    @property
    @pulumi.getter
    def required(self) -> bool:
        """
        Is this Query Parameter Required?
        """
        ...

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        The Type of this Query Parameter, such as a `string`.
        """
        ...

    @property
    @pulumi.getter
    def values(self) -> Optional[List[str]]:
        """
        One or more acceptable values for this Query Parameter.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ApiOperationRequestRepresentation(dict):
    @property
    @pulumi.getter(name="contentType")
    def content_type(self) -> str:
        """
        The Content Type of this representation, such as `application/json`.
        """
        ...

    @property
    @pulumi.getter(name="formParameters")
    def form_parameters(self) -> Optional[List['outputs.ApiOperationRequestRepresentationFormParameter']]:
        """
        One or more `form_parameter` block as defined above.
        """
        ...

    @property
    @pulumi.getter
    def sample(self) -> Optional[str]:
        """
        An example of this representation.
        """
        ...

    @property
    @pulumi.getter(name="schemaId")
    def schema_id(self) -> Optional[str]:
        """
        The ID of an API Management Schema which represents this Response.
        """
        ...

    @property
    @pulumi.getter(name="typeName")
    def type_name(self) -> Optional[str]:
        """
        The Type Name defined by the Schema.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ApiOperationRequestRepresentationFormParameter(dict):
    @property
    @pulumi.getter(name="defaultValue")
    def default_value(self) -> Optional[str]:
        """
        The default value for this Form Parameter.
        """
        ...

    @property
    @pulumi.getter
    def description(self) -> Optional[str]:
        """
        A description of this Form Parameter.
        """
        ...

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The Name of this Form Parameter.
        """
        ...

    @property
    @pulumi.getter
    def required(self) -> bool:
        """
        Is this Form Parameter Required?
        """
        ...

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        The Type of this Form Parameter, such as a `string`.
        """
        ...

    @property
    @pulumi.getter
    def values(self) -> Optional[List[str]]:
        """
        One or more acceptable values for this Form Parameter.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ApiOperationResponse(dict):
    @property
    @pulumi.getter
    def description(self) -> Optional[str]:
        """
        A description of the HTTP Response, which may include HTML tags.
        """
        ...

    @property
    @pulumi.getter
    def headers(self) -> Optional[List['outputs.ApiOperationResponseHeader']]:
        """
        One or more `header` blocks as defined above.
        """
        ...

    @property
    @pulumi.getter
    def representations(self) -> Optional[List['outputs.ApiOperationResponseRepresentation']]:
        """
        One or more `representation` blocks as defined below.
        """
        ...

    @property
    @pulumi.getter(name="statusCode")
    def status_code(self) -> float:
        """
        The HTTP Status Code.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ApiOperationResponseHeader(dict):
    @property
    @pulumi.getter(name="defaultValue")
    def default_value(self) -> Optional[str]:
        """
        The default value for this Header.
        """
        ...

    @property
    @pulumi.getter
    def description(self) -> Optional[str]:
        """
        A description of this Header.
        """
        ...

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The Name of this Header.
        """
        ...

    @property
    @pulumi.getter
    def required(self) -> bool:
        """
        Is this Header Required?
        """
        ...

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        The Type of this Header, such as a `string`.
        """
        ...

    @property
    @pulumi.getter
    def values(self) -> Optional[List[str]]:
        """
        One or more acceptable values for this Header.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ApiOperationResponseRepresentation(dict):
    @property
    @pulumi.getter(name="contentType")
    def content_type(self) -> str:
        """
        The Content Type of this representation, such as `application/json`.
        """
        ...

    @property
    @pulumi.getter(name="formParameters")
    def form_parameters(self) -> Optional[List['outputs.ApiOperationResponseRepresentationFormParameter']]:
        """
        One or more `form_parameter` block as defined above.
        """
        ...

    @property
    @pulumi.getter
    def sample(self) -> Optional[str]:
        """
        An example of this representation.
        """
        ...

    @property
    @pulumi.getter(name="schemaId")
    def schema_id(self) -> Optional[str]:
        """
        The ID of an API Management Schema which represents this Response.
        """
        ...

    @property
    @pulumi.getter(name="typeName")
    def type_name(self) -> Optional[str]:
        """
        The Type Name defined by the Schema.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ApiOperationResponseRepresentationFormParameter(dict):
    @property
    @pulumi.getter(name="defaultValue")
    def default_value(self) -> Optional[str]:
        """
        The default value for this Form Parameter.
        """
        ...

    @property
    @pulumi.getter
    def description(self) -> Optional[str]:
        """
        A description of this Form Parameter.
        """
        ...

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The Name of this Form Parameter.
        """
        ...

    @property
    @pulumi.getter
    def required(self) -> bool:
        """
        Is this Form Parameter Required?
        """
        ...

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        The Type of this Form Parameter, such as a `string`.
        """
        ...

    @property
    @pulumi.getter
    def values(self) -> Optional[List[str]]:
        """
        One or more acceptable values for this Form Parameter.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ApiOperationTemplateParameter(dict):
    @property
    @pulumi.getter(name="defaultValue")
    def default_value(self) -> Optional[str]:
        """
        The default value for this Template Parameter.
        """
        ...

    @property
    @pulumi.getter
    def description(self) -> Optional[str]:
        """
        A description of this Template Parameter.
        """
        ...

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The Name of this Template Parameter.
        """
        ...

    @property
    @pulumi.getter
    def required(self) -> bool:
        """
        Is this Template Parameter Required?
        """
        ...

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        The Type of this Template Parameter, such as a `string`.
        """
        ...

    @property
    @pulumi.getter
    def values(self) -> Optional[List[str]]:
        """
        One or more acceptable values for this Template Parameter.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ApiSubscriptionKeyParameterNames(dict):
    @property
    @pulumi.getter
    def header(self) -> str:
        """
        The name of the HTTP Header which should be used for the Subscription Key.
        """
        ...

    @property
    @pulumi.getter
    def query(self) -> str:
        """
        The name of the QueryString parameter which should be used for the Subscription Key.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class AuthorizationServerTokenBodyParameter(dict):
    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The Name of the Parameter.
        """
        ...

    @property
    @pulumi.getter
    def value(self) -> str:
        """
        The Value of the Parameter.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class BackendCredentials(dict):
    @property
    @pulumi.getter
    def authorization(self) -> Optional['outputs.BackendCredentialsAuthorization']:
        """
        An `authorization` block as defined below.
        """
        ...

    @property
    @pulumi.getter
    def certificates(self) -> Optional[List[str]]:
        """
        A list of client certificate thumbprints to present to the backend host. The certificates must exist within the API Management Service.
        """
        ...

    @property
    @pulumi.getter
    def header(self) -> Optional[Mapping[str, str]]:
        """
        A mapping of header parameters to pass to the backend host. The keys are the header names and the values are a comma separated string of header values. This is converted to a list before being passed to the API.
        """
        ...

    @property
    @pulumi.getter
    def query(self) -> Optional[Mapping[str, str]]:
        """
        A mapping of query parameters to pass to the backend host. The keys are the query names and the values are a comma separated string of query values. This is converted to a list before being passed to the API.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class BackendCredentialsAuthorization(dict):
    @property
    @pulumi.getter
    def parameter(self) -> Optional[str]:
        """
        The authentication Parameter value.
        """
        ...

    @property
    @pulumi.getter
    def scheme(self) -> Optional[str]:
        """
        The authentication Scheme name.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class BackendProxy(dict):
    @property
    @pulumi.getter
    def password(self) -> Optional[str]:
        """
        The password to connect to the proxy server.
        """
        ...

    @property
    @pulumi.getter
    def url(self) -> str:
        """
        The URL of the proxy server.
        """
        ...

    @property
    @pulumi.getter
    def username(self) -> str:
        """
        The username to connect to the proxy server.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class BackendServiceFabricCluster(dict):
    @property
    @pulumi.getter(name="clientCertificateThumbprint")
    def client_certificate_thumbprint(self) -> str:
        """
        The client certificate thumbprint for the management endpoint.
        """
        ...

    @property
    @pulumi.getter(name="managementEndpoints")
    def management_endpoints(self) -> List[str]:
        """
        A list of cluster management endpoints.
        """
        ...

    @property
    @pulumi.getter(name="maxPartitionResolutionRetries")
    def max_partition_resolution_retries(self) -> float:
        """
        The maximum number of retries when attempting resolve the partition.
        """
        ...

    @property
    @pulumi.getter(name="serverCertificateThumbprints")
    def server_certificate_thumbprints(self) -> Optional[List[str]]:
        """
        A list of thumbprints of the server certificates of the Service Fabric cluster.
        """
        ...

    @property
    @pulumi.getter(name="serverX509Names")
    def server_x509_names(self) -> Optional[List['outputs.BackendServiceFabricClusterServerX509Name']]:
        """
        One or more `server_x509_name` blocks as documented below.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class BackendServiceFabricClusterServerX509Name(dict):
    @property
    @pulumi.getter(name="issuerCertificateThumbprint")
    def issuer_certificate_thumbprint(self) -> str:
        """
        The thumbprint for the issuer of the certificate.
        """
        ...

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the API Management backend. Changing this forces a new resource to be created.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class BackendTls(dict):
    @property
    @pulumi.getter(name="validateCertificateChain")
    def validate_certificate_chain(self) -> Optional[bool]:
        """
        Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for the backend host.
        """
        ...

    @property
    @pulumi.getter(name="validateCertificateName")
    def validate_certificate_name(self) -> Optional[bool]:
        """
        Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for the backend host.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class LoggerApplicationInsights(dict):
    @property
    @pulumi.getter(name="instrumentationKey")
    def instrumentation_key(self) -> str:
        """
        The instrumentation key used to push data to Application Insights.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class LoggerEventhub(dict):
    @property
    @pulumi.getter(name="connectionString")
    def connection_string(self) -> str:
        """
        The connection string of an EventHub Namespace.
        """
        ...

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of an EventHub.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ServiceAdditionalLocation(dict):
    @property
    @pulumi.getter(name="gatewayRegionalUrl")
    def gateway_regional_url(self) -> Optional[str]:
        """
        The URL of the Regional Gateway for the API Management Service in the specified region.
        """
        ...

    @property
    @pulumi.getter
    def location(self) -> str:
        """
        The name of the Azure Region in which the API Management Service should be expanded to.
        """
        ...

    @property
    @pulumi.getter(name="publicIpAddresses")
    def public_ip_addresses(self) -> Optional[List[str]]:
        """
        Public Static Load Balanced IP addresses of the API Management service in the additional location. Available only for Basic, Standard and Premium SKU.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ServiceCertificate(dict):
    @property
    @pulumi.getter(name="certificatePassword")
    def certificate_password(self) -> str:
        """
        The password for the certificate.
        """
        ...

    @property
    @pulumi.getter(name="encodedCertificate")
    def encoded_certificate(self) -> str:
        """
        The Base64 Encoded PFX Certificate.
        """
        ...

    @property
    @pulumi.getter(name="storeName")
    def store_name(self) -> str:
        """
        The name of the Certificate Store where this certificate should be stored. Possible values are `CertificateAuthority` and `Root`.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ServiceHostnameConfiguration(dict):
    @property
    @pulumi.getter(name="developerPortals")
    def developer_portals(self) -> Optional[List['outputs.ServiceHostnameConfigurationDeveloperPortal']]:
        """
        One or more `developer_portal` blocks as documented below.
        """
        ...

    @property
    @pulumi.getter
    def managements(self) -> Optional[List['outputs.ServiceHostnameConfigurationManagement']]:
        """
        One or more `management` blocks as documented below.
        """
        ...

    @property
    @pulumi.getter
    def portals(self) -> Optional[List['outputs.ServiceHostnameConfigurationPortal']]:
        """
        One or more `portal` blocks as documented below.
        """
        ...

    @property
    @pulumi.getter
    def proxies(self) -> Optional[List['outputs.ServiceHostnameConfigurationProxy']]:
        """
        One or more `proxy` blocks as documented below.
        """
        ...

    @property
    @pulumi.getter
    def scms(self) -> Optional[List['outputs.ServiceHostnameConfigurationScm']]:
        """
        One or more `scm` blocks as documented below.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ServiceHostnameConfigurationDeveloperPortal(dict):
    @property
    @pulumi.getter
    def certificate(self) -> Optional[str]:
        """
        One or more (up to 10) `certificate` blocks as defined below.
        """
        ...

    @property
    @pulumi.getter(name="certificatePassword")
    def certificate_password(self) -> Optional[str]:
        """
        The password for the certificate.
        """
        ...

    @property
    @pulumi.getter(name="hostName")
    def host_name(self) -> str:
        """
        The Hostname to use for the Management API.
        """
        ...

    @property
    @pulumi.getter(name="keyVaultId")
    def key_vault_id(self) -> Optional[str]:
        """
        The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type `application/x-pkcs12`.
        """
        ...

    @property
    @pulumi.getter(name="negotiateClientCertificate")
    def negotiate_client_certificate(self) -> Optional[bool]:
        """
        Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ServiceHostnameConfigurationManagement(dict):
    @property
    @pulumi.getter
    def certificate(self) -> Optional[str]:
        """
        The Base64 Encoded Certificate.
        """
        ...

    @property
    @pulumi.getter(name="certificatePassword")
    def certificate_password(self) -> Optional[str]:
        """
        The password associated with the certificate provided above.
        """
        ...

    @property
    @pulumi.getter(name="hostName")
    def host_name(self) -> str:
        """
        The Hostname to use for the Management API.
        """
        ...

    @property
    @pulumi.getter(name="keyVaultId")
    def key_vault_id(self) -> Optional[str]:
        """
        The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type `application/x-pkcs12`.
        """
        ...

    @property
    @pulumi.getter(name="negotiateClientCertificate")
    def negotiate_client_certificate(self) -> Optional[bool]:
        """
        Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ServiceHostnameConfigurationPortal(dict):
    @property
    @pulumi.getter
    def certificate(self) -> Optional[str]:
        """
        One or more (up to 10) `certificate` blocks as defined below.
        """
        ...

    @property
    @pulumi.getter(name="certificatePassword")
    def certificate_password(self) -> Optional[str]:
        """
        The password for the certificate.
        """
        ...

    @property
    @pulumi.getter(name="hostName")
    def host_name(self) -> str:
        """
        The Hostname to use for the Management API.
        """
        ...

    @property
    @pulumi.getter(name="keyVaultId")
    def key_vault_id(self) -> Optional[str]:
        """
        The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type `application/x-pkcs12`.
        """
        ...

    @property
    @pulumi.getter(name="negotiateClientCertificate")
    def negotiate_client_certificate(self) -> Optional[bool]:
        """
        Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ServiceHostnameConfigurationProxy(dict):
    @property
    @pulumi.getter
    def certificate(self) -> Optional[str]:
        """
        The Base64 Encoded Certificate.
        """
        ...

    @property
    @pulumi.getter(name="certificatePassword")
    def certificate_password(self) -> Optional[str]:
        """
        The password associated with the certificate provided above.
        """
        ...

    @property
    @pulumi.getter(name="defaultSslBinding")
    def default_ssl_binding(self) -> Optional[bool]:
        """
        Is the certificate associated with this Hostname the Default SSL Certificate? This is used when an SNI header isn't specified by a client. Defaults to `false`.
        """
        ...

    @property
    @pulumi.getter(name="hostName")
    def host_name(self) -> str:
        """
        The Hostname to use for the Management API.
        """
        ...

    @property
    @pulumi.getter(name="keyVaultId")
    def key_vault_id(self) -> Optional[str]:
        """
        The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type `application/x-pkcs12`.
        """
        ...

    @property
    @pulumi.getter(name="negotiateClientCertificate")
    def negotiate_client_certificate(self) -> Optional[bool]:
        """
        Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ServiceHostnameConfigurationScm(dict):
    @property
    @pulumi.getter
    def certificate(self) -> Optional[str]:
        """
        One or more (up to 10) `certificate` blocks as defined below.
        """
        ...

    @property
    @pulumi.getter(name="certificatePassword")
    def certificate_password(self) -> Optional[str]:
        """
        The password for the certificate.
        """
        ...

    @property
    @pulumi.getter(name="hostName")
    def host_name(self) -> str:
        """
        The Hostname to use for the Management API.
        """
        ...

    @property
    @pulumi.getter(name="keyVaultId")
    def key_vault_id(self) -> Optional[str]:
        """
        The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type `application/x-pkcs12`.
        """
        ...

    @property
    @pulumi.getter(name="negotiateClientCertificate")
    def negotiate_client_certificate(self) -> Optional[bool]:
        """
        Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ServiceIdentity(dict):
    @property
    @pulumi.getter(name="identityIds")
    def identity_ids(self) -> Optional[List[str]]:
        """
        A list of IDs for User Assigned Managed Identity resources to be assigned.
        """
        ...

    @property
    @pulumi.getter(name="principalId")
    def principal_id(self) -> Optional[str]:
        """
        The Principal ID associated with this Managed Service Identity.
        """
        ...

    @property
    @pulumi.getter(name="tenantId")
    def tenant_id(self) -> Optional[str]:
        """
        The Tenant ID associated with this Managed Service Identity.
        """
        ...

    @property
    @pulumi.getter
    def type(self) -> Optional[str]:
        """
        Specifies the type of Managed Service Identity that should be configured on this API Management Service. Possible values are `SystemAssigned`, `UserAssigned` or `SystemAssigned, UserAssigned` (to enable both).
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ServicePolicy(dict):
    @property
    @pulumi.getter(name="xmlContent")
    def xml_content(self) -> Optional[str]:
        """
        The XML Content for this Policy.
        """
        ...

    @property
    @pulumi.getter(name="xmlLink")
    def xml_link(self) -> Optional[str]:
        """
        A link to an API Management Policy XML Document, which must be publicly available.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ServiceProtocols(dict):
    @property
    @pulumi.getter(name="enableHttp2")
    def enable_http2(self) -> Optional[bool]:
        """
        Should HTTP/2 be supported by the API Management Service? Defaults to `false`.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ServiceSecurity(dict):
    @property
    @pulumi.getter(name="enableBackendSsl30")
    def enable_backend_ssl30(self) -> Optional[bool]:
        """
        Should SSL 3.0 be enabled on the backend of the gateway? Defaults to `false`.
        """
        ...

    @property
    @pulumi.getter(name="enableBackendTls10")
    def enable_backend_tls10(self) -> Optional[bool]:
        """
        Should TLS 1.0 be enabled on the backend of the gateway? Defaults to `false`.
        """
        ...

    @property
    @pulumi.getter(name="enableBackendTls11")
    def enable_backend_tls11(self) -> Optional[bool]:
        """
        Should TLS 1.1 be enabled on the backend of the gateway? Defaults to `false`.
        """
        ...

    @property
    @pulumi.getter(name="enableFrontendSsl30")
    def enable_frontend_ssl30(self) -> Optional[bool]:
        """
        Should SSL 3.0 be enabled on the frontend of the gateway? Defaults to `false`.
        """
        ...

    @property
    @pulumi.getter(name="enableFrontendTls10")
    def enable_frontend_tls10(self) -> Optional[bool]:
        """
        Should TLS 1.0 be enabled on the frontend of the gateway? Defaults to `false`.
        """
        ...

    @property
    @pulumi.getter(name="enableFrontendTls11")
    def enable_frontend_tls11(self) -> Optional[bool]:
        """
        Should TLS 1.1 be enabled on the frontend of the gateway? Defaults to `false`.
        """
        ...

    @property
    @pulumi.getter(name="enableTripleDesCiphers")
    def enable_triple_des_ciphers(self) -> Optional[bool]:
        """
        Should the `TLS_RSA_WITH_3DES_EDE_CBC_SHA` cipher be enabled for alL TLS versions (1.0, 1.1 and 1.2)? Defaults to `false`.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ServiceSignIn(dict):
    @property
    @pulumi.getter
    def enabled(self) -> bool:
        """
        Should anonymous users be redirected to the sign in page?
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ServiceSignUp(dict):
    @property
    @pulumi.getter
    def enabled(self) -> bool:
        """
        Can users sign up on the development portal?
        """
        ...

    @property
    @pulumi.getter(name="termsOfService")
    def terms_of_service(self) -> 'outputs.ServiceSignUpTermsOfService':
        """
        A `terms_of_service` block as defined below.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ServiceSignUpTermsOfService(dict):
    @property
    @pulumi.getter(name="consentRequired")
    def consent_required(self) -> bool:
        """
        Should the user be asked for consent during sign up?
        """
        ...

    @property
    @pulumi.getter
    def enabled(self) -> bool:
        """
        Should Terms of Service be displayed during sign up?.
        """
        ...

    @property
    @pulumi.getter
    def text(self) -> Optional[str]:
        """
        The Terms of Service which users are required to agree to in order to sign up.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ServiceVirtualNetworkConfiguration(dict):
    @property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> str:
        """
        The id of the subnet that will be used for the API Management.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetApiSubscriptionKeyParameterName(dict):
    @property
    @pulumi.getter
    def header(self) -> str:
        """
        The name of the HTTP Header which should be used for the Subscription Key.
        """
        ...

    @property
    @pulumi.getter
    def query(self) -> str:
        """
        The name of the QueryString parameter which should be used for the Subscription Key.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetServiceAdditionalLocation(dict):
    @property
    @pulumi.getter(name="gatewayRegionalUrl")
    def gateway_regional_url(self) -> str:
        """
        Gateway URL of the API Management service in the Region.
        """
        ...

    @property
    @pulumi.getter
    def location(self) -> str:
        """
        The location name of the additional region among Azure Data center regions.
        """
        ...

    @property
    @pulumi.getter(name="publicIpAddresses")
    def public_ip_addresses(self) -> List[str]:
        """
        Public Static Load Balanced IP addresses of the API Management service in the additional location. Available only for Basic, Standard and Premium SKU.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetServiceHostnameConfiguration(dict):
    @property
    @pulumi.getter(name="developerPortals")
    def developer_portals(self) -> List['outputs.GetServiceHostnameConfigurationDeveloperPortal']:
        """
        One or more `developer_portal` blocks as documented below.
        """
        ...

    @property
    @pulumi.getter
    def managements(self) -> List['outputs.GetServiceHostnameConfigurationManagement']:
        """
        One or more `management` blocks as documented below.
        """
        ...

    @property
    @pulumi.getter
    def portals(self) -> List['outputs.GetServiceHostnameConfigurationPortal']:
        """
        One or more `portal` blocks as documented below.
        """
        ...

    @property
    @pulumi.getter
    def proxies(self) -> List['outputs.GetServiceHostnameConfigurationProxy']:
        """
        One or more `proxy` blocks as documented below.
        """
        ...

    @property
    @pulumi.getter
    def scms(self) -> List['outputs.GetServiceHostnameConfigurationScm']:
        """
        One or more `scm` blocks as documented below.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetServiceHostnameConfigurationDeveloperPortal(dict):
    @property
    @pulumi.getter(name="hostName")
    def host_name(self) -> str:
        """
        The Hostname used for the SCM URL.
        """
        ...

    @property
    @pulumi.getter(name="keyVaultId")
    def key_vault_id(self) -> str:
        """
        The ID of the Key Vault Secret which contains the SSL Certificate.
        """
        ...

    @property
    @pulumi.getter(name="negotiateClientCertificate")
    def negotiate_client_certificate(self) -> bool:
        """
        Is Client Certificate Negotiation enabled?
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetServiceHostnameConfigurationManagement(dict):
    @property
    @pulumi.getter(name="hostName")
    def host_name(self) -> str:
        """
        The Hostname used for the SCM URL.
        """
        ...

    @property
    @pulumi.getter(name="keyVaultId")
    def key_vault_id(self) -> str:
        """
        The ID of the Key Vault Secret which contains the SSL Certificate.
        """
        ...

    @property
    @pulumi.getter(name="negotiateClientCertificate")
    def negotiate_client_certificate(self) -> bool:
        """
        Is Client Certificate Negotiation enabled?
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetServiceHostnameConfigurationPortal(dict):
    @property
    @pulumi.getter(name="hostName")
    def host_name(self) -> str:
        """
        The Hostname used for the SCM URL.
        """
        ...

    @property
    @pulumi.getter(name="keyVaultId")
    def key_vault_id(self) -> str:
        """
        The ID of the Key Vault Secret which contains the SSL Certificate.
        """
        ...

    @property
    @pulumi.getter(name="negotiateClientCertificate")
    def negotiate_client_certificate(self) -> bool:
        """
        Is Client Certificate Negotiation enabled?
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetServiceHostnameConfigurationProxy(dict):
    @property
    @pulumi.getter(name="defaultSslBinding")
    def default_ssl_binding(self) -> bool:
        """
        Is this the default SSL Binding?
        """
        ...

    @property
    @pulumi.getter(name="hostName")
    def host_name(self) -> str:
        """
        The Hostname used for the SCM URL.
        """
        ...

    @property
    @pulumi.getter(name="keyVaultId")
    def key_vault_id(self) -> str:
        """
        The ID of the Key Vault Secret which contains the SSL Certificate.
        """
        ...

    @property
    @pulumi.getter(name="negotiateClientCertificate")
    def negotiate_client_certificate(self) -> bool:
        """
        Is Client Certificate Negotiation enabled?
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetServiceHostnameConfigurationScm(dict):
    @property
    @pulumi.getter(name="hostName")
    def host_name(self) -> str:
        """
        The Hostname used for the SCM URL.
        """
        ...

    @property
    @pulumi.getter(name="keyVaultId")
    def key_vault_id(self) -> str:
        """
        The ID of the Key Vault Secret which contains the SSL Certificate.
        """
        ...

    @property
    @pulumi.getter(name="negotiateClientCertificate")
    def negotiate_client_certificate(self) -> bool:
        """
        Is Client Certificate Negotiation enabled?
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetServiceIdentity(dict):
    @property
    @pulumi.getter(name="identityIds")
    def identity_ids(self) -> List[str]:
        """
        A list of IDs for User Assigned Managed Identity resources to be assigned.
        """
        ...

    @property
    @pulumi.getter(name="principalId")
    def principal_id(self) -> str:
        """
        Specifies the Principal ID of the System Assigned Managed Service Identity that is configured on this API Management Service.
        """
        ...

    @property
    @pulumi.getter(name="tenantId")
    def tenant_id(self) -> str:
        """
        Specifies the Tenant ID of the System Assigned Managed Service Identity that is configured on this API Management Service.
        """
        ...

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        Specifies the type of Managed Service Identity that is configured on this API Management Service.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


