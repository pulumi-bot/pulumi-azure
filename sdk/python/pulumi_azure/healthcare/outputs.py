# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'ServiceAuthenticationConfiguration',
    'ServiceCorsConfiguration',
    'GetServiceAuthenticationConfiguration',
    'GetServiceCorsConfiguration',
]

@pulumi.output_type
class ServiceAuthenticationConfiguration(dict):
    audience: Optional[str] = pulumi.output_property("audience")
    """
    The intended audience to receive authentication tokens for the service. The default value is https://azurehealthcareapis.com
    """
    authority: Optional[str] = pulumi.output_property("authority")
    """
    The Azure Active Directory (tenant) that serves as the authentication authority to access the service. The default authority is the Directory defined in the authentication scheme in use when running this provider.
    Authority must be registered to Azure AD and in the following format: https://{Azure-AD-endpoint}/{tenant-id}.
    """
    smart_proxy_enabled: Optional[bool] = pulumi.output_property("smartProxyEnabled")
    """
    Enables the 'SMART on FHIR' option for mobile and web implementations.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ServiceCorsConfiguration(dict):
    allow_credentials: Optional[bool] = pulumi.output_property("allowCredentials")
    """
    If credentials are allowed via CORS.
    """
    allowed_headers: Optional[List[str]] = pulumi.output_property("allowedHeaders")
    """
    A set of headers to be allowed via CORS.
    """
    allowed_methods: Optional[List[str]] = pulumi.output_property("allowedMethods")
    """
    The methods to be allowed via CORS.
    """
    allowed_origins: Optional[List[str]] = pulumi.output_property("allowedOrigins")
    """
    A set of origins to be allowed via CORS.
    """
    max_age_in_seconds: Optional[float] = pulumi.output_property("maxAgeInSeconds")
    """
    The max age to be allowed via CORS.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetServiceAuthenticationConfiguration(dict):
    audience: str = pulumi.output_property("audience")
    """
    The intended audience to receive authentication tokens for the service.
    """
    authority: str = pulumi.output_property("authority")
    """
    The Azure Active Directory (tenant) that serves as the authentication authority to access the service.
    """
    smart_proxy_enabled: bool = pulumi.output_property("smartProxyEnabled")
    """
    Is the 'SMART on FHIR' option for mobile and web implementations enbled?
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetServiceCorsConfiguration(dict):
    allow_credentials: bool = pulumi.output_property("allowCredentials")
    """
    Are credentials are allowed via CORS?
    """
    allowed_headers: List[str] = pulumi.output_property("allowedHeaders")
    """
    The set of headers to be allowed via CORS.
    """
    allowed_methods: List[str] = pulumi.output_property("allowedMethods")
    """
    The methods to be allowed via CORS.
    """
    allowed_origins: List[str] = pulumi.output_property("allowedOrigins")
    """
    The set of origins to be allowed via CORS.
    """
    max_age_in_seconds: float = pulumi.output_property("maxAgeInSeconds")
    """
    The max age to be allowed via CORS.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


