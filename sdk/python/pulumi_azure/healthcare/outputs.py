# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Mapping, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'ServiceAuthenticationConfiguration',
    'ServiceCorsConfiguration',
    'GetServiceAuthenticationConfigurationResult',
    'GetServiceCorsConfigurationResult',
]

@pulumi.output_type
class ServiceAuthenticationConfiguration(dict):
    @property
    @pulumi.getter
    def audience(self) -> Optional[str]:
        """
        The intended audience to receive authentication tokens for the service. The default value is https://azurehealthcareapis.com
        """
        ...

    @property
    @pulumi.getter
    def authority(self) -> Optional[str]:
        """
        The Azure Active Directory (tenant) that serves as the authentication authority to access the service. The default authority is the Directory defined in the authentication scheme in use when running this provider.
        Authority must be registered to Azure AD and in the following format: https://{Azure-AD-endpoint}/{tenant-id}.
        """
        ...

    @property
    @pulumi.getter(name="smartProxyEnabled")
    def smart_proxy_enabled(self) -> Optional[bool]:
        """
        Enables the 'SMART on FHIR' option for mobile and web implementations.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ServiceCorsConfiguration(dict):
    @property
    @pulumi.getter(name="allowCredentials")
    def allow_credentials(self) -> Optional[bool]:
        """
        If credentials are allowed via CORS.
        """
        ...

    @property
    @pulumi.getter(name="allowedHeaders")
    def allowed_headers(self) -> Optional[List[str]]:
        """
        A set of headers to be allowed via CORS.
        """
        ...

    @property
    @pulumi.getter(name="allowedMethods")
    def allowed_methods(self) -> Optional[List[str]]:
        """
        The methods to be allowed via CORS.
        """
        ...

    @property
    @pulumi.getter(name="allowedOrigins")
    def allowed_origins(self) -> Optional[List[str]]:
        """
        A set of origins to be allowed via CORS.
        """
        ...

    @property
    @pulumi.getter(name="maxAgeInSeconds")
    def max_age_in_seconds(self) -> Optional[float]:
        """
        The max age to be allowed via CORS.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetServiceAuthenticationConfigurationResult(dict):
    @property
    @pulumi.getter
    def audience(self) -> str:
        """
        The intended audience to receive authentication tokens for the service.
        """
        ...

    @property
    @pulumi.getter
    def authority(self) -> str:
        """
        The Azure Active Directory (tenant) that serves as the authentication authority to access the service.
        """
        ...

    @property
    @pulumi.getter(name="smartProxyEnabled")
    def smart_proxy_enabled(self) -> bool:
        """
        Is the 'SMART on FHIR' option for mobile and web implementations enbled?
        """
        ...


@pulumi.output_type
class GetServiceCorsConfigurationResult(dict):
    @property
    @pulumi.getter(name="allowCredentials")
    def allow_credentials(self) -> bool:
        """
        Are credentials are allowed via CORS?
        """
        ...

    @property
    @pulumi.getter(name="allowedHeaders")
    def allowed_headers(self) -> List[str]:
        """
        The set of headers to be allowed via CORS.
        """
        ...

    @property
    @pulumi.getter(name="allowedMethods")
    def allowed_methods(self) -> List[str]:
        """
        The methods to be allowed via CORS.
        """
        ...

    @property
    @pulumi.getter(name="allowedOrigins")
    def allowed_origins(self) -> List[str]:
        """
        The set of origins to be allowed via CORS.
        """
        ...

    @property
    @pulumi.getter(name="maxAgeInSeconds")
    def max_age_in_seconds(self) -> float:
        """
        The max age to be allowed via CORS.
        """
        ...


