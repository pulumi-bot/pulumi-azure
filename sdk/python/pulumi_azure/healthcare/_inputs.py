# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'ServiceAuthenticationConfigurationArgs',
    'ServiceCorsConfigurationArgs',
]

@pulumi.input_type
class ServiceAuthenticationConfigurationArgs:
    audience: Optional[pulumi.Input[str]] = pulumi.input_property("audience")
    """
    The intended audience to receive authentication tokens for the service. The default value is https://azurehealthcareapis.com
    """
    authority: Optional[pulumi.Input[str]] = pulumi.input_property("authority")
    """
    The Azure Active Directory (tenant) that serves as the authentication authority to access the service. The default authority is the Directory defined in the authentication scheme in use when running this provider.
    Authority must be registered to Azure AD and in the following format: https://{Azure-AD-endpoint}/{tenant-id}.
    """
    smart_proxy_enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("smartProxyEnabled")
    """
    Enables the 'SMART on FHIR' option for mobile and web implementations.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, audience: Optional[pulumi.Input[str]] = None, authority: Optional[pulumi.Input[str]] = None, smart_proxy_enabled: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[str] audience: The intended audience to receive authentication tokens for the service. The default value is https://azurehealthcareapis.com
        :param pulumi.Input[str] authority: The Azure Active Directory (tenant) that serves as the authentication authority to access the service. The default authority is the Directory defined in the authentication scheme in use when running this provider.
               Authority must be registered to Azure AD and in the following format: https://{Azure-AD-endpoint}/{tenant-id}.
        :param pulumi.Input[bool] smart_proxy_enabled: Enables the 'SMART on FHIR' option for mobile and web implementations.
        """
        __self__.audience = audience
        __self__.authority = authority
        __self__.smart_proxy_enabled = smart_proxy_enabled

@pulumi.input_type
class ServiceCorsConfigurationArgs:
    allow_credentials: Optional[pulumi.Input[bool]] = pulumi.input_property("allowCredentials")
    """
    If credentials are allowed via CORS.
    """
    allowed_headers: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("allowedHeaders")
    """
    A set of headers to be allowed via CORS.
    """
    allowed_methods: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("allowedMethods")
    """
    The methods to be allowed via CORS.
    """
    allowed_origins: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("allowedOrigins")
    """
    A set of origins to be allowed via CORS.
    """
    max_age_in_seconds: Optional[pulumi.Input[float]] = pulumi.input_property("maxAgeInSeconds")
    """
    The max age to be allowed via CORS.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, allow_credentials: Optional[pulumi.Input[bool]] = None, allowed_headers: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, allowed_methods: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, allowed_origins: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, max_age_in_seconds: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[bool] allow_credentials: If credentials are allowed via CORS.
        :param pulumi.Input[List[pulumi.Input[str]]] allowed_headers: A set of headers to be allowed via CORS.
        :param pulumi.Input[List[pulumi.Input[str]]] allowed_methods: The methods to be allowed via CORS.
        :param pulumi.Input[List[pulumi.Input[str]]] allowed_origins: A set of origins to be allowed via CORS.
        :param pulumi.Input[float] max_age_in_seconds: The max age to be allowed via CORS.
        """
        __self__.allow_credentials = allow_credentials
        __self__.allowed_headers = allowed_headers
        __self__.allowed_methods = allowed_methods
        __self__.allowed_origins = allowed_origins
        __self__.max_age_in_seconds = max_age_in_seconds

