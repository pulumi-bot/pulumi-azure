# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

@pulumi.input_type
class NamespaceNetworkRuleSetNetworkRuleArgs:
    subnet_id: pulumi.Input[str] = pulumi.input_property("subnetId")
    """
    The Subnet ID which should be able to access this ServiceBus Namespace.
    """
    ignore_missing_vnet_service_endpoint: Optional[pulumi.Input[bool]] = pulumi.input_property("ignoreMissingVnetServiceEndpoint")
    """
    Should the ServiceBus Namespace Network Rule Set ignore missing Virtual Network Service Endpoint option in the Subnet? Defaults to `false`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, subnet_id: pulumi.Input[str], ignore_missing_vnet_service_endpoint: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[str] subnet_id: The Subnet ID which should be able to access this ServiceBus Namespace.
        :param pulumi.Input[bool] ignore_missing_vnet_service_endpoint: Should the ServiceBus Namespace Network Rule Set ignore missing Virtual Network Service Endpoint option in the Subnet? Defaults to `false`.
        """
        __self__.subnet_id = subnet_id
        __self__.ignore_missing_vnet_service_endpoint = ignore_missing_vnet_service_endpoint

@pulumi.input_type
class SubscriptionRuleCorrelationFilterArgs:
    content_type: Optional[pulumi.Input[str]] = pulumi.input_property("contentType")
    """
    Content type of the message.
    """
    correlation_id: Optional[pulumi.Input[str]] = pulumi.input_property("correlationId")
    """
    Identifier of the correlation.
    """
    label: Optional[pulumi.Input[str]] = pulumi.input_property("label")
    """
    Application specific label.
    """
    message_id: Optional[pulumi.Input[str]] = pulumi.input_property("messageId")
    """
    Identifier of the message.
    """
    reply_to: Optional[pulumi.Input[str]] = pulumi.input_property("replyTo")
    """
    Address of the queue to reply to.
    """
    reply_to_session_id: Optional[pulumi.Input[str]] = pulumi.input_property("replyToSessionId")
    """
    Session identifier to reply to.
    """
    session_id: Optional[pulumi.Input[str]] = pulumi.input_property("sessionId")
    """
    Session identifier.
    """
    to: Optional[pulumi.Input[str]] = pulumi.input_property("to")
    """
    Address to send to.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, content_type: Optional[pulumi.Input[str]] = None, correlation_id: Optional[pulumi.Input[str]] = None, label: Optional[pulumi.Input[str]] = None, message_id: Optional[pulumi.Input[str]] = None, reply_to: Optional[pulumi.Input[str]] = None, reply_to_session_id: Optional[pulumi.Input[str]] = None, session_id: Optional[pulumi.Input[str]] = None, to: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] content_type: Content type of the message.
        :param pulumi.Input[str] correlation_id: Identifier of the correlation.
        :param pulumi.Input[str] label: Application specific label.
        :param pulumi.Input[str] message_id: Identifier of the message.
        :param pulumi.Input[str] reply_to: Address of the queue to reply to.
        :param pulumi.Input[str] reply_to_session_id: Session identifier to reply to.
        :param pulumi.Input[str] session_id: Session identifier.
        :param pulumi.Input[str] to: Address to send to.
        """
        __self__.content_type = content_type
        __self__.correlation_id = correlation_id
        __self__.label = label
        __self__.message_id = message_id
        __self__.reply_to = reply_to
        __self__.reply_to_session_id = reply_to_session_id
        __self__.session_id = session_id
        __self__.to = to

