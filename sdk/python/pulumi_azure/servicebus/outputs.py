# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'NamespaceNetworkRuleSetNetworkRule',
    'SubscriptionRuleCorrelationFilter',
]

@pulumi.output_type
class NamespaceNetworkRuleSetNetworkRule(dict):
    ignore_missing_vnet_service_endpoint: Optional[bool] = pulumi.output_property("ignoreMissingVnetServiceEndpoint")
    """
    Should the ServiceBus Namespace Network Rule Set ignore missing Virtual Network Service Endpoint option in the Subnet? Defaults to `false`.
    """
    subnet_id: str = pulumi.output_property("subnetId")
    """
    The Subnet ID which should be able to access this ServiceBus Namespace.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class SubscriptionRuleCorrelationFilter(dict):
    content_type: Optional[str] = pulumi.output_property("contentType")
    """
    Content type of the message.
    """
    correlation_id: Optional[str] = pulumi.output_property("correlationId")
    """
    Identifier of the correlation.
    """
    label: Optional[str] = pulumi.output_property("label")
    """
    Application specific label.
    """
    message_id: Optional[str] = pulumi.output_property("messageId")
    """
    Identifier of the message.
    """
    reply_to: Optional[str] = pulumi.output_property("replyTo")
    """
    Address of the queue to reply to.
    """
    reply_to_session_id: Optional[str] = pulumi.output_property("replyToSessionId")
    """
    Session identifier to reply to.
    """
    session_id: Optional[str] = pulumi.output_property("sessionId")
    """
    Session identifier.
    """
    to: Optional[str] = pulumi.output_property("to")
    """
    Address to send to.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


