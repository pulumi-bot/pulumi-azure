# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'BastionHostIpConfigurationArgs',
    'DiskEncryptionSetIdentityArgs',
    'ImageDataDiskArgs',
    'ImageOsDiskArgs',
    'LinuxVirtualMachineAdditionalCapabilitiesArgs',
    'LinuxVirtualMachineAdminSshKeyArgs',
    'LinuxVirtualMachineBootDiagnosticsArgs',
    'LinuxVirtualMachineIdentityArgs',
    'LinuxVirtualMachineOsDiskArgs',
    'LinuxVirtualMachineOsDiskDiffDiskSettingsArgs',
    'LinuxVirtualMachinePlanArgs',
    'LinuxVirtualMachineScaleSetAdditionalCapabilitiesArgs',
    'LinuxVirtualMachineScaleSetAdminSshKeyArgs',
    'LinuxVirtualMachineScaleSetAutomaticInstanceRepairArgs',
    'LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs',
    'LinuxVirtualMachineScaleSetBootDiagnosticsArgs',
    'LinuxVirtualMachineScaleSetDataDiskArgs',
    'LinuxVirtualMachineScaleSetIdentityArgs',
    'LinuxVirtualMachineScaleSetNetworkInterfaceArgs',
    'LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs',
    'LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs',
    'LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArgs',
    'LinuxVirtualMachineScaleSetOsDiskArgs',
    'LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs',
    'LinuxVirtualMachineScaleSetPlanArgs',
    'LinuxVirtualMachineScaleSetRollingUpgradePolicyArgs',
    'LinuxVirtualMachineScaleSetSecretArgs',
    'LinuxVirtualMachineScaleSetSecretCertificateArgs',
    'LinuxVirtualMachineScaleSetSourceImageReferenceArgs',
    'LinuxVirtualMachineScaleSetTerminateNotificationArgs',
    'LinuxVirtualMachineSecretArgs',
    'LinuxVirtualMachineSecretCertificateArgs',
    'LinuxVirtualMachineSourceImageReferenceArgs',
    'ManagedDiskEncryptionSettingsArgs',
    'ManagedDiskEncryptionSettingsDiskEncryptionKeyArgs',
    'ManagedDiskEncryptionSettingsKeyEncryptionKeyArgs',
    'ScaleSetBootDiagnosticsArgs',
    'ScaleSetExtensionArgs',
    'ScaleSetIdentityArgs',
    'ScaleSetNetworkProfileArgs',
    'ScaleSetNetworkProfileDnsSettingsArgs',
    'ScaleSetNetworkProfileIpConfigurationArgs',
    'ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationArgs',
    'ScaleSetOsProfileArgs',
    'ScaleSetOsProfileLinuxConfigArgs',
    'ScaleSetOsProfileLinuxConfigSshKeyArgs',
    'ScaleSetOsProfileSecretArgs',
    'ScaleSetOsProfileSecretVaultCertificateArgs',
    'ScaleSetOsProfileWindowsConfigArgs',
    'ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArgs',
    'ScaleSetOsProfileWindowsConfigWinrmArgs',
    'ScaleSetPlanArgs',
    'ScaleSetRollingUpgradePolicyArgs',
    'ScaleSetSkuArgs',
    'ScaleSetStorageProfileDataDiskArgs',
    'ScaleSetStorageProfileImageReferenceArgs',
    'ScaleSetStorageProfileOsDiskArgs',
    'SharedImageIdentifierArgs',
    'SharedImageVersionTargetRegionArgs',
    'SnapshotEncryptionSettingsArgs',
    'SnapshotEncryptionSettingsDiskEncryptionKeyArgs',
    'SnapshotEncryptionSettingsKeyEncryptionKeyArgs',
    'VirtualMachineAdditionalCapabilitiesArgs',
    'VirtualMachineBootDiagnosticsArgs',
    'VirtualMachineIdentityArgs',
    'VirtualMachineOsProfileArgs',
    'VirtualMachineOsProfileLinuxConfigArgs',
    'VirtualMachineOsProfileLinuxConfigSshKeyArgs',
    'VirtualMachineOsProfileSecretArgs',
    'VirtualMachineOsProfileSecretVaultCertificateArgs',
    'VirtualMachineOsProfileWindowsConfigArgs',
    'VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArgs',
    'VirtualMachineOsProfileWindowsConfigWinrmArgs',
    'VirtualMachinePlanArgs',
    'VirtualMachineStorageDataDiskArgs',
    'VirtualMachineStorageImageReferenceArgs',
    'VirtualMachineStorageOsDiskArgs',
    'WindowsVirtualMachineAdditionalCapabilitiesArgs',
    'WindowsVirtualMachineAdditionalUnattendContentArgs',
    'WindowsVirtualMachineBootDiagnosticsArgs',
    'WindowsVirtualMachineIdentityArgs',
    'WindowsVirtualMachineOsDiskArgs',
    'WindowsVirtualMachineOsDiskDiffDiskSettingsArgs',
    'WindowsVirtualMachinePlanArgs',
    'WindowsVirtualMachineScaleSetAdditionalCapabilitiesArgs',
    'WindowsVirtualMachineScaleSetAdditionalUnattendContentArgs',
    'WindowsVirtualMachineScaleSetAutomaticInstanceRepairArgs',
    'WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs',
    'WindowsVirtualMachineScaleSetBootDiagnosticsArgs',
    'WindowsVirtualMachineScaleSetDataDiskArgs',
    'WindowsVirtualMachineScaleSetIdentityArgs',
    'WindowsVirtualMachineScaleSetNetworkInterfaceArgs',
    'WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs',
    'WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs',
    'WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArgs',
    'WindowsVirtualMachineScaleSetOsDiskArgs',
    'WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs',
    'WindowsVirtualMachineScaleSetPlanArgs',
    'WindowsVirtualMachineScaleSetRollingUpgradePolicyArgs',
    'WindowsVirtualMachineScaleSetSecretArgs',
    'WindowsVirtualMachineScaleSetSecretCertificateArgs',
    'WindowsVirtualMachineScaleSetSourceImageReferenceArgs',
    'WindowsVirtualMachineScaleSetTerminateNotificationArgs',
    'WindowsVirtualMachineScaleSetWinrmListenerArgs',
    'WindowsVirtualMachineSecretArgs',
    'WindowsVirtualMachineSecretCertificateArgs',
    'WindowsVirtualMachineSourceImageReferenceArgs',
    'WindowsVirtualMachineWinrmListenerArgs',
]

@pulumi.input_type
class BastionHostIpConfigurationArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The name of the IP configuration.
    """
    public_ip_address_id: pulumi.Input[str] = pulumi.input_property("publicIpAddressId")
    """
    Reference to a Public IP Address to associate with this Bastion Host.
    """
    subnet_id: pulumi.Input[str] = pulumi.input_property("subnetId")
    """
    Reference to a subnet in which this Bastion Host has been created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], public_ip_address_id: pulumi.Input[str], subnet_id: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] name: The name of the IP configuration.
        :param pulumi.Input[str] public_ip_address_id: Reference to a Public IP Address to associate with this Bastion Host.
        :param pulumi.Input[str] subnet_id: Reference to a subnet in which this Bastion Host has been created.
        """
        __self__.name = name
        __self__.public_ip_address_id = public_ip_address_id
        __self__.subnet_id = subnet_id

@pulumi.input_type
class DiskEncryptionSetIdentityArgs:
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    The Type of Identity which should be used for this Disk Encryption Set. At this time the only possible value is `SystemAssigned`.
    """
    principal_id: Optional[pulumi.Input[str]] = pulumi.input_property("principalId")
    """
    The (Client) ID of the Service Principal.
    """
    tenant_id: Optional[pulumi.Input[str]] = pulumi.input_property("tenantId")
    """
    The ID of the Tenant the Service Principal is assigned in.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, type: pulumi.Input[str], principal_id: Optional[pulumi.Input[str]] = None, tenant_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] type: The Type of Identity which should be used for this Disk Encryption Set. At this time the only possible value is `SystemAssigned`.
        :param pulumi.Input[str] principal_id: The (Client) ID of the Service Principal.
        :param pulumi.Input[str] tenant_id: The ID of the Tenant the Service Principal is assigned in.
        """
        __self__.type = type
        __self__.principal_id = principal_id
        __self__.tenant_id = tenant_id

@pulumi.input_type
class ImageDataDiskArgs:
    blob_uri: Optional[pulumi.Input[str]] = pulumi.input_property("blobUri")
    """
    Specifies the URI in Azure storage of the blob that you want to use to create the image.
    """
    caching: Optional[pulumi.Input[str]] = pulumi.input_property("caching")
    """
    Specifies the caching mode as `ReadWrite`, `ReadOnly`, or `None`. The default is `None`.
    """
    lun: Optional[pulumi.Input[float]] = pulumi.input_property("lun")
    """
    Specifies the logical unit number of the data disk.
    """
    managed_disk_id: Optional[pulumi.Input[str]] = pulumi.input_property("managedDiskId")
    """
    Specifies the ID of the managed disk resource that you want to use to create the image.
    """
    size_gb: Optional[pulumi.Input[float]] = pulumi.input_property("sizeGb")
    """
    Specifies the size of the image to be created. The target size can't be smaller than the source size.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, blob_uri: Optional[pulumi.Input[str]] = None, caching: Optional[pulumi.Input[str]] = None, lun: Optional[pulumi.Input[float]] = None, managed_disk_id: Optional[pulumi.Input[str]] = None, size_gb: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[str] blob_uri: Specifies the URI in Azure storage of the blob that you want to use to create the image.
        :param pulumi.Input[str] caching: Specifies the caching mode as `ReadWrite`, `ReadOnly`, or `None`. The default is `None`.
        :param pulumi.Input[float] lun: Specifies the logical unit number of the data disk.
        :param pulumi.Input[str] managed_disk_id: Specifies the ID of the managed disk resource that you want to use to create the image.
        :param pulumi.Input[float] size_gb: Specifies the size of the image to be created. The target size can't be smaller than the source size.
        """
        __self__.blob_uri = blob_uri
        __self__.caching = caching
        __self__.lun = lun
        __self__.managed_disk_id = managed_disk_id
        __self__.size_gb = size_gb

@pulumi.input_type
class ImageOsDiskArgs:
    blob_uri: Optional[pulumi.Input[str]] = pulumi.input_property("blobUri")
    """
    Specifies the URI in Azure storage of the blob that you want to use to create the image.
    """
    caching: Optional[pulumi.Input[str]] = pulumi.input_property("caching")
    """
    Specifies the caching mode as `ReadWrite`, `ReadOnly`, or `None`. The default is `None`.
    """
    managed_disk_id: Optional[pulumi.Input[str]] = pulumi.input_property("managedDiskId")
    """
    Specifies the ID of the managed disk resource that you want to use to create the image.
    """
    os_state: Optional[pulumi.Input[str]] = pulumi.input_property("osState")
    """
    Specifies the state of the operating system contained in the blob. Currently, the only value is Generalized.
    """
    os_type: Optional[pulumi.Input[str]] = pulumi.input_property("osType")
    """
    Specifies the type of operating system contained in the virtual machine image. Possible values are: Windows or Linux.
    """
    size_gb: Optional[pulumi.Input[float]] = pulumi.input_property("sizeGb")
    """
    Specifies the size of the image to be created. The target size can't be smaller than the source size.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, blob_uri: Optional[pulumi.Input[str]] = None, caching: Optional[pulumi.Input[str]] = None, managed_disk_id: Optional[pulumi.Input[str]] = None, os_state: Optional[pulumi.Input[str]] = None, os_type: Optional[pulumi.Input[str]] = None, size_gb: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[str] blob_uri: Specifies the URI in Azure storage of the blob that you want to use to create the image.
        :param pulumi.Input[str] caching: Specifies the caching mode as `ReadWrite`, `ReadOnly`, or `None`. The default is `None`.
        :param pulumi.Input[str] managed_disk_id: Specifies the ID of the managed disk resource that you want to use to create the image.
        :param pulumi.Input[str] os_state: Specifies the state of the operating system contained in the blob. Currently, the only value is Generalized.
        :param pulumi.Input[str] os_type: Specifies the type of operating system contained in the virtual machine image. Possible values are: Windows or Linux.
        :param pulumi.Input[float] size_gb: Specifies the size of the image to be created. The target size can't be smaller than the source size.
        """
        __self__.blob_uri = blob_uri
        __self__.caching = caching
        __self__.managed_disk_id = managed_disk_id
        __self__.os_state = os_state
        __self__.os_type = os_type
        __self__.size_gb = size_gb

@pulumi.input_type
class LinuxVirtualMachineAdditionalCapabilitiesArgs:
    ultra_ssd_enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("ultraSsdEnabled")
    """
    Should the capacity to enable Data Disks of the `UltraSSD_LRS` storage account type be supported on this Virtual Machine? Defaults to `false`. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, ultra_ssd_enabled: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[bool] ultra_ssd_enabled: Should the capacity to enable Data Disks of the `UltraSSD_LRS` storage account type be supported on this Virtual Machine? Defaults to `false`. Changing this forces a new resource to be created.
        """
        __self__.ultra_ssd_enabled = ultra_ssd_enabled

@pulumi.input_type
class LinuxVirtualMachineAdminSshKeyArgs:
    public_key: pulumi.Input[str] = pulumi.input_property("publicKey")
    """
    The Public Key which should be used for authentication, which needs to be at least 2048-bit and in `ssh-rsa` format. Changing this forces a new resource to be created.
    """
    username: pulumi.Input[str] = pulumi.input_property("username")
    """
    The Username for which this Public SSH Key should be configured. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, public_key: pulumi.Input[str], username: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] public_key: The Public Key which should be used for authentication, which needs to be at least 2048-bit and in `ssh-rsa` format. Changing this forces a new resource to be created.
        :param pulumi.Input[str] username: The Username for which this Public SSH Key should be configured. Changing this forces a new resource to be created.
        """
        __self__.public_key = public_key
        __self__.username = username

@pulumi.input_type
class LinuxVirtualMachineBootDiagnosticsArgs:
    storage_account_uri: pulumi.Input[str] = pulumi.input_property("storageAccountUri")
    """
    The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, storage_account_uri: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] storage_account_uri: The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.
        """
        __self__.storage_account_uri = storage_account_uri

@pulumi.input_type
class LinuxVirtualMachineIdentityArgs:
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    The type of Managed Identity which should be assigned to the Linux Virtual Machine. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
    """
    identity_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("identityIds")
    """
    A list of User Managed Identity ID's which should be assigned to the Linux Virtual Machine.
    """
    principal_id: Optional[pulumi.Input[str]] = pulumi.input_property("principalId")
    """
    The ID of the System Managed Service Principal.
    """
    tenant_id: Optional[pulumi.Input[str]] = pulumi.input_property("tenantId")
    """
    The ID of the Tenant the System Managed Service Principal is assigned in.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, type: pulumi.Input[str], identity_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, principal_id: Optional[pulumi.Input[str]] = None, tenant_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] type: The type of Managed Identity which should be assigned to the Linux Virtual Machine. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
        :param pulumi.Input[List[pulumi.Input[str]]] identity_ids: A list of User Managed Identity ID's which should be assigned to the Linux Virtual Machine.
        :param pulumi.Input[str] principal_id: The ID of the System Managed Service Principal.
        :param pulumi.Input[str] tenant_id: The ID of the Tenant the System Managed Service Principal is assigned in.
        """
        __self__.type = type
        __self__.identity_ids = identity_ids
        __self__.principal_id = principal_id
        __self__.tenant_id = tenant_id

@pulumi.input_type
class LinuxVirtualMachineOsDiskArgs:
    caching: pulumi.Input[str] = pulumi.input_property("caching")
    """
    The Type of Caching which should be used for the Internal OS Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
    """
    storage_account_type: pulumi.Input[str] = pulumi.input_property("storageAccountType")
    """
    The Type of Storage Account which should back this the Internal OS Disk. Possible values are `Standard_LRS`, `StandardSSD_LRS` and `Premium_LRS`. Changing this forces a new resource to be created.
    """
    diff_disk_settings: Optional[pulumi.Input['LinuxVirtualMachineOsDiskDiffDiskSettingsArgs']] = pulumi.input_property("diffDiskSettings")
    """
    A `diff_disk_settings` block as defined above.
    """
    disk_encryption_set_id: Optional[pulumi.Input[str]] = pulumi.input_property("diskEncryptionSetId")
    """
    The ID of the Disk Encryption Set which should be used to Encrypt this OS Disk.
    """
    disk_size_gb: Optional[pulumi.Input[float]] = pulumi.input_property("diskSizeGb")
    """
    The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine is sourced from.
    """
    name: Optional[pulumi.Input[str]] = pulumi.input_property("name")
    """
    The name which should be used for the Internal OS Disk. Changing this forces a new resource to be created.
    """
    write_accelerator_enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("writeAcceleratorEnabled")
    """
    Should Write Accelerator be Enabled for this OS Disk? Defaults to `false`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, caching: pulumi.Input[str], storage_account_type: pulumi.Input[str], diff_disk_settings: Optional[pulumi.Input['LinuxVirtualMachineOsDiskDiffDiskSettingsArgs']] = None, disk_encryption_set_id: Optional[pulumi.Input[str]] = None, disk_size_gb: Optional[pulumi.Input[float]] = None, name: Optional[pulumi.Input[str]] = None, write_accelerator_enabled: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[str] caching: The Type of Caching which should be used for the Internal OS Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
        :param pulumi.Input[str] storage_account_type: The Type of Storage Account which should back this the Internal OS Disk. Possible values are `Standard_LRS`, `StandardSSD_LRS` and `Premium_LRS`. Changing this forces a new resource to be created.
        :param pulumi.Input['LinuxVirtualMachineOsDiskDiffDiskSettingsArgs'] diff_disk_settings: A `diff_disk_settings` block as defined above.
        :param pulumi.Input[str] disk_encryption_set_id: The ID of the Disk Encryption Set which should be used to Encrypt this OS Disk.
        :param pulumi.Input[float] disk_size_gb: The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine is sourced from.
        :param pulumi.Input[str] name: The name which should be used for the Internal OS Disk. Changing this forces a new resource to be created.
        :param pulumi.Input[bool] write_accelerator_enabled: Should Write Accelerator be Enabled for this OS Disk? Defaults to `false`.
        """
        __self__.caching = caching
        __self__.storage_account_type = storage_account_type
        __self__.diff_disk_settings = diff_disk_settings
        __self__.disk_encryption_set_id = disk_encryption_set_id
        __self__.disk_size_gb = disk_size_gb
        __self__.name = name
        __self__.write_accelerator_enabled = write_accelerator_enabled

@pulumi.input_type
class LinuxVirtualMachineOsDiskDiffDiskSettingsArgs:
    option: pulumi.Input[str] = pulumi.input_property("option")
    """
    Specifies the Ephemeral Disk Settings for the OS Disk. At this time the only possible value is `Local`. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, option: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] option: Specifies the Ephemeral Disk Settings for the OS Disk. At this time the only possible value is `Local`. Changing this forces a new resource to be created.
        """
        __self__.option = option

@pulumi.input_type
class LinuxVirtualMachinePlanArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    Specifies the Name of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
    """
    product: pulumi.Input[str] = pulumi.input_property("product")
    """
    Specifies the Product of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
    """
    publisher: pulumi.Input[str] = pulumi.input_property("publisher")
    """
    Specifies the Publisher of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], product: pulumi.Input[str], publisher: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] name: Specifies the Name of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
        :param pulumi.Input[str] product: Specifies the Product of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
        :param pulumi.Input[str] publisher: Specifies the Publisher of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
        """
        __self__.name = name
        __self__.product = product
        __self__.publisher = publisher

@pulumi.input_type
class LinuxVirtualMachineScaleSetAdditionalCapabilitiesArgs:
    ultra_ssd_enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("ultraSsdEnabled")
    """
    Should the capacity to enable Data Disks of the `UltraSSD_LRS` storage account type be supported on this Virtual Machine Scale Set? Defaults to `false`. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, ultra_ssd_enabled: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[bool] ultra_ssd_enabled: Should the capacity to enable Data Disks of the `UltraSSD_LRS` storage account type be supported on this Virtual Machine Scale Set? Defaults to `false`. Changing this forces a new resource to be created.
        """
        __self__.ultra_ssd_enabled = ultra_ssd_enabled

@pulumi.input_type
class LinuxVirtualMachineScaleSetAdminSshKeyArgs:
    public_key: pulumi.Input[str] = pulumi.input_property("publicKey")
    """
    The Public Key which should be used for authentication, which needs to be at least 2048-bit and in `ssh-rsa` format.
    """
    username: pulumi.Input[str] = pulumi.input_property("username")
    """
    The Username for which this Public SSH Key should be configured.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, public_key: pulumi.Input[str], username: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] public_key: The Public Key which should be used for authentication, which needs to be at least 2048-bit and in `ssh-rsa` format.
        :param pulumi.Input[str] username: The Username for which this Public SSH Key should be configured.
        """
        __self__.public_key = public_key
        __self__.username = username

@pulumi.input_type
class LinuxVirtualMachineScaleSetAutomaticInstanceRepairArgs:
    enabled: pulumi.Input[bool] = pulumi.input_property("enabled")
    """
    Should the automatic instance repair be enabled on this Virtual Machine Scale Set?
    """
    grace_period: Optional[pulumi.Input[str]] = pulumi.input_property("gracePeriod")
    """
    Amount of time (in minutes, between 30 and 90, defaults to 30 minutes) for which automatic repairs will be delayed. The grace period starts right after the VM is found unhealthy. The time duration should be specified in ISO 8601 format.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, enabled: pulumi.Input[bool], grace_period: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[bool] enabled: Should the automatic instance repair be enabled on this Virtual Machine Scale Set?
        :param pulumi.Input[str] grace_period: Amount of time (in minutes, between 30 and 90, defaults to 30 minutes) for which automatic repairs will be delayed. The grace period starts right after the VM is found unhealthy. The time duration should be specified in ISO 8601 format.
        """
        __self__.enabled = enabled
        __self__.grace_period = grace_period

@pulumi.input_type
class LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs:
    disable_automatic_rollback: pulumi.Input[bool] = pulumi.input_property("disableAutomaticRollback")
    """
    Should automatic rollbacks be disabled? Changing this forces a new resource to be created.
    """
    enable_automatic_os_upgrade: pulumi.Input[bool] = pulumi.input_property("enableAutomaticOsUpgrade")
    """
    Should OS Upgrades automatically be applied to Scale Set instances in a rolling fashion when a newer version of the OS Image becomes available? Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, disable_automatic_rollback: pulumi.Input[bool], enable_automatic_os_upgrade: pulumi.Input[bool]) -> None:
        """
        :param pulumi.Input[bool] disable_automatic_rollback: Should automatic rollbacks be disabled? Changing this forces a new resource to be created.
        :param pulumi.Input[bool] enable_automatic_os_upgrade: Should OS Upgrades automatically be applied to Scale Set instances in a rolling fashion when a newer version of the OS Image becomes available? Changing this forces a new resource to be created.
        """
        __self__.disable_automatic_rollback = disable_automatic_rollback
        __self__.enable_automatic_os_upgrade = enable_automatic_os_upgrade

@pulumi.input_type
class LinuxVirtualMachineScaleSetBootDiagnosticsArgs:
    storage_account_uri: pulumi.Input[str] = pulumi.input_property("storageAccountUri")
    """
    The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, storage_account_uri: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] storage_account_uri: The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.
        """
        __self__.storage_account_uri = storage_account_uri

@pulumi.input_type
class LinuxVirtualMachineScaleSetDataDiskArgs:
    caching: pulumi.Input[str] = pulumi.input_property("caching")
    """
    The type of Caching which should be used for this Data Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
    """
    disk_size_gb: pulumi.Input[float] = pulumi.input_property("diskSizeGb")
    """
    The size of the Data Disk which should be created.
    """
    lun: pulumi.Input[float] = pulumi.input_property("lun")
    """
    The Logical Unit Number of the Data Disk, which must be unique within the Virtual Machine.
    """
    storage_account_type: pulumi.Input[str] = pulumi.input_property("storageAccountType")
    """
    The Type of Storage Account which should back this Data Disk. Possible values include `Standard_LRS`, `StandardSSD_LRS`, `Premium_LRS` and `UltraSSD_LRS`.
    """
    create_option: Optional[pulumi.Input[str]] = pulumi.input_property("createOption")
    """
    The create option which should be used for this Data Disk. Possible values are `Empty` and `FromImage`. Defaults to `Empty`. (`FromImage` should only be used if the source image includes data disks).
    """
    disk_encryption_set_id: Optional[pulumi.Input[str]] = pulumi.input_property("diskEncryptionSetId")
    """
    The ID of the Disk Encryption Set which should be used to encrypt this Data Disk.
    """
    write_accelerator_enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("writeAcceleratorEnabled")
    """
    Should Write Accelerator be enabled for this Data Disk? Defaults to `false`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, caching: pulumi.Input[str], disk_size_gb: pulumi.Input[float], lun: pulumi.Input[float], storage_account_type: pulumi.Input[str], create_option: Optional[pulumi.Input[str]] = None, disk_encryption_set_id: Optional[pulumi.Input[str]] = None, write_accelerator_enabled: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[str] caching: The type of Caching which should be used for this Data Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
        :param pulumi.Input[float] disk_size_gb: The size of the Data Disk which should be created.
        :param pulumi.Input[float] lun: The Logical Unit Number of the Data Disk, which must be unique within the Virtual Machine.
        :param pulumi.Input[str] storage_account_type: The Type of Storage Account which should back this Data Disk. Possible values include `Standard_LRS`, `StandardSSD_LRS`, `Premium_LRS` and `UltraSSD_LRS`.
        :param pulumi.Input[str] create_option: The create option which should be used for this Data Disk. Possible values are `Empty` and `FromImage`. Defaults to `Empty`. (`FromImage` should only be used if the source image includes data disks).
        :param pulumi.Input[str] disk_encryption_set_id: The ID of the Disk Encryption Set which should be used to encrypt this Data Disk.
        :param pulumi.Input[bool] write_accelerator_enabled: Should Write Accelerator be enabled for this Data Disk? Defaults to `false`.
        """
        __self__.caching = caching
        __self__.disk_size_gb = disk_size_gb
        __self__.lun = lun
        __self__.storage_account_type = storage_account_type
        __self__.create_option = create_option
        __self__.disk_encryption_set_id = disk_encryption_set_id
        __self__.write_accelerator_enabled = write_accelerator_enabled

@pulumi.input_type
class LinuxVirtualMachineScaleSetIdentityArgs:
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    The type of Managed Identity which should be assigned to the Linux Virtual Machine Scale Set. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
    """
    identity_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("identityIds")
    """
    A list of User Managed Identity ID's which should be assigned to the Linux Virtual Machine Scale Set.
    """
    principal_id: Optional[pulumi.Input[str]] = pulumi.input_property("principalId")
    """
    The ID of the System Managed Service Principal.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, type: pulumi.Input[str], identity_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, principal_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] type: The type of Managed Identity which should be assigned to the Linux Virtual Machine Scale Set. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
        :param pulumi.Input[List[pulumi.Input[str]]] identity_ids: A list of User Managed Identity ID's which should be assigned to the Linux Virtual Machine Scale Set.
        :param pulumi.Input[str] principal_id: The ID of the System Managed Service Principal.
        """
        __self__.type = type
        __self__.identity_ids = identity_ids
        __self__.principal_id = principal_id

@pulumi.input_type
class LinuxVirtualMachineScaleSetNetworkInterfaceArgs:
    ip_configurations: pulumi.Input[List[pulumi.Input['LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs']]] = pulumi.input_property("ipConfigurations")
    """
    One or more `ip_configuration` blocks as defined above.
    """
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The Name which should be used for this Network Interface. Changing this forces a new resource to be created.
    """
    dns_servers: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("dnsServers")
    """
    A list of IP Addresses of DNS Servers which should be assigned to the Network Interface.
    """
    enable_accelerated_networking: Optional[pulumi.Input[bool]] = pulumi.input_property("enableAcceleratedNetworking")
    """
    Does this Network Interface support Accelerated Networking? Defaults to `false`.
    """
    enable_ip_forwarding: Optional[pulumi.Input[bool]] = pulumi.input_property("enableIpForwarding")
    """
    Does this Network Interface support IP Forwarding? Defaults to `false`.
    """
    network_security_group_id: Optional[pulumi.Input[str]] = pulumi.input_property("networkSecurityGroupId")
    """
    The ID of a Network Security Group which should be assigned to this Network Interface.
    """
    primary: Optional[pulumi.Input[bool]] = pulumi.input_property("primary")
    """
    Is this the Primary IP Configuration?
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, ip_configurations: pulumi.Input[List[pulumi.Input['LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs']]], name: pulumi.Input[str], dns_servers: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, enable_accelerated_networking: Optional[pulumi.Input[bool]] = None, enable_ip_forwarding: Optional[pulumi.Input[bool]] = None, network_security_group_id: Optional[pulumi.Input[str]] = None, primary: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input['LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs']]] ip_configurations: One or more `ip_configuration` blocks as defined above.
        :param pulumi.Input[str] name: The Name which should be used for this Network Interface. Changing this forces a new resource to be created.
        :param pulumi.Input[List[pulumi.Input[str]]] dns_servers: A list of IP Addresses of DNS Servers which should be assigned to the Network Interface.
        :param pulumi.Input[bool] enable_accelerated_networking: Does this Network Interface support Accelerated Networking? Defaults to `false`.
        :param pulumi.Input[bool] enable_ip_forwarding: Does this Network Interface support IP Forwarding? Defaults to `false`.
        :param pulumi.Input[str] network_security_group_id: The ID of a Network Security Group which should be assigned to this Network Interface.
        :param pulumi.Input[bool] primary: Is this the Primary IP Configuration?
        """
        __self__.ip_configurations = ip_configurations
        __self__.name = name
        __self__.dns_servers = dns_servers
        __self__.enable_accelerated_networking = enable_accelerated_networking
        __self__.enable_ip_forwarding = enable_ip_forwarding
        __self__.network_security_group_id = network_security_group_id
        __self__.primary = primary

@pulumi.input_type
class LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The Name which should be used for this IP Configuration.
    """
    application_gateway_backend_address_pool_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("applicationGatewayBackendAddressPoolIds")
    """
    A list of Backend Address Pools ID's from a Application Gateway which this Virtual Machine Scale Set should be connected to.
    """
    application_security_group_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("applicationSecurityGroupIds")
    """
    A list of Application Security Group ID's which this Virtual Machine Scale Set should be connected to.
    """
    load_balancer_backend_address_pool_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("loadBalancerBackendAddressPoolIds")
    """
    A list of Backend Address Pools ID's from a Load Balancer which this Virtual Machine Scale Set should be connected to.
    """
    load_balancer_inbound_nat_rules_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("loadBalancerInboundNatRulesIds")
    """
    A list of NAT Rule ID's from a Load Balancer which this Virtual Machine Scale Set should be connected to.
    """
    primary: Optional[pulumi.Input[bool]] = pulumi.input_property("primary")
    """
    Is this the Primary IP Configuration for this Network Interface? Defaults to `false`.
    """
    public_ip_addresses: Optional[pulumi.Input[List[pulumi.Input['LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs']]]] = pulumi.input_property("publicIpAddresses")
    """
    A `public_ip_address` block as defined below.
    """
    subnet_id: Optional[pulumi.Input[str]] = pulumi.input_property("subnetId")
    """
    The ID of the Subnet which this IP Configuration should be connected to.
    """
    version: Optional[pulumi.Input[str]] = pulumi.input_property("version")
    """
    The Internet Protocol Version which should be used for this IP Configuration. Possible values are `IPv4` and `IPv6`. Defaults to `IPv4`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], application_gateway_backend_address_pool_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, application_security_group_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, load_balancer_backend_address_pool_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, load_balancer_inbound_nat_rules_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, primary: Optional[pulumi.Input[bool]] = None, public_ip_addresses: Optional[pulumi.Input[List[pulumi.Input['LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs']]]] = None, subnet_id: Optional[pulumi.Input[str]] = None, version: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] name: The Name which should be used for this IP Configuration.
        :param pulumi.Input[List[pulumi.Input[str]]] application_gateway_backend_address_pool_ids: A list of Backend Address Pools ID's from a Application Gateway which this Virtual Machine Scale Set should be connected to.
        :param pulumi.Input[List[pulumi.Input[str]]] application_security_group_ids: A list of Application Security Group ID's which this Virtual Machine Scale Set should be connected to.
        :param pulumi.Input[List[pulumi.Input[str]]] load_balancer_backend_address_pool_ids: A list of Backend Address Pools ID's from a Load Balancer which this Virtual Machine Scale Set should be connected to.
        :param pulumi.Input[List[pulumi.Input[str]]] load_balancer_inbound_nat_rules_ids: A list of NAT Rule ID's from a Load Balancer which this Virtual Machine Scale Set should be connected to.
        :param pulumi.Input[bool] primary: Is this the Primary IP Configuration for this Network Interface? Defaults to `false`.
        :param pulumi.Input[List[pulumi.Input['LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs']]] public_ip_addresses: A `public_ip_address` block as defined below.
        :param pulumi.Input[str] subnet_id: The ID of the Subnet which this IP Configuration should be connected to.
        :param pulumi.Input[str] version: The Internet Protocol Version which should be used for this IP Configuration. Possible values are `IPv4` and `IPv6`. Defaults to `IPv4`.
        """
        __self__.name = name
        __self__.application_gateway_backend_address_pool_ids = application_gateway_backend_address_pool_ids
        __self__.application_security_group_ids = application_security_group_ids
        __self__.load_balancer_backend_address_pool_ids = load_balancer_backend_address_pool_ids
        __self__.load_balancer_inbound_nat_rules_ids = load_balancer_inbound_nat_rules_ids
        __self__.primary = primary
        __self__.public_ip_addresses = public_ip_addresses
        __self__.subnet_id = subnet_id
        __self__.version = version

@pulumi.input_type
class LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The Name of the Public IP Address Configuration.
    """
    domain_name_label: Optional[pulumi.Input[str]] = pulumi.input_property("domainNameLabel")
    """
    The Prefix which should be used for the Domain Name Label for each Virtual Machine Instance. Azure concatenates the Domain Name Label and Virtual Machine Index to create a unique Domain Name Label for each Virtual Machine.
    """
    idle_timeout_in_minutes: Optional[pulumi.Input[float]] = pulumi.input_property("idleTimeoutInMinutes")
    """
    The Idle Timeout in Minutes for the Public IP Address. Possible values are in the range `4` to `32`.
    """
    ip_tags: Optional[pulumi.Input[List[pulumi.Input['LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArgs']]]] = pulumi.input_property("ipTags")
    """
    One or more `ip_tag` blocks as defined above.
    """
    public_ip_prefix_id: Optional[pulumi.Input[str]] = pulumi.input_property("publicIpPrefixId")
    """
    The ID of the Public IP Address Prefix from where Public IP Addresses should be allocated. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], domain_name_label: Optional[pulumi.Input[str]] = None, idle_timeout_in_minutes: Optional[pulumi.Input[float]] = None, ip_tags: Optional[pulumi.Input[List[pulumi.Input['LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArgs']]]] = None, public_ip_prefix_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] name: The Name of the Public IP Address Configuration.
        :param pulumi.Input[str] domain_name_label: The Prefix which should be used for the Domain Name Label for each Virtual Machine Instance. Azure concatenates the Domain Name Label and Virtual Machine Index to create a unique Domain Name Label for each Virtual Machine.
        :param pulumi.Input[float] idle_timeout_in_minutes: The Idle Timeout in Minutes for the Public IP Address. Possible values are in the range `4` to `32`.
        :param pulumi.Input[List[pulumi.Input['LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArgs']]] ip_tags: One or more `ip_tag` blocks as defined above.
        :param pulumi.Input[str] public_ip_prefix_id: The ID of the Public IP Address Prefix from where Public IP Addresses should be allocated. Changing this forces a new resource to be created.
        """
        __self__.name = name
        __self__.domain_name_label = domain_name_label
        __self__.idle_timeout_in_minutes = idle_timeout_in_minutes
        __self__.ip_tags = ip_tags
        __self__.public_ip_prefix_id = public_ip_prefix_id

@pulumi.input_type
class LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArgs:
    tag: pulumi.Input[str] = pulumi.input_property("tag")
    """
    The IP Tag associated with the Public IP, such as `SQL` or `Storage`.
    """
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    The Type of IP Tag, such as `FirstPartyUsage`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, tag: pulumi.Input[str], type: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] tag: The IP Tag associated with the Public IP, such as `SQL` or `Storage`.
        :param pulumi.Input[str] type: The Type of IP Tag, such as `FirstPartyUsage`.
        """
        __self__.tag = tag
        __self__.type = type

@pulumi.input_type
class LinuxVirtualMachineScaleSetOsDiskArgs:
    caching: pulumi.Input[str] = pulumi.input_property("caching")
    """
    The Type of Caching which should be used for the Internal OS Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
    """
    storage_account_type: pulumi.Input[str] = pulumi.input_property("storageAccountType")
    """
    The Type of Storage Account which should back this the Internal OS Disk. Possible values include `Standard_LRS`, `StandardSSD_LRS` and `Premium_LRS`.
    """
    diff_disk_settings: Optional[pulumi.Input['LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs']] = pulumi.input_property("diffDiskSettings")
    """
    A `diff_disk_settings` block as defined above. Changing this forces a new resource to be created.
    """
    disk_encryption_set_id: Optional[pulumi.Input[str]] = pulumi.input_property("diskEncryptionSetId")
    """
    The ID of the Disk Encryption Set which should be used to encrypt this OS Disk.
    """
    disk_size_gb: Optional[pulumi.Input[float]] = pulumi.input_property("diskSizeGb")
    """
    The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine Scale Set is sourced from.
    """
    write_accelerator_enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("writeAcceleratorEnabled")
    """
    Should Write Accelerator be Enabled for this OS Disk? Defaults to `false`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, caching: pulumi.Input[str], storage_account_type: pulumi.Input[str], diff_disk_settings: Optional[pulumi.Input['LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs']] = None, disk_encryption_set_id: Optional[pulumi.Input[str]] = None, disk_size_gb: Optional[pulumi.Input[float]] = None, write_accelerator_enabled: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[str] caching: The Type of Caching which should be used for the Internal OS Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
        :param pulumi.Input[str] storage_account_type: The Type of Storage Account which should back this the Internal OS Disk. Possible values include `Standard_LRS`, `StandardSSD_LRS` and `Premium_LRS`.
        :param pulumi.Input['LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs'] diff_disk_settings: A `diff_disk_settings` block as defined above. Changing this forces a new resource to be created.
        :param pulumi.Input[str] disk_encryption_set_id: The ID of the Disk Encryption Set which should be used to encrypt this OS Disk.
        :param pulumi.Input[float] disk_size_gb: The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine Scale Set is sourced from.
        :param pulumi.Input[bool] write_accelerator_enabled: Should Write Accelerator be Enabled for this OS Disk? Defaults to `false`.
        """
        __self__.caching = caching
        __self__.storage_account_type = storage_account_type
        __self__.diff_disk_settings = diff_disk_settings
        __self__.disk_encryption_set_id = disk_encryption_set_id
        __self__.disk_size_gb = disk_size_gb
        __self__.write_accelerator_enabled = write_accelerator_enabled

@pulumi.input_type
class LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs:
    option: pulumi.Input[str] = pulumi.input_property("option")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, option: pulumi.Input[str]) -> None:
        __self__.option = option

@pulumi.input_type
class LinuxVirtualMachineScaleSetPlanArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
    """
    product: pulumi.Input[str] = pulumi.input_property("product")
    publisher: pulumi.Input[str] = pulumi.input_property("publisher")
    """
    Specifies the publisher of the image used to create the virtual machines.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], product: pulumi.Input[str], publisher: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] name: The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
        :param pulumi.Input[str] publisher: Specifies the publisher of the image used to create the virtual machines.
        """
        __self__.name = name
        __self__.product = product
        __self__.publisher = publisher

@pulumi.input_type
class LinuxVirtualMachineScaleSetRollingUpgradePolicyArgs:
    max_batch_instance_percent: pulumi.Input[float] = pulumi.input_property("maxBatchInstancePercent")
    """
    The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. Changing this forces a new resource to be created.
    """
    max_unhealthy_instance_percent: pulumi.Input[float] = pulumi.input_property("maxUnhealthyInstancePercent")
    """
    The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. Changing this forces a new resource to be created.
    """
    max_unhealthy_upgraded_instance_percent: pulumi.Input[float] = pulumi.input_property("maxUnhealthyUpgradedInstancePercent")
    """
    The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. Changing this forces a new resource to be created.
    """
    pause_time_between_batches: pulumi.Input[str] = pulumi.input_property("pauseTimeBetweenBatches")
    """
    The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, max_batch_instance_percent: pulumi.Input[float], max_unhealthy_instance_percent: pulumi.Input[float], max_unhealthy_upgraded_instance_percent: pulumi.Input[float], pause_time_between_batches: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[float] max_batch_instance_percent: The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. Changing this forces a new resource to be created.
        :param pulumi.Input[float] max_unhealthy_instance_percent: The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. Changing this forces a new resource to be created.
        :param pulumi.Input[float] max_unhealthy_upgraded_instance_percent: The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. Changing this forces a new resource to be created.
        :param pulumi.Input[str] pause_time_between_batches: The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format. Changing this forces a new resource to be created.
        """
        __self__.max_batch_instance_percent = max_batch_instance_percent
        __self__.max_unhealthy_instance_percent = max_unhealthy_instance_percent
        __self__.max_unhealthy_upgraded_instance_percent = max_unhealthy_upgraded_instance_percent
        __self__.pause_time_between_batches = pause_time_between_batches

@pulumi.input_type
class LinuxVirtualMachineScaleSetSecretArgs:
    certificates: pulumi.Input[List[pulumi.Input['LinuxVirtualMachineScaleSetSecretCertificateArgs']]] = pulumi.input_property("certificates")
    """
    One or more `certificate` blocks as defined above.
    """
    key_vault_id: pulumi.Input[str] = pulumi.input_property("keyVaultId")
    """
    The ID of the Key Vault from which all Secrets should be sourced.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, certificates: pulumi.Input[List[pulumi.Input['LinuxVirtualMachineScaleSetSecretCertificateArgs']]], key_vault_id: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[List[pulumi.Input['LinuxVirtualMachineScaleSetSecretCertificateArgs']]] certificates: One or more `certificate` blocks as defined above.
        :param pulumi.Input[str] key_vault_id: The ID of the Key Vault from which all Secrets should be sourced.
        """
        __self__.certificates = certificates
        __self__.key_vault_id = key_vault_id

@pulumi.input_type
class LinuxVirtualMachineScaleSetSecretCertificateArgs:
    url: pulumi.Input[str] = pulumi.input_property("url")
    """
    The Secret URL of a Key Vault Certificate.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, url: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] url: The Secret URL of a Key Vault Certificate.
        """
        __self__.url = url

@pulumi.input_type
class LinuxVirtualMachineScaleSetSourceImageReferenceArgs:
    offer: pulumi.Input[str] = pulumi.input_property("offer")
    """
    Specifies the offer of the image used to create the virtual machines.
    """
    publisher: pulumi.Input[str] = pulumi.input_property("publisher")
    """
    Specifies the publisher of the image used to create the virtual machines.
    """
    sku: pulumi.Input[str] = pulumi.input_property("sku")
    """
    Specifies the SKU of the image used to create the virtual machines.
    """
    version: pulumi.Input[str] = pulumi.input_property("version")
    """
    Specifies the version of the image used to create the virtual machines.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, offer: pulumi.Input[str], publisher: pulumi.Input[str], sku: pulumi.Input[str], version: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] offer: Specifies the offer of the image used to create the virtual machines.
        :param pulumi.Input[str] publisher: Specifies the publisher of the image used to create the virtual machines.
        :param pulumi.Input[str] sku: Specifies the SKU of the image used to create the virtual machines.
        :param pulumi.Input[str] version: Specifies the version of the image used to create the virtual machines.
        """
        __self__.offer = offer
        __self__.publisher = publisher
        __self__.sku = sku
        __self__.version = version

@pulumi.input_type
class LinuxVirtualMachineScaleSetTerminateNotificationArgs:
    enabled: pulumi.Input[bool] = pulumi.input_property("enabled")
    """
    Should the terminate notification be enabled on this Virtual Machine Scale Set? Defaults to `false`.
    """
    timeout: Optional[pulumi.Input[str]] = pulumi.input_property("timeout")
    """
    Length of time (in minutes, between 5 and 15) a notification to be sent to the VM on the instance metadata server till the VM gets deleted. The time duration should be specified in ISO 8601 format.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, enabled: pulumi.Input[bool], timeout: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[bool] enabled: Should the terminate notification be enabled on this Virtual Machine Scale Set? Defaults to `false`.
        :param pulumi.Input[str] timeout: Length of time (in minutes, between 5 and 15) a notification to be sent to the VM on the instance metadata server till the VM gets deleted. The time duration should be specified in ISO 8601 format.
        """
        __self__.enabled = enabled
        __self__.timeout = timeout

@pulumi.input_type
class LinuxVirtualMachineSecretArgs:
    certificates: pulumi.Input[List[pulumi.Input['LinuxVirtualMachineSecretCertificateArgs']]] = pulumi.input_property("certificates")
    """
    One or more `certificate` blocks as defined above.
    """
    key_vault_id: pulumi.Input[str] = pulumi.input_property("keyVaultId")
    """
    The ID of the Key Vault from which all Secrets should be sourced.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, certificates: pulumi.Input[List[pulumi.Input['LinuxVirtualMachineSecretCertificateArgs']]], key_vault_id: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[List[pulumi.Input['LinuxVirtualMachineSecretCertificateArgs']]] certificates: One or more `certificate` blocks as defined above.
        :param pulumi.Input[str] key_vault_id: The ID of the Key Vault from which all Secrets should be sourced.
        """
        __self__.certificates = certificates
        __self__.key_vault_id = key_vault_id

@pulumi.input_type
class LinuxVirtualMachineSecretCertificateArgs:
    url: pulumi.Input[str] = pulumi.input_property("url")
    """
    The Secret URL of a Key Vault Certificate.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, url: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] url: The Secret URL of a Key Vault Certificate.
        """
        __self__.url = url

@pulumi.input_type
class LinuxVirtualMachineSourceImageReferenceArgs:
    offer: pulumi.Input[str] = pulumi.input_property("offer")
    """
    Specifies the offer of the image used to create the virtual machines.
    """
    publisher: pulumi.Input[str] = pulumi.input_property("publisher")
    """
    Specifies the publisher of the image used to create the virtual machines.
    """
    sku: pulumi.Input[str] = pulumi.input_property("sku")
    """
    Specifies the SKU of the image used to create the virtual machines.
    """
    version: pulumi.Input[str] = pulumi.input_property("version")
    """
    Specifies the version of the image used to create the virtual machines.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, offer: pulumi.Input[str], publisher: pulumi.Input[str], sku: pulumi.Input[str], version: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] offer: Specifies the offer of the image used to create the virtual machines.
        :param pulumi.Input[str] publisher: Specifies the publisher of the image used to create the virtual machines.
        :param pulumi.Input[str] sku: Specifies the SKU of the image used to create the virtual machines.
        :param pulumi.Input[str] version: Specifies the version of the image used to create the virtual machines.
        """
        __self__.offer = offer
        __self__.publisher = publisher
        __self__.sku = sku
        __self__.version = version

@pulumi.input_type
class ManagedDiskEncryptionSettingsArgs:
    enabled: pulumi.Input[bool] = pulumi.input_property("enabled")
    """
    Is Encryption enabled on this Managed Disk? Changing this forces a new resource to be created.
    """
    disk_encryption_key: Optional[pulumi.Input['ManagedDiskEncryptionSettingsDiskEncryptionKeyArgs']] = pulumi.input_property("diskEncryptionKey")
    """
    A `disk_encryption_key` block as defined above.
    """
    key_encryption_key: Optional[pulumi.Input['ManagedDiskEncryptionSettingsKeyEncryptionKeyArgs']] = pulumi.input_property("keyEncryptionKey")
    """
    A `key_encryption_key` block as defined below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, enabled: pulumi.Input[bool], disk_encryption_key: Optional[pulumi.Input['ManagedDiskEncryptionSettingsDiskEncryptionKeyArgs']] = None, key_encryption_key: Optional[pulumi.Input['ManagedDiskEncryptionSettingsKeyEncryptionKeyArgs']] = None) -> None:
        """
        :param pulumi.Input[bool] enabled: Is Encryption enabled on this Managed Disk? Changing this forces a new resource to be created.
        :param pulumi.Input['ManagedDiskEncryptionSettingsDiskEncryptionKeyArgs'] disk_encryption_key: A `disk_encryption_key` block as defined above.
        :param pulumi.Input['ManagedDiskEncryptionSettingsKeyEncryptionKeyArgs'] key_encryption_key: A `key_encryption_key` block as defined below.
        """
        __self__.enabled = enabled
        __self__.disk_encryption_key = disk_encryption_key
        __self__.key_encryption_key = key_encryption_key

@pulumi.input_type
class ManagedDiskEncryptionSettingsDiskEncryptionKeyArgs:
    secret_url: pulumi.Input[str] = pulumi.input_property("secretUrl")
    """
    The URL to the Key Vault Secret used as the Disk Encryption Key. This can be found as `id` on the `keyvault.Secret` resource.
    """
    source_vault_id: pulumi.Input[str] = pulumi.input_property("sourceVaultId")
    """
    The ID of the source Key Vault.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, secret_url: pulumi.Input[str], source_vault_id: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] secret_url: The URL to the Key Vault Secret used as the Disk Encryption Key. This can be found as `id` on the `keyvault.Secret` resource.
        :param pulumi.Input[str] source_vault_id: The ID of the source Key Vault.
        """
        __self__.secret_url = secret_url
        __self__.source_vault_id = source_vault_id

@pulumi.input_type
class ManagedDiskEncryptionSettingsKeyEncryptionKeyArgs:
    key_url: pulumi.Input[str] = pulumi.input_property("keyUrl")
    """
    The URL to the Key Vault Key used as the Key Encryption Key. This can be found as `id` on the `keyvault.Key` resource.
    """
    source_vault_id: pulumi.Input[str] = pulumi.input_property("sourceVaultId")
    """
    The ID of the source Key Vault.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, key_url: pulumi.Input[str], source_vault_id: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] key_url: The URL to the Key Vault Key used as the Key Encryption Key. This can be found as `id` on the `keyvault.Key` resource.
        :param pulumi.Input[str] source_vault_id: The ID of the source Key Vault.
        """
        __self__.key_url = key_url
        __self__.source_vault_id = source_vault_id

@pulumi.input_type
class ScaleSetBootDiagnosticsArgs:
    storage_uri: pulumi.Input[str] = pulumi.input_property("storageUri")
    enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("enabled")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, storage_uri: pulumi.Input[str], enabled: Optional[pulumi.Input[bool]] = None) -> None:
        __self__.storage_uri = storage_uri
        __self__.enabled = enabled

@pulumi.input_type
class ScaleSetExtensionArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    Specifies the name of the extension.
    """
    publisher: pulumi.Input[str] = pulumi.input_property("publisher")
    """
    The publisher of the extension, available publishers can be found by using the Azure CLI.
    """
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    The type of extension, available types for a publisher can be found using the Azure CLI.
    """
    type_handler_version: pulumi.Input[str] = pulumi.input_property("typeHandlerVersion")
    """
    Specifies the version of the extension to use, available versions can be found using the Azure CLI.
    """
    auto_upgrade_minor_version: Optional[pulumi.Input[bool]] = pulumi.input_property("autoUpgradeMinorVersion")
    """
    Specifies whether or not to use the latest minor version available.
    """
    protected_settings: Optional[pulumi.Input[str]] = pulumi.input_property("protectedSettings")
    """
    The protected_settings passed to the extension, like settings, these are specified as a JSON object in a string.
    """
    provision_after_extensions: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("provisionAfterExtensions")
    """
    Specifies a dependency array of extensions required to be executed before, the array stores the name of each extension.
    """
    settings: Optional[pulumi.Input[str]] = pulumi.input_property("settings")
    """
    The settings passed to the extension, these are specified as a JSON object in a string.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], publisher: pulumi.Input[str], type: pulumi.Input[str], type_handler_version: pulumi.Input[str], auto_upgrade_minor_version: Optional[pulumi.Input[bool]] = None, protected_settings: Optional[pulumi.Input[str]] = None, provision_after_extensions: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, settings: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] name: Specifies the name of the extension.
        :param pulumi.Input[str] publisher: The publisher of the extension, available publishers can be found by using the Azure CLI.
        :param pulumi.Input[str] type: The type of extension, available types for a publisher can be found using the Azure CLI.
        :param pulumi.Input[str] type_handler_version: Specifies the version of the extension to use, available versions can be found using the Azure CLI.
        :param pulumi.Input[bool] auto_upgrade_minor_version: Specifies whether or not to use the latest minor version available.
        :param pulumi.Input[str] protected_settings: The protected_settings passed to the extension, like settings, these are specified as a JSON object in a string.
        :param pulumi.Input[List[pulumi.Input[str]]] provision_after_extensions: Specifies a dependency array of extensions required to be executed before, the array stores the name of each extension.
        :param pulumi.Input[str] settings: The settings passed to the extension, these are specified as a JSON object in a string.
        """
        __self__.name = name
        __self__.publisher = publisher
        __self__.type = type
        __self__.type_handler_version = type_handler_version
        __self__.auto_upgrade_minor_version = auto_upgrade_minor_version
        __self__.protected_settings = protected_settings
        __self__.provision_after_extensions = provision_after_extensions
        __self__.settings = settings

@pulumi.input_type
class ScaleSetIdentityArgs:
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    Specifies the identity type to be assigned to the scale set. Allowable values are `SystemAssigned` and `UserAssigned`. For the `SystemAssigned` identity the scale set's Service Principal ID (SPN) can be retrieved after the scale set has been created. See [documentation](https://docs.microsoft.com/en-us/azure/active-directory/managed-service-identity/overview) for more information.
    """
    identity_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("identityIds")
    """
    Specifies a list of user managed identity ids to be assigned to the VMSS. Required if `type` is `UserAssigned`.
    """
    principal_id: Optional[pulumi.Input[str]] = pulumi.input_property("principalId")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, type: pulumi.Input[str], identity_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, principal_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] type: Specifies the identity type to be assigned to the scale set. Allowable values are `SystemAssigned` and `UserAssigned`. For the `SystemAssigned` identity the scale set's Service Principal ID (SPN) can be retrieved after the scale set has been created. See [documentation](https://docs.microsoft.com/en-us/azure/active-directory/managed-service-identity/overview) for more information.
        :param pulumi.Input[List[pulumi.Input[str]]] identity_ids: Specifies a list of user managed identity ids to be assigned to the VMSS. Required if `type` is `UserAssigned`.
        """
        __self__.type = type
        __self__.identity_ids = identity_ids
        __self__.principal_id = principal_id

@pulumi.input_type
class ScaleSetNetworkProfileArgs:
    ip_configurations: pulumi.Input[List[pulumi.Input['ScaleSetNetworkProfileIpConfigurationArgs']]] = pulumi.input_property("ipConfigurations")
    """
    An ip_configuration block as documented below.
    """
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    Specifies the name of the network interface configuration.
    """
    primary: pulumi.Input[bool] = pulumi.input_property("primary")
    """
    Indicates whether network interfaces created from the network interface configuration will be the primary NIC of the VM.
    """
    accelerated_networking: Optional[pulumi.Input[bool]] = pulumi.input_property("acceleratedNetworking")
    """
    Specifies whether to enable accelerated networking or not. Defaults to `false`.
    """
    dns_settings: Optional[pulumi.Input['ScaleSetNetworkProfileDnsSettingsArgs']] = pulumi.input_property("dnsSettings")
    """
    A dns_settings block as documented below.
    """
    ip_forwarding: Optional[pulumi.Input[bool]] = pulumi.input_property("ipForwarding")
    """
    Whether IP forwarding is enabled on this NIC. Defaults to `false`.
    """
    network_security_group_id: Optional[pulumi.Input[str]] = pulumi.input_property("networkSecurityGroupId")
    """
    Specifies the identifier for the network security group.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, ip_configurations: pulumi.Input[List[pulumi.Input['ScaleSetNetworkProfileIpConfigurationArgs']]], name: pulumi.Input[str], primary: pulumi.Input[bool], accelerated_networking: Optional[pulumi.Input[bool]] = None, dns_settings: Optional[pulumi.Input['ScaleSetNetworkProfileDnsSettingsArgs']] = None, ip_forwarding: Optional[pulumi.Input[bool]] = None, network_security_group_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input['ScaleSetNetworkProfileIpConfigurationArgs']]] ip_configurations: An ip_configuration block as documented below.
        :param pulumi.Input[str] name: Specifies the name of the network interface configuration.
        :param pulumi.Input[bool] primary: Indicates whether network interfaces created from the network interface configuration will be the primary NIC of the VM.
        :param pulumi.Input[bool] accelerated_networking: Specifies whether to enable accelerated networking or not. Defaults to `false`.
        :param pulumi.Input['ScaleSetNetworkProfileDnsSettingsArgs'] dns_settings: A dns_settings block as documented below.
        :param pulumi.Input[bool] ip_forwarding: Whether IP forwarding is enabled on this NIC. Defaults to `false`.
        :param pulumi.Input[str] network_security_group_id: Specifies the identifier for the network security group.
        """
        __self__.ip_configurations = ip_configurations
        __self__.name = name
        __self__.primary = primary
        __self__.accelerated_networking = accelerated_networking
        __self__.dns_settings = dns_settings
        __self__.ip_forwarding = ip_forwarding
        __self__.network_security_group_id = network_security_group_id

@pulumi.input_type
class ScaleSetNetworkProfileDnsSettingsArgs:
    dns_servers: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("dnsServers")
    """
    Specifies an array of dns servers.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, dns_servers: pulumi.Input[List[pulumi.Input[str]]]) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[str]]] dns_servers: Specifies an array of dns servers.
        """
        __self__.dns_servers = dns_servers

@pulumi.input_type
class ScaleSetNetworkProfileIpConfigurationArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    Specifies name of the IP configuration.
    """
    primary: pulumi.Input[bool] = pulumi.input_property("primary")
    """
    Specifies if this ip_configuration is the primary one.
    """
    subnet_id: pulumi.Input[str] = pulumi.input_property("subnetId")
    """
    Specifies the identifier of the subnet.
    """
    application_gateway_backend_address_pool_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("applicationGatewayBackendAddressPoolIds")
    """
    Specifies an array of references to backend address pools of application gateways. A scale set can reference backend address pools of multiple application gateways. Multiple scale sets can use the same application gateway.
    """
    application_security_group_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("applicationSecurityGroupIds")
    """
    Specifies up to `20` application security group IDs.
    """
    load_balancer_backend_address_pool_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("loadBalancerBackendAddressPoolIds")
    """
    Specifies an array of references to backend address pools of load balancers. A scale set can reference backend address pools of one public and one internal load balancer. Multiple scale sets cannot use the same load balancer.
    """
    load_balancer_inbound_nat_rules_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("loadBalancerInboundNatRulesIds")
    """
    Specifies an array of references to inbound NAT pools for load balancers. A scale set can reference inbound nat pools of one public and one internal load balancer. Multiple scale sets cannot use the same load balancer.
    """
    public_ip_address_configuration: Optional[pulumi.Input['ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationArgs']] = pulumi.input_property("publicIpAddressConfiguration")
    """
    Describes a virtual machines scale set IP Configuration's PublicIPAddress configuration. The public_ip_address_configuration is documented below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], primary: pulumi.Input[bool], subnet_id: pulumi.Input[str], application_gateway_backend_address_pool_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, application_security_group_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, load_balancer_backend_address_pool_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, load_balancer_inbound_nat_rules_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, public_ip_address_configuration: Optional[pulumi.Input['ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationArgs']] = None) -> None:
        """
        :param pulumi.Input[str] name: Specifies name of the IP configuration.
        :param pulumi.Input[bool] primary: Specifies if this ip_configuration is the primary one.
        :param pulumi.Input[str] subnet_id: Specifies the identifier of the subnet.
        :param pulumi.Input[List[pulumi.Input[str]]] application_gateway_backend_address_pool_ids: Specifies an array of references to backend address pools of application gateways. A scale set can reference backend address pools of multiple application gateways. Multiple scale sets can use the same application gateway.
        :param pulumi.Input[List[pulumi.Input[str]]] application_security_group_ids: Specifies up to `20` application security group IDs.
        :param pulumi.Input[List[pulumi.Input[str]]] load_balancer_backend_address_pool_ids: Specifies an array of references to backend address pools of load balancers. A scale set can reference backend address pools of one public and one internal load balancer. Multiple scale sets cannot use the same load balancer.
        :param pulumi.Input[List[pulumi.Input[str]]] load_balancer_inbound_nat_rules_ids: Specifies an array of references to inbound NAT pools for load balancers. A scale set can reference inbound nat pools of one public and one internal load balancer. Multiple scale sets cannot use the same load balancer.
        :param pulumi.Input['ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationArgs'] public_ip_address_configuration: Describes a virtual machines scale set IP Configuration's PublicIPAddress configuration. The public_ip_address_configuration is documented below.
        """
        __self__.name = name
        __self__.primary = primary
        __self__.subnet_id = subnet_id
        __self__.application_gateway_backend_address_pool_ids = application_gateway_backend_address_pool_ids
        __self__.application_security_group_ids = application_security_group_ids
        __self__.load_balancer_backend_address_pool_ids = load_balancer_backend_address_pool_ids
        __self__.load_balancer_inbound_nat_rules_ids = load_balancer_inbound_nat_rules_ids
        __self__.public_ip_address_configuration = public_ip_address_configuration

@pulumi.input_type
class ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationArgs:
    domain_name_label: pulumi.Input[str] = pulumi.input_property("domainNameLabel")
    """
    The domain name label for the dns settings.
    """
    idle_timeout: pulumi.Input[float] = pulumi.input_property("idleTimeout")
    """
    The idle timeout in minutes. This value must be between 4 and 30.
    """
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The name of the public ip address configuration
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, domain_name_label: pulumi.Input[str], idle_timeout: pulumi.Input[float], name: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] domain_name_label: The domain name label for the dns settings.
        :param pulumi.Input[float] idle_timeout: The idle timeout in minutes. This value must be between 4 and 30.
        :param pulumi.Input[str] name: The name of the public ip address configuration
        """
        __self__.domain_name_label = domain_name_label
        __self__.idle_timeout = idle_timeout
        __self__.name = name

@pulumi.input_type
class ScaleSetOsProfileArgs:
    admin_username: pulumi.Input[str] = pulumi.input_property("adminUsername")
    """
    Specifies the administrator account name to use for all the instances of virtual machines in the scale set.
    """
    computer_name_prefix: pulumi.Input[str] = pulumi.input_property("computerNamePrefix")
    """
    Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 9 characters long for windows images and 1 - 58 for linux. Changing this forces a new resource to be created.
    """
    admin_password: Optional[pulumi.Input[str]] = pulumi.input_property("adminPassword")
    """
    Specifies the administrator password to use for all the instances of virtual machines in a scale set.
    """
    custom_data: Optional[pulumi.Input[str]] = pulumi.input_property("customData")
    """
    Specifies custom data to supply to the machine. On linux-based systems, this can be used as a cloud-init script. On other systems, this will be copied as a file on disk. Internally, this provider will base64 encode this value before sending it to the API. The maximum length of the binary array is 65535 bytes.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, admin_username: pulumi.Input[str], computer_name_prefix: pulumi.Input[str], admin_password: Optional[pulumi.Input[str]] = None, custom_data: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] admin_username: Specifies the administrator account name to use for all the instances of virtual machines in the scale set.
        :param pulumi.Input[str] computer_name_prefix: Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 9 characters long for windows images and 1 - 58 for linux. Changing this forces a new resource to be created.
        :param pulumi.Input[str] admin_password: Specifies the administrator password to use for all the instances of virtual machines in a scale set.
        :param pulumi.Input[str] custom_data: Specifies custom data to supply to the machine. On linux-based systems, this can be used as a cloud-init script. On other systems, this will be copied as a file on disk. Internally, this provider will base64 encode this value before sending it to the API. The maximum length of the binary array is 65535 bytes.
        """
        __self__.admin_username = admin_username
        __self__.computer_name_prefix = computer_name_prefix
        __self__.admin_password = admin_password
        __self__.custom_data = custom_data

@pulumi.input_type
class ScaleSetOsProfileLinuxConfigArgs:
    disable_password_authentication: Optional[pulumi.Input[bool]] = pulumi.input_property("disablePasswordAuthentication")
    """
    Specifies whether password authentication should be disabled. Defaults to `false`. Changing this forces a new resource to be created.
    """
    ssh_keys: Optional[pulumi.Input[List[pulumi.Input['ScaleSetOsProfileLinuxConfigSshKeyArgs']]]] = pulumi.input_property("sshKeys")
    """
    Specifies a collection of `path` and `key_data` to be placed on the virtual machine.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, disable_password_authentication: Optional[pulumi.Input[bool]] = None, ssh_keys: Optional[pulumi.Input[List[pulumi.Input['ScaleSetOsProfileLinuxConfigSshKeyArgs']]]] = None) -> None:
        """
        :param pulumi.Input[bool] disable_password_authentication: Specifies whether password authentication should be disabled. Defaults to `false`. Changing this forces a new resource to be created.
        :param pulumi.Input[List[pulumi.Input['ScaleSetOsProfileLinuxConfigSshKeyArgs']]] ssh_keys: Specifies a collection of `path` and `key_data` to be placed on the virtual machine.
        """
        __self__.disable_password_authentication = disable_password_authentication
        __self__.ssh_keys = ssh_keys

@pulumi.input_type
class ScaleSetOsProfileLinuxConfigSshKeyArgs:
    path: pulumi.Input[str] = pulumi.input_property("path")
    key_data: Optional[pulumi.Input[str]] = pulumi.input_property("keyData")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, path: pulumi.Input[str], key_data: Optional[pulumi.Input[str]] = None) -> None:
        __self__.path = path
        __self__.key_data = key_data

@pulumi.input_type
class ScaleSetOsProfileSecretArgs:
    source_vault_id: pulumi.Input[str] = pulumi.input_property("sourceVaultId")
    """
    Specifies the key vault to use.
    """
    vault_certificates: Optional[pulumi.Input[List[pulumi.Input['ScaleSetOsProfileSecretVaultCertificateArgs']]]] = pulumi.input_property("vaultCertificates")
    """
    A collection of Vault Certificates as documented below
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, source_vault_id: pulumi.Input[str], vault_certificates: Optional[pulumi.Input[List[pulumi.Input['ScaleSetOsProfileSecretVaultCertificateArgs']]]] = None) -> None:
        """
        :param pulumi.Input[str] source_vault_id: Specifies the key vault to use.
        :param pulumi.Input[List[pulumi.Input['ScaleSetOsProfileSecretVaultCertificateArgs']]] vault_certificates: A collection of Vault Certificates as documented below
        """
        __self__.source_vault_id = source_vault_id
        __self__.vault_certificates = vault_certificates

@pulumi.input_type
class ScaleSetOsProfileSecretVaultCertificateArgs:
    certificate_url: pulumi.Input[str] = pulumi.input_property("certificateUrl")
    """
    It is the Base64 encoding of a JSON Object that which is encoded in UTF-8 of which the contents need to be `data`, `dataType` and `password`.
    """
    certificate_store: Optional[pulumi.Input[str]] = pulumi.input_property("certificateStore")
    """
    Specifies the certificate store on the Virtual Machine where the certificate should be added to.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, certificate_url: pulumi.Input[str], certificate_store: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] certificate_url: It is the Base64 encoding of a JSON Object that which is encoded in UTF-8 of which the contents need to be `data`, `dataType` and `password`.
        :param pulumi.Input[str] certificate_store: Specifies the certificate store on the Virtual Machine where the certificate should be added to.
        """
        __self__.certificate_url = certificate_url
        __self__.certificate_store = certificate_store

@pulumi.input_type
class ScaleSetOsProfileWindowsConfigArgs:
    additional_unattend_configs: Optional[pulumi.Input[List[pulumi.Input['ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArgs']]]] = pulumi.input_property("additionalUnattendConfigs")
    """
    An Additional Unattended Config block as documented below.
    """
    enable_automatic_upgrades: Optional[pulumi.Input[bool]] = pulumi.input_property("enableAutomaticUpgrades")
    """
    Indicates whether virtual machines in the scale set are enabled for automatic updates.
    """
    provision_vm_agent: Optional[pulumi.Input[bool]] = pulumi.input_property("provisionVmAgent")
    """
    Indicates whether virtual machine agent should be provisioned on the virtual machines in the scale set.
    """
    winrms: Optional[pulumi.Input[List[pulumi.Input['ScaleSetOsProfileWindowsConfigWinrmArgs']]]] = pulumi.input_property("winrms")
    """
    A collection of WinRM configuration blocks as documented below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, additional_unattend_configs: Optional[pulumi.Input[List[pulumi.Input['ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArgs']]]] = None, enable_automatic_upgrades: Optional[pulumi.Input[bool]] = None, provision_vm_agent: Optional[pulumi.Input[bool]] = None, winrms: Optional[pulumi.Input[List[pulumi.Input['ScaleSetOsProfileWindowsConfigWinrmArgs']]]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input['ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArgs']]] additional_unattend_configs: An Additional Unattended Config block as documented below.
        :param pulumi.Input[bool] enable_automatic_upgrades: Indicates whether virtual machines in the scale set are enabled for automatic updates.
        :param pulumi.Input[bool] provision_vm_agent: Indicates whether virtual machine agent should be provisioned on the virtual machines in the scale set.
        :param pulumi.Input[List[pulumi.Input['ScaleSetOsProfileWindowsConfigWinrmArgs']]] winrms: A collection of WinRM configuration blocks as documented below.
        """
        __self__.additional_unattend_configs = additional_unattend_configs
        __self__.enable_automatic_upgrades = enable_automatic_upgrades
        __self__.provision_vm_agent = provision_vm_agent
        __self__.winrms = winrms

@pulumi.input_type
class ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArgs:
    component: pulumi.Input[str] = pulumi.input_property("component")
    """
    Specifies the name of the component to configure with the added content. The only allowable value is `Microsoft-Windows-Shell-Setup`.
    """
    content: pulumi.Input[str] = pulumi.input_property("content")
    """
    Specifies the base-64 encoded XML formatted content that is added to the unattend.xml file for the specified path and component.
    """
    pass_: pulumi.Input[str] = pulumi.input_property("pass")
    """
    Specifies the name of the pass that the content applies to. The only allowable value is `oobeSystem`.
    """
    setting_name: pulumi.Input[str] = pulumi.input_property("settingName")
    """
    Specifies the name of the setting to which the content applies. Possible values are: `FirstLogonCommands` and `AutoLogon`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, component: pulumi.Input[str], content: pulumi.Input[str], pass_: pulumi.Input[str], setting_name: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] component: Specifies the name of the component to configure with the added content. The only allowable value is `Microsoft-Windows-Shell-Setup`.
        :param pulumi.Input[str] content: Specifies the base-64 encoded XML formatted content that is added to the unattend.xml file for the specified path and component.
        :param pulumi.Input[str] pass_: Specifies the name of the pass that the content applies to. The only allowable value is `oobeSystem`.
        :param pulumi.Input[str] setting_name: Specifies the name of the setting to which the content applies. Possible values are: `FirstLogonCommands` and `AutoLogon`.
        """
        __self__.component = component
        __self__.content = content
        __self__.pass_ = pass_
        __self__.setting_name = setting_name

@pulumi.input_type
class ScaleSetOsProfileWindowsConfigWinrmArgs:
    protocol: pulumi.Input[str] = pulumi.input_property("protocol")
    """
    Specifies the protocol of listener
    """
    certificate_url: Optional[pulumi.Input[str]] = pulumi.input_property("certificateUrl")
    """
    Specifies URL of the certificate with which new Virtual Machines is provisioned.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, protocol: pulumi.Input[str], certificate_url: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] protocol: Specifies the protocol of listener
        :param pulumi.Input[str] certificate_url: Specifies URL of the certificate with which new Virtual Machines is provisioned.
        """
        __self__.protocol = protocol
        __self__.certificate_url = certificate_url

@pulumi.input_type
class ScaleSetPlanArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    Specifies the name of the image from the marketplace.
    """
    product: pulumi.Input[str] = pulumi.input_property("product")
    """
    Specifies the product of the image from the marketplace.
    """
    publisher: pulumi.Input[str] = pulumi.input_property("publisher")
    """
    Specifies the publisher of the image.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], product: pulumi.Input[str], publisher: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] name: Specifies the name of the image from the marketplace.
        :param pulumi.Input[str] product: Specifies the product of the image from the marketplace.
        :param pulumi.Input[str] publisher: Specifies the publisher of the image.
        """
        __self__.name = name
        __self__.product = product
        __self__.publisher = publisher

@pulumi.input_type
class ScaleSetRollingUpgradePolicyArgs:
    max_batch_instance_percent: Optional[pulumi.Input[float]] = pulumi.input_property("maxBatchInstancePercent")
    """
    The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. Defaults to `20`.
    """
    max_unhealthy_instance_percent: Optional[pulumi.Input[float]] = pulumi.input_property("maxUnhealthyInstancePercent")
    """
    The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. Defaults to `20`.
    """
    max_unhealthy_upgraded_instance_percent: Optional[pulumi.Input[float]] = pulumi.input_property("maxUnhealthyUpgradedInstancePercent")
    """
    The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. Defaults to `20`.
    """
    pause_time_between_batches: Optional[pulumi.Input[str]] = pulumi.input_property("pauseTimeBetweenBatches")
    """
    The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format for duration (https://en.wikipedia.org/wiki/ISO_8601#Durations). Defaults to `0` seconds represented as `PT0S`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, max_batch_instance_percent: Optional[pulumi.Input[float]] = None, max_unhealthy_instance_percent: Optional[pulumi.Input[float]] = None, max_unhealthy_upgraded_instance_percent: Optional[pulumi.Input[float]] = None, pause_time_between_batches: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[float] max_batch_instance_percent: The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. Defaults to `20`.
        :param pulumi.Input[float] max_unhealthy_instance_percent: The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. Defaults to `20`.
        :param pulumi.Input[float] max_unhealthy_upgraded_instance_percent: The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. Defaults to `20`.
        :param pulumi.Input[str] pause_time_between_batches: The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format for duration (https://en.wikipedia.org/wiki/ISO_8601#Durations). Defaults to `0` seconds represented as `PT0S`.
        """
        __self__.max_batch_instance_percent = max_batch_instance_percent
        __self__.max_unhealthy_instance_percent = max_unhealthy_instance_percent
        __self__.max_unhealthy_upgraded_instance_percent = max_unhealthy_upgraded_instance_percent
        __self__.pause_time_between_batches = pause_time_between_batches

@pulumi.input_type
class ScaleSetSkuArgs:
    capacity: pulumi.Input[float] = pulumi.input_property("capacity")
    """
    Specifies the number of virtual machines in the scale set.
    """
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    Specifies the size of virtual machines in a scale set.
    """
    tier: Optional[pulumi.Input[str]] = pulumi.input_property("tier")
    """
    Specifies the tier of virtual machines in a scale set. Possible values, `standard` or `basic`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, capacity: pulumi.Input[float], name: pulumi.Input[str], tier: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[float] capacity: Specifies the number of virtual machines in the scale set.
        :param pulumi.Input[str] name: Specifies the size of virtual machines in a scale set.
        :param pulumi.Input[str] tier: Specifies the tier of virtual machines in a scale set. Possible values, `standard` or `basic`.
        """
        __self__.capacity = capacity
        __self__.name = name
        __self__.tier = tier

@pulumi.input_type
class ScaleSetStorageProfileDataDiskArgs:
    create_option: pulumi.Input[str] = pulumi.input_property("createOption")
    """
    Specifies how the data disk should be created. The only possible options are `FromImage` and `Empty`.
    """
    lun: pulumi.Input[float] = pulumi.input_property("lun")
    """
    Specifies the Logical Unit Number of the disk in each virtual machine in the scale set.
    """
    caching: Optional[pulumi.Input[str]] = pulumi.input_property("caching")
    """
    Specifies the caching requirements. Possible values include: `None` (default), `ReadOnly`, `ReadWrite`.
    """
    disk_size_gb: Optional[pulumi.Input[float]] = pulumi.input_property("diskSizeGb")
    """
    Specifies the size of the disk in GB. This element is required when creating an empty disk.
    """
    managed_disk_type: Optional[pulumi.Input[str]] = pulumi.input_property("managedDiskType")
    """
    Specifies the type of managed disk to create. Value must be either `Standard_LRS`, `StandardSSD_LRS` or `Premium_LRS`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, create_option: pulumi.Input[str], lun: pulumi.Input[float], caching: Optional[pulumi.Input[str]] = None, disk_size_gb: Optional[pulumi.Input[float]] = None, managed_disk_type: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] create_option: Specifies how the data disk should be created. The only possible options are `FromImage` and `Empty`.
        :param pulumi.Input[float] lun: Specifies the Logical Unit Number of the disk in each virtual machine in the scale set.
        :param pulumi.Input[str] caching: Specifies the caching requirements. Possible values include: `None` (default), `ReadOnly`, `ReadWrite`.
        :param pulumi.Input[float] disk_size_gb: Specifies the size of the disk in GB. This element is required when creating an empty disk.
        :param pulumi.Input[str] managed_disk_type: Specifies the type of managed disk to create. Value must be either `Standard_LRS`, `StandardSSD_LRS` or `Premium_LRS`.
        """
        __self__.create_option = create_option
        __self__.lun = lun
        __self__.caching = caching
        __self__.disk_size_gb = disk_size_gb
        __self__.managed_disk_type = managed_disk_type

@pulumi.input_type
class ScaleSetStorageProfileImageReferenceArgs:
    id: Optional[pulumi.Input[str]] = pulumi.input_property("id")
    """
    Specifies the ID of the (custom) image to use to create the virtual
    machine scale set, as in the example below.
    """
    offer: Optional[pulumi.Input[str]] = pulumi.input_property("offer")
    """
    Specifies the offer of the image used to create the virtual machines.
    """
    publisher: Optional[pulumi.Input[str]] = pulumi.input_property("publisher")
    """
    Specifies the publisher of the image used to create the virtual machines.
    """
    sku: Optional[pulumi.Input[str]] = pulumi.input_property("sku")
    """
    Specifies the SKU of the image used to create the virtual machines.
    """
    version: Optional[pulumi.Input[str]] = pulumi.input_property("version")
    """
    Specifies the version of the image used to create the virtual machines.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, id: Optional[pulumi.Input[str]] = None, offer: Optional[pulumi.Input[str]] = None, publisher: Optional[pulumi.Input[str]] = None, sku: Optional[pulumi.Input[str]] = None, version: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] id: Specifies the ID of the (custom) image to use to create the virtual
               machine scale set, as in the example below.
        :param pulumi.Input[str] offer: Specifies the offer of the image used to create the virtual machines.
        :param pulumi.Input[str] publisher: Specifies the publisher of the image used to create the virtual machines.
        :param pulumi.Input[str] sku: Specifies the SKU of the image used to create the virtual machines.
        :param pulumi.Input[str] version: Specifies the version of the image used to create the virtual machines.
        """
        __self__.id = id
        __self__.offer = offer
        __self__.publisher = publisher
        __self__.sku = sku
        __self__.version = version

@pulumi.input_type
class ScaleSetStorageProfileOsDiskArgs:
    create_option: pulumi.Input[str] = pulumi.input_property("createOption")
    """
    Specifies how the virtual machine should be created. The only possible option is `FromImage`.
    """
    caching: Optional[pulumi.Input[str]] = pulumi.input_property("caching")
    """
    Specifies the caching requirements. Possible values include: `None` (default), `ReadOnly`, `ReadWrite`.
    """
    image: Optional[pulumi.Input[str]] = pulumi.input_property("image")
    """
    Specifies the blob uri for user image. A virtual machine scale set creates an os disk in the same container as the user image.
    Updating the osDisk image causes the existing disk to be deleted and a new one created with the new image. If the VM scale set is in Manual upgrade mode then the virtual machines are not updated until they have manualUpgrade applied to them.
    When setting this field `os_type` needs to be specified. Cannot be used when `vhd_containers`, `managed_disk_type` or `storage_profile_image_reference` are specified.
    """
    managed_disk_type: Optional[pulumi.Input[str]] = pulumi.input_property("managedDiskType")
    """
    Specifies the type of managed disk to create. Value you must be either `Standard_LRS`, `StandardSSD_LRS` or `Premium_LRS`. Cannot be used when `vhd_containers` or `image` is specified.
    """
    name: Optional[pulumi.Input[str]] = pulumi.input_property("name")
    """
    Specifies the disk name. Must be specified when using unmanaged disk ('managed_disk_type' property not set).
    """
    os_type: Optional[pulumi.Input[str]] = pulumi.input_property("osType")
    """
    Specifies the operating system Type, valid values are windows, linux.
    """
    vhd_containers: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("vhdContainers")
    """
    Specifies the vhd uri. Cannot be used when `image` or `managed_disk_type` is specified.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, create_option: pulumi.Input[str], caching: Optional[pulumi.Input[str]] = None, image: Optional[pulumi.Input[str]] = None, managed_disk_type: Optional[pulumi.Input[str]] = None, name: Optional[pulumi.Input[str]] = None, os_type: Optional[pulumi.Input[str]] = None, vhd_containers: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[str] create_option: Specifies how the virtual machine should be created. The only possible option is `FromImage`.
        :param pulumi.Input[str] caching: Specifies the caching requirements. Possible values include: `None` (default), `ReadOnly`, `ReadWrite`.
        :param pulumi.Input[str] image: Specifies the blob uri for user image. A virtual machine scale set creates an os disk in the same container as the user image.
               Updating the osDisk image causes the existing disk to be deleted and a new one created with the new image. If the VM scale set is in Manual upgrade mode then the virtual machines are not updated until they have manualUpgrade applied to them.
               When setting this field `os_type` needs to be specified. Cannot be used when `vhd_containers`, `managed_disk_type` or `storage_profile_image_reference` are specified.
        :param pulumi.Input[str] managed_disk_type: Specifies the type of managed disk to create. Value you must be either `Standard_LRS`, `StandardSSD_LRS` or `Premium_LRS`. Cannot be used when `vhd_containers` or `image` is specified.
        :param pulumi.Input[str] name: Specifies the disk name. Must be specified when using unmanaged disk ('managed_disk_type' property not set).
        :param pulumi.Input[str] os_type: Specifies the operating system Type, valid values are windows, linux.
        :param pulumi.Input[List[pulumi.Input[str]]] vhd_containers: Specifies the vhd uri. Cannot be used when `image` or `managed_disk_type` is specified.
        """
        __self__.create_option = create_option
        __self__.caching = caching
        __self__.image = image
        __self__.managed_disk_type = managed_disk_type
        __self__.name = name
        __self__.os_type = os_type
        __self__.vhd_containers = vhd_containers

@pulumi.input_type
class SharedImageIdentifierArgs:
    offer: pulumi.Input[str] = pulumi.input_property("offer")
    """
    The Offer Name for this Shared Image.
    """
    publisher: pulumi.Input[str] = pulumi.input_property("publisher")
    """
    The Publisher Name for this Gallery Image.
    """
    sku: pulumi.Input[str] = pulumi.input_property("sku")
    """
    The Name of the SKU for this Gallery Image.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, offer: pulumi.Input[str], publisher: pulumi.Input[str], sku: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] offer: The Offer Name for this Shared Image.
        :param pulumi.Input[str] publisher: The Publisher Name for this Gallery Image.
        :param pulumi.Input[str] sku: The Name of the SKU for this Gallery Image.
        """
        __self__.offer = offer
        __self__.publisher = publisher
        __self__.sku = sku

@pulumi.input_type
class SharedImageVersionTargetRegionArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The Azure Region in which this Image Version should exist.
    """
    regional_replica_count: pulumi.Input[float] = pulumi.input_property("regionalReplicaCount")
    """
    The number of replicas of the Image Version to be created per region.
    """
    storage_account_type: Optional[pulumi.Input[str]] = pulumi.input_property("storageAccountType")
    """
    The storage account type for the image version. Possible values are `Standard_LRS` and `Standard_ZRS`. Defaults to `Standard_LRS`. You can store all of your image version replicas in Zone Redundant Storage by specifying `Standard_ZRS`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], regional_replica_count: pulumi.Input[float], storage_account_type: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] name: The Azure Region in which this Image Version should exist.
        :param pulumi.Input[float] regional_replica_count: The number of replicas of the Image Version to be created per region.
        :param pulumi.Input[str] storage_account_type: The storage account type for the image version. Possible values are `Standard_LRS` and `Standard_ZRS`. Defaults to `Standard_LRS`. You can store all of your image version replicas in Zone Redundant Storage by specifying `Standard_ZRS`.
        """
        __self__.name = name
        __self__.regional_replica_count = regional_replica_count
        __self__.storage_account_type = storage_account_type

@pulumi.input_type
class SnapshotEncryptionSettingsArgs:
    enabled: pulumi.Input[bool] = pulumi.input_property("enabled")
    disk_encryption_key: Optional[pulumi.Input['SnapshotEncryptionSettingsDiskEncryptionKeyArgs']] = pulumi.input_property("diskEncryptionKey")
    key_encryption_key: Optional[pulumi.Input['SnapshotEncryptionSettingsKeyEncryptionKeyArgs']] = pulumi.input_property("keyEncryptionKey")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, enabled: pulumi.Input[bool], disk_encryption_key: Optional[pulumi.Input['SnapshotEncryptionSettingsDiskEncryptionKeyArgs']] = None, key_encryption_key: Optional[pulumi.Input['SnapshotEncryptionSettingsKeyEncryptionKeyArgs']] = None) -> None:
        __self__.enabled = enabled
        __self__.disk_encryption_key = disk_encryption_key
        __self__.key_encryption_key = key_encryption_key

@pulumi.input_type
class SnapshotEncryptionSettingsDiskEncryptionKeyArgs:
    secret_url: pulumi.Input[str] = pulumi.input_property("secretUrl")
    source_vault_id: pulumi.Input[str] = pulumi.input_property("sourceVaultId")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, secret_url: pulumi.Input[str], source_vault_id: pulumi.Input[str]) -> None:
        __self__.secret_url = secret_url
        __self__.source_vault_id = source_vault_id

@pulumi.input_type
class SnapshotEncryptionSettingsKeyEncryptionKeyArgs:
    key_url: pulumi.Input[str] = pulumi.input_property("keyUrl")
    source_vault_id: pulumi.Input[str] = pulumi.input_property("sourceVaultId")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, key_url: pulumi.Input[str], source_vault_id: pulumi.Input[str]) -> None:
        __self__.key_url = key_url
        __self__.source_vault_id = source_vault_id

@pulumi.input_type
class VirtualMachineAdditionalCapabilitiesArgs:
    ultra_ssd_enabled: pulumi.Input[bool] = pulumi.input_property("ultraSsdEnabled")
    """
    Should Ultra SSD disk be enabled for this Virtual Machine?
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, ultra_ssd_enabled: pulumi.Input[bool]) -> None:
        """
        :param pulumi.Input[bool] ultra_ssd_enabled: Should Ultra SSD disk be enabled for this Virtual Machine?
        """
        __self__.ultra_ssd_enabled = ultra_ssd_enabled

@pulumi.input_type
class VirtualMachineBootDiagnosticsArgs:
    enabled: pulumi.Input[bool] = pulumi.input_property("enabled")
    """
    Should Boot Diagnostics be enabled for this Virtual Machine?
    """
    storage_uri: pulumi.Input[str] = pulumi.input_property("storageUri")
    """
    The Storage Account's Blob Endpoint which should hold the virtual machine's diagnostic files.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, enabled: pulumi.Input[bool], storage_uri: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[bool] enabled: Should Boot Diagnostics be enabled for this Virtual Machine?
        :param pulumi.Input[str] storage_uri: The Storage Account's Blob Endpoint which should hold the virtual machine's diagnostic files.
        """
        __self__.enabled = enabled
        __self__.storage_uri = storage_uri

@pulumi.input_type
class VirtualMachineIdentityArgs:
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    The Managed Service Identity Type of this Virtual Machine. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` (where you can specify the Service Principal ID's) to be used by this Virtual Machine using the `identity_ids` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.
    """
    identity_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("identityIds")
    """
    Specifies a list of user managed identity ids to be assigned to the VM. Required if `type` is `UserAssigned`.
    """
    principal_id: Optional[pulumi.Input[str]] = pulumi.input_property("principalId")
    """
    The Principal ID for the Service Principal associated with the Managed Service Identity of this Virtual Machine.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, type: pulumi.Input[str], identity_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, principal_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] type: The Managed Service Identity Type of this Virtual Machine. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` (where you can specify the Service Principal ID's) to be used by this Virtual Machine using the `identity_ids` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.
        :param pulumi.Input[List[pulumi.Input[str]]] identity_ids: Specifies a list of user managed identity ids to be assigned to the VM. Required if `type` is `UserAssigned`.
        :param pulumi.Input[str] principal_id: The Principal ID for the Service Principal associated with the Managed Service Identity of this Virtual Machine.
        """
        __self__.type = type
        __self__.identity_ids = identity_ids
        __self__.principal_id = principal_id

@pulumi.input_type
class VirtualMachineOsProfileArgs:
    admin_username: pulumi.Input[str] = pulumi.input_property("adminUsername")
    """
    Specifies the name of the local administrator account.
    """
    computer_name: pulumi.Input[str] = pulumi.input_property("computerName")
    """
    Specifies the name of the Virtual Machine.
    """
    admin_password: Optional[pulumi.Input[str]] = pulumi.input_property("adminPassword")
    """
    The password associated with the local administrator account.
    """
    custom_data: Optional[pulumi.Input[str]] = pulumi.input_property("customData")
    """
    Specifies custom data to supply to the machine. On Linux-based systems, this can be used as a cloud-init script. On other systems, this will be copied as a file on disk. Internally, this provider will base64 encode this value before sending it to the API. The maximum length of the binary array is 65535 bytes.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, admin_username: pulumi.Input[str], computer_name: pulumi.Input[str], admin_password: Optional[pulumi.Input[str]] = None, custom_data: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] admin_username: Specifies the name of the local administrator account.
        :param pulumi.Input[str] computer_name: Specifies the name of the Virtual Machine.
        :param pulumi.Input[str] admin_password: The password associated with the local administrator account.
        :param pulumi.Input[str] custom_data: Specifies custom data to supply to the machine. On Linux-based systems, this can be used as a cloud-init script. On other systems, this will be copied as a file on disk. Internally, this provider will base64 encode this value before sending it to the API. The maximum length of the binary array is 65535 bytes.
        """
        __self__.admin_username = admin_username
        __self__.computer_name = computer_name
        __self__.admin_password = admin_password
        __self__.custom_data = custom_data

@pulumi.input_type
class VirtualMachineOsProfileLinuxConfigArgs:
    disable_password_authentication: pulumi.Input[bool] = pulumi.input_property("disablePasswordAuthentication")
    """
    Specifies whether password authentication should be disabled. If set to `false`, an `admin_password` must be specified.
    """
    ssh_keys: Optional[pulumi.Input[List[pulumi.Input['VirtualMachineOsProfileLinuxConfigSshKeyArgs']]]] = pulumi.input_property("sshKeys")
    """
    One or more `ssh_keys` blocks. This field is required if `disable_password_authentication` is set to `true`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, disable_password_authentication: pulumi.Input[bool], ssh_keys: Optional[pulumi.Input[List[pulumi.Input['VirtualMachineOsProfileLinuxConfigSshKeyArgs']]]] = None) -> None:
        """
        :param pulumi.Input[bool] disable_password_authentication: Specifies whether password authentication should be disabled. If set to `false`, an `admin_password` must be specified.
        :param pulumi.Input[List[pulumi.Input['VirtualMachineOsProfileLinuxConfigSshKeyArgs']]] ssh_keys: One or more `ssh_keys` blocks. This field is required if `disable_password_authentication` is set to `true`.
        """
        __self__.disable_password_authentication = disable_password_authentication
        __self__.ssh_keys = ssh_keys

@pulumi.input_type
class VirtualMachineOsProfileLinuxConfigSshKeyArgs:
    key_data: pulumi.Input[str] = pulumi.input_property("keyData")
    """
    The Public SSH Key which should be written to the `path` defined above.
    """
    path: pulumi.Input[str] = pulumi.input_property("path")
    """
    The path of the destination file on the virtual machine
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, key_data: pulumi.Input[str], path: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] key_data: The Public SSH Key which should be written to the `path` defined above.
        :param pulumi.Input[str] path: The path of the destination file on the virtual machine
        """
        __self__.key_data = key_data
        __self__.path = path

@pulumi.input_type
class VirtualMachineOsProfileSecretArgs:
    source_vault_id: pulumi.Input[str] = pulumi.input_property("sourceVaultId")
    """
    Specifies the ID of the Key Vault to use.
    """
    vault_certificates: Optional[pulumi.Input[List[pulumi.Input['VirtualMachineOsProfileSecretVaultCertificateArgs']]]] = pulumi.input_property("vaultCertificates")
    """
    One or more `vault_certificates` blocks.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, source_vault_id: pulumi.Input[str], vault_certificates: Optional[pulumi.Input[List[pulumi.Input['VirtualMachineOsProfileSecretVaultCertificateArgs']]]] = None) -> None:
        """
        :param pulumi.Input[str] source_vault_id: Specifies the ID of the Key Vault to use.
        :param pulumi.Input[List[pulumi.Input['VirtualMachineOsProfileSecretVaultCertificateArgs']]] vault_certificates: One or more `vault_certificates` blocks.
        """
        __self__.source_vault_id = source_vault_id
        __self__.vault_certificates = vault_certificates

@pulumi.input_type
class VirtualMachineOsProfileSecretVaultCertificateArgs:
    certificate_url: pulumi.Input[str] = pulumi.input_property("certificateUrl")
    """
    The ID of the Key Vault Secret. Stored secret is the Base64 encoding of a JSON Object that which is encoded in UTF-8 of which the contents need to be:
    """
    certificate_store: Optional[pulumi.Input[str]] = pulumi.input_property("certificateStore")
    """
    Specifies the certificate store on the Virtual Machine where the certificate should be added to, such as `My`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, certificate_url: pulumi.Input[str], certificate_store: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] certificate_url: The ID of the Key Vault Secret. Stored secret is the Base64 encoding of a JSON Object that which is encoded in UTF-8 of which the contents need to be:
        :param pulumi.Input[str] certificate_store: Specifies the certificate store on the Virtual Machine where the certificate should be added to, such as `My`.
        """
        __self__.certificate_url = certificate_url
        __self__.certificate_store = certificate_store

@pulumi.input_type
class VirtualMachineOsProfileWindowsConfigArgs:
    additional_unattend_configs: Optional[pulumi.Input[List[pulumi.Input['VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArgs']]]] = pulumi.input_property("additionalUnattendConfigs")
    """
    A `additional_unattend_config` block.
    """
    enable_automatic_upgrades: Optional[pulumi.Input[bool]] = pulumi.input_property("enableAutomaticUpgrades")
    """
    Are automatic updates enabled on this Virtual Machine? Defaults to `false.`
    """
    provision_vm_agent: Optional[pulumi.Input[bool]] = pulumi.input_property("provisionVmAgent")
    """
    Should the Azure Virtual Machine Guest Agent be installed on this Virtual Machine? Defaults to `false`.
    """
    timezone: Optional[pulumi.Input[str]] = pulumi.input_property("timezone")
    """
    Specifies the time zone of the virtual machine, [the possible values are defined here](http://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).
    """
    winrms: Optional[pulumi.Input[List[pulumi.Input['VirtualMachineOsProfileWindowsConfigWinrmArgs']]]] = pulumi.input_property("winrms")
    """
    One or more `winrm` block.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, additional_unattend_configs: Optional[pulumi.Input[List[pulumi.Input['VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArgs']]]] = None, enable_automatic_upgrades: Optional[pulumi.Input[bool]] = None, provision_vm_agent: Optional[pulumi.Input[bool]] = None, timezone: Optional[pulumi.Input[str]] = None, winrms: Optional[pulumi.Input[List[pulumi.Input['VirtualMachineOsProfileWindowsConfigWinrmArgs']]]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input['VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArgs']]] additional_unattend_configs: A `additional_unattend_config` block.
        :param pulumi.Input[bool] enable_automatic_upgrades: Are automatic updates enabled on this Virtual Machine? Defaults to `false.`
        :param pulumi.Input[bool] provision_vm_agent: Should the Azure Virtual Machine Guest Agent be installed on this Virtual Machine? Defaults to `false`.
        :param pulumi.Input[str] timezone: Specifies the time zone of the virtual machine, [the possible values are defined here](http://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).
        :param pulumi.Input[List[pulumi.Input['VirtualMachineOsProfileWindowsConfigWinrmArgs']]] winrms: One or more `winrm` block.
        """
        __self__.additional_unattend_configs = additional_unattend_configs
        __self__.enable_automatic_upgrades = enable_automatic_upgrades
        __self__.provision_vm_agent = provision_vm_agent
        __self__.timezone = timezone
        __self__.winrms = winrms

@pulumi.input_type
class VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArgs:
    component: pulumi.Input[str] = pulumi.input_property("component")
    """
    Specifies the name of the component to configure with the added content. The only allowable value is `Microsoft-Windows-Shell-Setup`.
    """
    content: pulumi.Input[str] = pulumi.input_property("content")
    """
    Specifies the base-64 encoded XML formatted content that is added to the unattend.xml file for the specified path and component.
    """
    pass_: pulumi.Input[str] = pulumi.input_property("pass")
    """
    Specifies the name of the pass that the content applies to. The only allowable value is `oobeSystem`.
    """
    setting_name: pulumi.Input[str] = pulumi.input_property("settingName")
    """
    Specifies the name of the setting to which the content applies. Possible values are: `FirstLogonCommands` and `AutoLogon`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, component: pulumi.Input[str], content: pulumi.Input[str], pass_: pulumi.Input[str], setting_name: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] component: Specifies the name of the component to configure with the added content. The only allowable value is `Microsoft-Windows-Shell-Setup`.
        :param pulumi.Input[str] content: Specifies the base-64 encoded XML formatted content that is added to the unattend.xml file for the specified path and component.
        :param pulumi.Input[str] pass_: Specifies the name of the pass that the content applies to. The only allowable value is `oobeSystem`.
        :param pulumi.Input[str] setting_name: Specifies the name of the setting to which the content applies. Possible values are: `FirstLogonCommands` and `AutoLogon`.
        """
        __self__.component = component
        __self__.content = content
        __self__.pass_ = pass_
        __self__.setting_name = setting_name

@pulumi.input_type
class VirtualMachineOsProfileWindowsConfigWinrmArgs:
    protocol: pulumi.Input[str] = pulumi.input_property("protocol")
    """
    Specifies the protocol of listener. Possible values are `HTTP` or `HTTPS`.
    """
    certificate_url: Optional[pulumi.Input[str]] = pulumi.input_property("certificateUrl")
    """
    The ID of the Key Vault Secret which contains the encrypted Certificate which should be installed on the Virtual Machine. This certificate must also be specified in the `vault_certificates` block within the `os_profile_secrets` block.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, protocol: pulumi.Input[str], certificate_url: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] protocol: Specifies the protocol of listener. Possible values are `HTTP` or `HTTPS`.
        :param pulumi.Input[str] certificate_url: The ID of the Key Vault Secret which contains the encrypted Certificate which should be installed on the Virtual Machine. This certificate must also be specified in the `vault_certificates` block within the `os_profile_secrets` block.
        """
        __self__.protocol = protocol
        __self__.certificate_url = certificate_url

@pulumi.input_type
class VirtualMachinePlanArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    Specifies the name of the image from the marketplace.
    """
    product: pulumi.Input[str] = pulumi.input_property("product")
    """
    Specifies the product of the image from the marketplace.
    """
    publisher: pulumi.Input[str] = pulumi.input_property("publisher")
    """
    Specifies the publisher of the image.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], product: pulumi.Input[str], publisher: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] name: Specifies the name of the image from the marketplace.
        :param pulumi.Input[str] product: Specifies the product of the image from the marketplace.
        :param pulumi.Input[str] publisher: Specifies the publisher of the image.
        """
        __self__.name = name
        __self__.product = product
        __self__.publisher = publisher

@pulumi.input_type
class VirtualMachineStorageDataDiskArgs:
    create_option: pulumi.Input[str] = pulumi.input_property("createOption")
    """
    Specifies how the data disk should be created. Possible values are `Attach`, `FromImage` and `Empty`.
    """
    lun: pulumi.Input[float] = pulumi.input_property("lun")
    """
    Specifies the logical unit number of the data disk. This needs to be unique within all the Data Disks on the Virtual Machine.
    """
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The name of the Data Disk.
    """
    caching: Optional[pulumi.Input[str]] = pulumi.input_property("caching")
    """
    Specifies the caching requirements for the Data Disk. Possible values include `None`, `ReadOnly` and `ReadWrite`.
    """
    disk_size_gb: Optional[pulumi.Input[float]] = pulumi.input_property("diskSizeGb")
    """
    Specifies the size of the data disk in gigabytes.
    """
    managed_disk_id: Optional[pulumi.Input[str]] = pulumi.input_property("managedDiskId")
    """
    Specifies the ID of an Existing Managed Disk which should be attached to this Virtual Machine. When this field is set `create_option` must be set to `Attach`.
    """
    managed_disk_type: Optional[pulumi.Input[str]] = pulumi.input_property("managedDiskType")
    """
    Specifies the type of managed disk to create. Possible values are either `Standard_LRS`, `StandardSSD_LRS`, `Premium_LRS` or `UltraSSD_LRS`.
    """
    vhd_uri: Optional[pulumi.Input[str]] = pulumi.input_property("vhdUri")
    """
    Specifies the URI of the VHD file backing this Unmanaged Data Disk. Changing this forces a new resource to be created.
    """
    write_accelerator_enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("writeAcceleratorEnabled")
    """
    Specifies if Write Accelerator is enabled on the disk. This can only be enabled on `Premium_LRS` managed disks with no caching and [M-Series VMs](https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/how-to-enable-write-accelerator). Defaults to `false`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, create_option: pulumi.Input[str], lun: pulumi.Input[float], name: pulumi.Input[str], caching: Optional[pulumi.Input[str]] = None, disk_size_gb: Optional[pulumi.Input[float]] = None, managed_disk_id: Optional[pulumi.Input[str]] = None, managed_disk_type: Optional[pulumi.Input[str]] = None, vhd_uri: Optional[pulumi.Input[str]] = None, write_accelerator_enabled: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[str] create_option: Specifies how the data disk should be created. Possible values are `Attach`, `FromImage` and `Empty`.
        :param pulumi.Input[float] lun: Specifies the logical unit number of the data disk. This needs to be unique within all the Data Disks on the Virtual Machine.
        :param pulumi.Input[str] name: The name of the Data Disk.
        :param pulumi.Input[str] caching: Specifies the caching requirements for the Data Disk. Possible values include `None`, `ReadOnly` and `ReadWrite`.
        :param pulumi.Input[float] disk_size_gb: Specifies the size of the data disk in gigabytes.
        :param pulumi.Input[str] managed_disk_id: Specifies the ID of an Existing Managed Disk which should be attached to this Virtual Machine. When this field is set `create_option` must be set to `Attach`.
        :param pulumi.Input[str] managed_disk_type: Specifies the type of managed disk to create. Possible values are either `Standard_LRS`, `StandardSSD_LRS`, `Premium_LRS` or `UltraSSD_LRS`.
        :param pulumi.Input[str] vhd_uri: Specifies the URI of the VHD file backing this Unmanaged Data Disk. Changing this forces a new resource to be created.
        :param pulumi.Input[bool] write_accelerator_enabled: Specifies if Write Accelerator is enabled on the disk. This can only be enabled on `Premium_LRS` managed disks with no caching and [M-Series VMs](https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/how-to-enable-write-accelerator). Defaults to `false`.
        """
        __self__.create_option = create_option
        __self__.lun = lun
        __self__.name = name
        __self__.caching = caching
        __self__.disk_size_gb = disk_size_gb
        __self__.managed_disk_id = managed_disk_id
        __self__.managed_disk_type = managed_disk_type
        __self__.vhd_uri = vhd_uri
        __self__.write_accelerator_enabled = write_accelerator_enabled

@pulumi.input_type
class VirtualMachineStorageImageReferenceArgs:
    id: Optional[pulumi.Input[str]] = pulumi.input_property("id")
    """
    Specifies the ID of the Custom Image which the Virtual Machine should be created from. Changing this forces a new resource to be created.
    """
    offer: Optional[pulumi.Input[str]] = pulumi.input_property("offer")
    """
    Specifies the offer of the image used to create the virtual machine. Changing this forces a new resource to be created.
    """
    publisher: Optional[pulumi.Input[str]] = pulumi.input_property("publisher")
    """
    Specifies the publisher of the image used to create the virtual machine. Changing this forces a new resource to be created.
    """
    sku: Optional[pulumi.Input[str]] = pulumi.input_property("sku")
    """
    Specifies the SKU of the image used to create the virtual machine. Changing this forces a new resource to be created.
    """
    version: Optional[pulumi.Input[str]] = pulumi.input_property("version")
    """
    Specifies the version of the image used to create the virtual machine. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, id: Optional[pulumi.Input[str]] = None, offer: Optional[pulumi.Input[str]] = None, publisher: Optional[pulumi.Input[str]] = None, sku: Optional[pulumi.Input[str]] = None, version: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] id: Specifies the ID of the Custom Image which the Virtual Machine should be created from. Changing this forces a new resource to be created.
        :param pulumi.Input[str] offer: Specifies the offer of the image used to create the virtual machine. Changing this forces a new resource to be created.
        :param pulumi.Input[str] publisher: Specifies the publisher of the image used to create the virtual machine. Changing this forces a new resource to be created.
        :param pulumi.Input[str] sku: Specifies the SKU of the image used to create the virtual machine. Changing this forces a new resource to be created.
        :param pulumi.Input[str] version: Specifies the version of the image used to create the virtual machine. Changing this forces a new resource to be created.
        """
        __self__.id = id
        __self__.offer = offer
        __self__.publisher = publisher
        __self__.sku = sku
        __self__.version = version

@pulumi.input_type
class VirtualMachineStorageOsDiskArgs:
    create_option: pulumi.Input[str] = pulumi.input_property("createOption")
    """
    Specifies how the OS Disk should be created. Possible values are `Attach` (managed disks only) and `FromImage`.
    """
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    Specifies the name of the OS Disk.
    """
    caching: Optional[pulumi.Input[str]] = pulumi.input_property("caching")
    """
    Specifies the caching requirements for the OS Disk. Possible values include `None`, `ReadOnly` and `ReadWrite`.
    """
    disk_size_gb: Optional[pulumi.Input[float]] = pulumi.input_property("diskSizeGb")
    """
    Specifies the size of the OS Disk in gigabytes.
    """
    image_uri: Optional[pulumi.Input[str]] = pulumi.input_property("imageUri")
    """
    Specifies the Image URI in the format `publisherName:offer:skus:version`. This field can also specify the [VHD uri](https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-linux-cli-deploy-templates/#create-a-custom-vm-image) of a custom VM image to clone. When cloning a Custom (Unmanaged) Disk Image the `os_type` field must be set.
    """
    managed_disk_id: Optional[pulumi.Input[str]] = pulumi.input_property("managedDiskId")
    """
    Specifies the ID of an existing Managed Disk which should be attached as the OS Disk of this Virtual Machine. If this is set then the `create_option` must be set to `Attach`.
    """
    managed_disk_type: Optional[pulumi.Input[str]] = pulumi.input_property("managedDiskType")
    """
    Specifies the type of Managed Disk which should be created. Possible values are `Standard_LRS`, `StandardSSD_LRS` or `Premium_LRS`.
    """
    os_type: Optional[pulumi.Input[str]] = pulumi.input_property("osType")
    """
    Specifies the Operating System on the OS Disk. Possible values are `Linux` and `Windows`.
    """
    vhd_uri: Optional[pulumi.Input[str]] = pulumi.input_property("vhdUri")
    """
    Specifies the URI of the VHD file backing this Unmanaged OS Disk. Changing this forces a new resource to be created.
    """
    write_accelerator_enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("writeAcceleratorEnabled")
    """
    Specifies if Write Accelerator is enabled on the disk. This can only be enabled on `Premium_LRS` managed disks with no caching and [M-Series VMs](https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/how-to-enable-write-accelerator). Defaults to `false`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, create_option: pulumi.Input[str], name: pulumi.Input[str], caching: Optional[pulumi.Input[str]] = None, disk_size_gb: Optional[pulumi.Input[float]] = None, image_uri: Optional[pulumi.Input[str]] = None, managed_disk_id: Optional[pulumi.Input[str]] = None, managed_disk_type: Optional[pulumi.Input[str]] = None, os_type: Optional[pulumi.Input[str]] = None, vhd_uri: Optional[pulumi.Input[str]] = None, write_accelerator_enabled: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[str] create_option: Specifies how the OS Disk should be created. Possible values are `Attach` (managed disks only) and `FromImage`.
        :param pulumi.Input[str] name: Specifies the name of the OS Disk.
        :param pulumi.Input[str] caching: Specifies the caching requirements for the OS Disk. Possible values include `None`, `ReadOnly` and `ReadWrite`.
        :param pulumi.Input[float] disk_size_gb: Specifies the size of the OS Disk in gigabytes.
        :param pulumi.Input[str] image_uri: Specifies the Image URI in the format `publisherName:offer:skus:version`. This field can also specify the [VHD uri](https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-linux-cli-deploy-templates/#create-a-custom-vm-image) of a custom VM image to clone. When cloning a Custom (Unmanaged) Disk Image the `os_type` field must be set.
        :param pulumi.Input[str] managed_disk_id: Specifies the ID of an existing Managed Disk which should be attached as the OS Disk of this Virtual Machine. If this is set then the `create_option` must be set to `Attach`.
        :param pulumi.Input[str] managed_disk_type: Specifies the type of Managed Disk which should be created. Possible values are `Standard_LRS`, `StandardSSD_LRS` or `Premium_LRS`.
        :param pulumi.Input[str] os_type: Specifies the Operating System on the OS Disk. Possible values are `Linux` and `Windows`.
        :param pulumi.Input[str] vhd_uri: Specifies the URI of the VHD file backing this Unmanaged OS Disk. Changing this forces a new resource to be created.
        :param pulumi.Input[bool] write_accelerator_enabled: Specifies if Write Accelerator is enabled on the disk. This can only be enabled on `Premium_LRS` managed disks with no caching and [M-Series VMs](https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/how-to-enable-write-accelerator). Defaults to `false`.
        """
        __self__.create_option = create_option
        __self__.name = name
        __self__.caching = caching
        __self__.disk_size_gb = disk_size_gb
        __self__.image_uri = image_uri
        __self__.managed_disk_id = managed_disk_id
        __self__.managed_disk_type = managed_disk_type
        __self__.os_type = os_type
        __self__.vhd_uri = vhd_uri
        __self__.write_accelerator_enabled = write_accelerator_enabled

@pulumi.input_type
class WindowsVirtualMachineAdditionalCapabilitiesArgs:
    ultra_ssd_enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("ultraSsdEnabled")
    """
    Should the capacity to enable Data Disks of the `UltraSSD_LRS` storage account type be supported on this Virtual Machine? Defaults to `false`. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, ultra_ssd_enabled: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[bool] ultra_ssd_enabled: Should the capacity to enable Data Disks of the `UltraSSD_LRS` storage account type be supported on this Virtual Machine? Defaults to `false`. Changing this forces a new resource to be created.
        """
        __self__.ultra_ssd_enabled = ultra_ssd_enabled

@pulumi.input_type
class WindowsVirtualMachineAdditionalUnattendContentArgs:
    content: pulumi.Input[str] = pulumi.input_property("content")
    """
    The XML formatted content that is added to the unattend.xml file for the specified path and component. Changing this forces a new resource to be created.
    """
    setting: pulumi.Input[str] = pulumi.input_property("setting")
    """
    The name of the setting to which the content applies. Possible values are `AutoLogon` and `FirstLogonCommands`. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, content: pulumi.Input[str], setting: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] content: The XML formatted content that is added to the unattend.xml file for the specified path and component. Changing this forces a new resource to be created.
        :param pulumi.Input[str] setting: The name of the setting to which the content applies. Possible values are `AutoLogon` and `FirstLogonCommands`. Changing this forces a new resource to be created.
        """
        __self__.content = content
        __self__.setting = setting

@pulumi.input_type
class WindowsVirtualMachineBootDiagnosticsArgs:
    storage_account_uri: pulumi.Input[str] = pulumi.input_property("storageAccountUri")
    """
    The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, storage_account_uri: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] storage_account_uri: The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.
        """
        __self__.storage_account_uri = storage_account_uri

@pulumi.input_type
class WindowsVirtualMachineIdentityArgs:
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    The type of Managed Identity which should be assigned to the Windows Virtual Machine. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
    """
    identity_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("identityIds")
    """
    A list of User Managed Identity ID's which should be assigned to the Windows Virtual Machine.
    """
    principal_id: Optional[pulumi.Input[str]] = pulumi.input_property("principalId")
    """
    The ID of the System Managed Service Principal.
    """
    tenant_id: Optional[pulumi.Input[str]] = pulumi.input_property("tenantId")
    """
    The ID of the Tenant the System Managed Service Principal is assigned in.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, type: pulumi.Input[str], identity_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, principal_id: Optional[pulumi.Input[str]] = None, tenant_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] type: The type of Managed Identity which should be assigned to the Windows Virtual Machine. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
        :param pulumi.Input[List[pulumi.Input[str]]] identity_ids: A list of User Managed Identity ID's which should be assigned to the Windows Virtual Machine.
        :param pulumi.Input[str] principal_id: The ID of the System Managed Service Principal.
        :param pulumi.Input[str] tenant_id: The ID of the Tenant the System Managed Service Principal is assigned in.
        """
        __self__.type = type
        __self__.identity_ids = identity_ids
        __self__.principal_id = principal_id
        __self__.tenant_id = tenant_id

@pulumi.input_type
class WindowsVirtualMachineOsDiskArgs:
    caching: pulumi.Input[str] = pulumi.input_property("caching")
    """
    The Type of Caching which should be used for the Internal OS Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
    """
    storage_account_type: pulumi.Input[str] = pulumi.input_property("storageAccountType")
    """
    The Type of Storage Account which should back this the Internal OS Disk. Possible values are `Standard_LRS`, `StandardSSD_LRS` and `Premium_LRS`. Changing this forces a new resource to be created.
    """
    diff_disk_settings: Optional[pulumi.Input['WindowsVirtualMachineOsDiskDiffDiskSettingsArgs']] = pulumi.input_property("diffDiskSettings")
    """
    A `diff_disk_settings` block as defined above.
    """
    disk_encryption_set_id: Optional[pulumi.Input[str]] = pulumi.input_property("diskEncryptionSetId")
    """
    The ID of the Disk Encryption Set which should be used to Encrypt this OS Disk.
    """
    disk_size_gb: Optional[pulumi.Input[float]] = pulumi.input_property("diskSizeGb")
    """
    The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine is sourced from.
    """
    name: Optional[pulumi.Input[str]] = pulumi.input_property("name")
    """
    The name which should be used for the Internal OS Disk. Changing this forces a new resource to be created.
    """
    write_accelerator_enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("writeAcceleratorEnabled")
    """
    Should Write Accelerator be Enabled for this OS Disk? Defaults to `false`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, caching: pulumi.Input[str], storage_account_type: pulumi.Input[str], diff_disk_settings: Optional[pulumi.Input['WindowsVirtualMachineOsDiskDiffDiskSettingsArgs']] = None, disk_encryption_set_id: Optional[pulumi.Input[str]] = None, disk_size_gb: Optional[pulumi.Input[float]] = None, name: Optional[pulumi.Input[str]] = None, write_accelerator_enabled: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[str] caching: The Type of Caching which should be used for the Internal OS Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
        :param pulumi.Input[str] storage_account_type: The Type of Storage Account which should back this the Internal OS Disk. Possible values are `Standard_LRS`, `StandardSSD_LRS` and `Premium_LRS`. Changing this forces a new resource to be created.
        :param pulumi.Input['WindowsVirtualMachineOsDiskDiffDiskSettingsArgs'] diff_disk_settings: A `diff_disk_settings` block as defined above.
        :param pulumi.Input[str] disk_encryption_set_id: The ID of the Disk Encryption Set which should be used to Encrypt this OS Disk.
        :param pulumi.Input[float] disk_size_gb: The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine is sourced from.
        :param pulumi.Input[str] name: The name which should be used for the Internal OS Disk. Changing this forces a new resource to be created.
        :param pulumi.Input[bool] write_accelerator_enabled: Should Write Accelerator be Enabled for this OS Disk? Defaults to `false`.
        """
        __self__.caching = caching
        __self__.storage_account_type = storage_account_type
        __self__.diff_disk_settings = diff_disk_settings
        __self__.disk_encryption_set_id = disk_encryption_set_id
        __self__.disk_size_gb = disk_size_gb
        __self__.name = name
        __self__.write_accelerator_enabled = write_accelerator_enabled

@pulumi.input_type
class WindowsVirtualMachineOsDiskDiffDiskSettingsArgs:
    option: pulumi.Input[str] = pulumi.input_property("option")
    """
    Specifies the Ephemeral Disk Settings for the OS Disk. At this time the only possible value is `Local`. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, option: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] option: Specifies the Ephemeral Disk Settings for the OS Disk. At this time the only possible value is `Local`. Changing this forces a new resource to be created.
        """
        __self__.option = option

@pulumi.input_type
class WindowsVirtualMachinePlanArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    Specifies the Name of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
    """
    product: pulumi.Input[str] = pulumi.input_property("product")
    """
    Specifies the Product of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
    """
    publisher: pulumi.Input[str] = pulumi.input_property("publisher")
    """
    Specifies the Publisher of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], product: pulumi.Input[str], publisher: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] name: Specifies the Name of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
        :param pulumi.Input[str] product: Specifies the Product of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
        :param pulumi.Input[str] publisher: Specifies the Publisher of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
        """
        __self__.name = name
        __self__.product = product
        __self__.publisher = publisher

@pulumi.input_type
class WindowsVirtualMachineScaleSetAdditionalCapabilitiesArgs:
    ultra_ssd_enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("ultraSsdEnabled")
    """
    Should the capacity to enable Data Disks of the `UltraSSD_LRS` storage account type be supported on this Virtual Machine Scale Set? Defaults to `false`. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, ultra_ssd_enabled: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[bool] ultra_ssd_enabled: Should the capacity to enable Data Disks of the `UltraSSD_LRS` storage account type be supported on this Virtual Machine Scale Set? Defaults to `false`. Changing this forces a new resource to be created.
        """
        __self__.ultra_ssd_enabled = ultra_ssd_enabled

@pulumi.input_type
class WindowsVirtualMachineScaleSetAdditionalUnattendContentArgs:
    content: pulumi.Input[str] = pulumi.input_property("content")
    """
    The XML formatted content that is added to the unattend.xml file for the specified path and component. Changing this forces a new resource to be created.
    """
    setting: pulumi.Input[str] = pulumi.input_property("setting")
    """
    The name of the setting to which the content applies. Possible values are `AutoLogon` and `FirstLogonCommands`. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, content: pulumi.Input[str], setting: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] content: The XML formatted content that is added to the unattend.xml file for the specified path and component. Changing this forces a new resource to be created.
        :param pulumi.Input[str] setting: The name of the setting to which the content applies. Possible values are `AutoLogon` and `FirstLogonCommands`. Changing this forces a new resource to be created.
        """
        __self__.content = content
        __self__.setting = setting

@pulumi.input_type
class WindowsVirtualMachineScaleSetAutomaticInstanceRepairArgs:
    enabled: pulumi.Input[bool] = pulumi.input_property("enabled")
    """
    Should the automatic instance repair be enabled on this Virtual Machine Scale Set?
    """
    grace_period: Optional[pulumi.Input[str]] = pulumi.input_property("gracePeriod")
    """
    Amount of time (in minutes, between 30 and 90, defaults to 30 minutes) for which automatic repairs will be delayed. The grace period starts right after the VM is found unhealthy. The time duration should be specified in ISO 8601 format.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, enabled: pulumi.Input[bool], grace_period: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[bool] enabled: Should the automatic instance repair be enabled on this Virtual Machine Scale Set?
        :param pulumi.Input[str] grace_period: Amount of time (in minutes, between 30 and 90, defaults to 30 minutes) for which automatic repairs will be delayed. The grace period starts right after the VM is found unhealthy. The time duration should be specified in ISO 8601 format.
        """
        __self__.enabled = enabled
        __self__.grace_period = grace_period

@pulumi.input_type
class WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs:
    disable_automatic_rollback: pulumi.Input[bool] = pulumi.input_property("disableAutomaticRollback")
    """
    Should automatic rollbacks be disabled? Changing this forces a new resource to be created.
    """
    enable_automatic_os_upgrade: pulumi.Input[bool] = pulumi.input_property("enableAutomaticOsUpgrade")
    """
    Should OS Upgrades automatically be applied to Scale Set instances in a rolling fashion when a newer version of the OS Image becomes available? Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, disable_automatic_rollback: pulumi.Input[bool], enable_automatic_os_upgrade: pulumi.Input[bool]) -> None:
        """
        :param pulumi.Input[bool] disable_automatic_rollback: Should automatic rollbacks be disabled? Changing this forces a new resource to be created.
        :param pulumi.Input[bool] enable_automatic_os_upgrade: Should OS Upgrades automatically be applied to Scale Set instances in a rolling fashion when a newer version of the OS Image becomes available? Changing this forces a new resource to be created.
        """
        __self__.disable_automatic_rollback = disable_automatic_rollback
        __self__.enable_automatic_os_upgrade = enable_automatic_os_upgrade

@pulumi.input_type
class WindowsVirtualMachineScaleSetBootDiagnosticsArgs:
    storage_account_uri: pulumi.Input[str] = pulumi.input_property("storageAccountUri")
    """
    The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, storage_account_uri: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] storage_account_uri: The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.
        """
        __self__.storage_account_uri = storage_account_uri

@pulumi.input_type
class WindowsVirtualMachineScaleSetDataDiskArgs:
    caching: pulumi.Input[str] = pulumi.input_property("caching")
    """
    The type of Caching which should be used for this Data Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
    """
    disk_size_gb: pulumi.Input[float] = pulumi.input_property("diskSizeGb")
    """
    The size of the Data Disk which should be created.
    """
    lun: pulumi.Input[float] = pulumi.input_property("lun")
    """
    The Logical Unit Number of the Data Disk, which must be unique within the Virtual Machine.
    """
    storage_account_type: pulumi.Input[str] = pulumi.input_property("storageAccountType")
    """
    The Type of Storage Account which should back this Data Disk. Possible values include `Standard_LRS`, `StandardSSD_LRS`, `Premium_LRS` and `UltraSSD_LRS`.
    """
    create_option: Optional[pulumi.Input[str]] = pulumi.input_property("createOption")
    """
    The create option which should be used for this Data Disk. Possible values are `Empty` and `FromImage`. Defaults to `Empty`. (`FromImage` should only be used if the source image includes data disks).
    """
    disk_encryption_set_id: Optional[pulumi.Input[str]] = pulumi.input_property("diskEncryptionSetId")
    """
    The ID of the Disk Encryption Set which should be used to encrypt this Data Disk.
    """
    write_accelerator_enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("writeAcceleratorEnabled")
    """
    Should Write Accelerator be enabled for this Data Disk? Defaults to `false`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, caching: pulumi.Input[str], disk_size_gb: pulumi.Input[float], lun: pulumi.Input[float], storage_account_type: pulumi.Input[str], create_option: Optional[pulumi.Input[str]] = None, disk_encryption_set_id: Optional[pulumi.Input[str]] = None, write_accelerator_enabled: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[str] caching: The type of Caching which should be used for this Data Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
        :param pulumi.Input[float] disk_size_gb: The size of the Data Disk which should be created.
        :param pulumi.Input[float] lun: The Logical Unit Number of the Data Disk, which must be unique within the Virtual Machine.
        :param pulumi.Input[str] storage_account_type: The Type of Storage Account which should back this Data Disk. Possible values include `Standard_LRS`, `StandardSSD_LRS`, `Premium_LRS` and `UltraSSD_LRS`.
        :param pulumi.Input[str] create_option: The create option which should be used for this Data Disk. Possible values are `Empty` and `FromImage`. Defaults to `Empty`. (`FromImage` should only be used if the source image includes data disks).
        :param pulumi.Input[str] disk_encryption_set_id: The ID of the Disk Encryption Set which should be used to encrypt this Data Disk.
        :param pulumi.Input[bool] write_accelerator_enabled: Should Write Accelerator be enabled for this Data Disk? Defaults to `false`.
        """
        __self__.caching = caching
        __self__.disk_size_gb = disk_size_gb
        __self__.lun = lun
        __self__.storage_account_type = storage_account_type
        __self__.create_option = create_option
        __self__.disk_encryption_set_id = disk_encryption_set_id
        __self__.write_accelerator_enabled = write_accelerator_enabled

@pulumi.input_type
class WindowsVirtualMachineScaleSetIdentityArgs:
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    The type of Managed Identity which should be assigned to the Windows Virtual Machine Scale Set. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
    """
    identity_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("identityIds")
    """
    A list of User Managed Identity ID's which should be assigned to the Windows Virtual Machine Scale Set.
    """
    principal_id: Optional[pulumi.Input[str]] = pulumi.input_property("principalId")
    """
    The ID of the System Managed Service Principal.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, type: pulumi.Input[str], identity_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, principal_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] type: The type of Managed Identity which should be assigned to the Windows Virtual Machine Scale Set. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
        :param pulumi.Input[List[pulumi.Input[str]]] identity_ids: A list of User Managed Identity ID's which should be assigned to the Windows Virtual Machine Scale Set.
        :param pulumi.Input[str] principal_id: The ID of the System Managed Service Principal.
        """
        __self__.type = type
        __self__.identity_ids = identity_ids
        __self__.principal_id = principal_id

@pulumi.input_type
class WindowsVirtualMachineScaleSetNetworkInterfaceArgs:
    ip_configurations: pulumi.Input[List[pulumi.Input['WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs']]] = pulumi.input_property("ipConfigurations")
    """
    One or more `ip_configuration` blocks as defined above.
    """
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The Name which should be used for this Network Interface. Changing this forces a new resource to be created.
    """
    dns_servers: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("dnsServers")
    """
    A list of IP Addresses of DNS Servers which should be assigned to the Network Interface.
    """
    enable_accelerated_networking: Optional[pulumi.Input[bool]] = pulumi.input_property("enableAcceleratedNetworking")
    """
    Does this Network Interface support Accelerated Networking? Defaults to `false`.
    """
    enable_ip_forwarding: Optional[pulumi.Input[bool]] = pulumi.input_property("enableIpForwarding")
    """
    Does this Network Interface support IP Forwarding? Defaults to `false`.
    """
    network_security_group_id: Optional[pulumi.Input[str]] = pulumi.input_property("networkSecurityGroupId")
    """
    The ID of a Network Security Group which should be assigned to this Network Interface.
    """
    primary: Optional[pulumi.Input[bool]] = pulumi.input_property("primary")
    """
    Is this the Primary IP Configuration?
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, ip_configurations: pulumi.Input[List[pulumi.Input['WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs']]], name: pulumi.Input[str], dns_servers: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, enable_accelerated_networking: Optional[pulumi.Input[bool]] = None, enable_ip_forwarding: Optional[pulumi.Input[bool]] = None, network_security_group_id: Optional[pulumi.Input[str]] = None, primary: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input['WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs']]] ip_configurations: One or more `ip_configuration` blocks as defined above.
        :param pulumi.Input[str] name: The Name which should be used for this Network Interface. Changing this forces a new resource to be created.
        :param pulumi.Input[List[pulumi.Input[str]]] dns_servers: A list of IP Addresses of DNS Servers which should be assigned to the Network Interface.
        :param pulumi.Input[bool] enable_accelerated_networking: Does this Network Interface support Accelerated Networking? Defaults to `false`.
        :param pulumi.Input[bool] enable_ip_forwarding: Does this Network Interface support IP Forwarding? Defaults to `false`.
        :param pulumi.Input[str] network_security_group_id: The ID of a Network Security Group which should be assigned to this Network Interface.
        :param pulumi.Input[bool] primary: Is this the Primary IP Configuration?
        """
        __self__.ip_configurations = ip_configurations
        __self__.name = name
        __self__.dns_servers = dns_servers
        __self__.enable_accelerated_networking = enable_accelerated_networking
        __self__.enable_ip_forwarding = enable_ip_forwarding
        __self__.network_security_group_id = network_security_group_id
        __self__.primary = primary

@pulumi.input_type
class WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The Name which should be used for this IP Configuration.
    """
    application_gateway_backend_address_pool_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("applicationGatewayBackendAddressPoolIds")
    """
    A list of Backend Address Pools ID's from a Application Gateway which this Virtual Machine Scale Set should be connected to.
    """
    application_security_group_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("applicationSecurityGroupIds")
    """
    A list of Application Security Group ID's which this Virtual Machine Scale Set should be connected to.
    """
    load_balancer_backend_address_pool_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("loadBalancerBackendAddressPoolIds")
    """
    A list of Backend Address Pools ID's from a Load Balancer which this Virtual Machine Scale Set should be connected to.
    """
    load_balancer_inbound_nat_rules_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("loadBalancerInboundNatRulesIds")
    """
    A list of NAT Rule ID's from a Load Balancer which this Virtual Machine Scale Set should be connected to.
    """
    primary: Optional[pulumi.Input[bool]] = pulumi.input_property("primary")
    """
    Is this the Primary IP Configuration for this Network Interface? Defaults to `false`.
    """
    public_ip_addresses: Optional[pulumi.Input[List[pulumi.Input['WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs']]]] = pulumi.input_property("publicIpAddresses")
    """
    A `public_ip_address` block as defined below.
    """
    subnet_id: Optional[pulumi.Input[str]] = pulumi.input_property("subnetId")
    """
    The ID of the Subnet which this IP Configuration should be connected to.
    """
    version: Optional[pulumi.Input[str]] = pulumi.input_property("version")
    """
    The Internet Protocol Version which should be used for this IP Configuration. Possible values are `IPv4` and `IPv6`. Defaults to `IPv4`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], application_gateway_backend_address_pool_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, application_security_group_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, load_balancer_backend_address_pool_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, load_balancer_inbound_nat_rules_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, primary: Optional[pulumi.Input[bool]] = None, public_ip_addresses: Optional[pulumi.Input[List[pulumi.Input['WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs']]]] = None, subnet_id: Optional[pulumi.Input[str]] = None, version: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] name: The Name which should be used for this IP Configuration.
        :param pulumi.Input[List[pulumi.Input[str]]] application_gateway_backend_address_pool_ids: A list of Backend Address Pools ID's from a Application Gateway which this Virtual Machine Scale Set should be connected to.
        :param pulumi.Input[List[pulumi.Input[str]]] application_security_group_ids: A list of Application Security Group ID's which this Virtual Machine Scale Set should be connected to.
        :param pulumi.Input[List[pulumi.Input[str]]] load_balancer_backend_address_pool_ids: A list of Backend Address Pools ID's from a Load Balancer which this Virtual Machine Scale Set should be connected to.
        :param pulumi.Input[List[pulumi.Input[str]]] load_balancer_inbound_nat_rules_ids: A list of NAT Rule ID's from a Load Balancer which this Virtual Machine Scale Set should be connected to.
        :param pulumi.Input[bool] primary: Is this the Primary IP Configuration for this Network Interface? Defaults to `false`.
        :param pulumi.Input[List[pulumi.Input['WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs']]] public_ip_addresses: A `public_ip_address` block as defined below.
        :param pulumi.Input[str] subnet_id: The ID of the Subnet which this IP Configuration should be connected to.
        :param pulumi.Input[str] version: The Internet Protocol Version which should be used for this IP Configuration. Possible values are `IPv4` and `IPv6`. Defaults to `IPv4`.
        """
        __self__.name = name
        __self__.application_gateway_backend_address_pool_ids = application_gateway_backend_address_pool_ids
        __self__.application_security_group_ids = application_security_group_ids
        __self__.load_balancer_backend_address_pool_ids = load_balancer_backend_address_pool_ids
        __self__.load_balancer_inbound_nat_rules_ids = load_balancer_inbound_nat_rules_ids
        __self__.primary = primary
        __self__.public_ip_addresses = public_ip_addresses
        __self__.subnet_id = subnet_id
        __self__.version = version

@pulumi.input_type
class WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The Name of the Public IP Address Configuration.
    """
    domain_name_label: Optional[pulumi.Input[str]] = pulumi.input_property("domainNameLabel")
    """
    The Prefix which should be used for the Domain Name Label for each Virtual Machine Instance. Azure concatenates the Domain Name Label and Virtual Machine Index to create a unique Domain Name Label for each Virtual Machine.
    """
    idle_timeout_in_minutes: Optional[pulumi.Input[float]] = pulumi.input_property("idleTimeoutInMinutes")
    """
    The Idle Timeout in Minutes for the Public IP Address. Possible values are in the range `4` to `32`.
    """
    ip_tags: Optional[pulumi.Input[List[pulumi.Input['WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArgs']]]] = pulumi.input_property("ipTags")
    """
    One or more `ip_tag` blocks as defined above.
    """
    public_ip_prefix_id: Optional[pulumi.Input[str]] = pulumi.input_property("publicIpPrefixId")
    """
    The ID of the Public IP Address Prefix from where Public IP Addresses should be allocated. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], domain_name_label: Optional[pulumi.Input[str]] = None, idle_timeout_in_minutes: Optional[pulumi.Input[float]] = None, ip_tags: Optional[pulumi.Input[List[pulumi.Input['WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArgs']]]] = None, public_ip_prefix_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] name: The Name of the Public IP Address Configuration.
        :param pulumi.Input[str] domain_name_label: The Prefix which should be used for the Domain Name Label for each Virtual Machine Instance. Azure concatenates the Domain Name Label and Virtual Machine Index to create a unique Domain Name Label for each Virtual Machine.
        :param pulumi.Input[float] idle_timeout_in_minutes: The Idle Timeout in Minutes for the Public IP Address. Possible values are in the range `4` to `32`.
        :param pulumi.Input[List[pulumi.Input['WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArgs']]] ip_tags: One or more `ip_tag` blocks as defined above.
        :param pulumi.Input[str] public_ip_prefix_id: The ID of the Public IP Address Prefix from where Public IP Addresses should be allocated. Changing this forces a new resource to be created.
        """
        __self__.name = name
        __self__.domain_name_label = domain_name_label
        __self__.idle_timeout_in_minutes = idle_timeout_in_minutes
        __self__.ip_tags = ip_tags
        __self__.public_ip_prefix_id = public_ip_prefix_id

@pulumi.input_type
class WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArgs:
    tag: pulumi.Input[str] = pulumi.input_property("tag")
    """
    The IP Tag associated with the Public IP, such as `SQL` or `Storage`.
    """
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    The Type of IP Tag, such as `FirstPartyUsage`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, tag: pulumi.Input[str], type: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] tag: The IP Tag associated with the Public IP, such as `SQL` or `Storage`.
        :param pulumi.Input[str] type: The Type of IP Tag, such as `FirstPartyUsage`.
        """
        __self__.tag = tag
        __self__.type = type

@pulumi.input_type
class WindowsVirtualMachineScaleSetOsDiskArgs:
    caching: pulumi.Input[str] = pulumi.input_property("caching")
    """
    The Type of Caching which should be used for the Internal OS Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
    """
    storage_account_type: pulumi.Input[str] = pulumi.input_property("storageAccountType")
    """
    The Type of Storage Account which should back this the Internal OS Disk. Possible values include `Standard_LRS`, `StandardSSD_LRS` and `Premium_LRS`.
    """
    diff_disk_settings: Optional[pulumi.Input['WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs']] = pulumi.input_property("diffDiskSettings")
    """
    A `diff_disk_settings` block as defined above. Changing this forces a new resource to be created.
    """
    disk_encryption_set_id: Optional[pulumi.Input[str]] = pulumi.input_property("diskEncryptionSetId")
    """
    The ID of the Disk Encryption Set which should be used to encrypt this OS Disk.
    """
    disk_size_gb: Optional[pulumi.Input[float]] = pulumi.input_property("diskSizeGb")
    """
    The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine Scale Set is sourced from.
    """
    write_accelerator_enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("writeAcceleratorEnabled")
    """
    Should Write Accelerator be Enabled for this OS Disk? Defaults to `false`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, caching: pulumi.Input[str], storage_account_type: pulumi.Input[str], diff_disk_settings: Optional[pulumi.Input['WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs']] = None, disk_encryption_set_id: Optional[pulumi.Input[str]] = None, disk_size_gb: Optional[pulumi.Input[float]] = None, write_accelerator_enabled: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[str] caching: The Type of Caching which should be used for the Internal OS Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
        :param pulumi.Input[str] storage_account_type: The Type of Storage Account which should back this the Internal OS Disk. Possible values include `Standard_LRS`, `StandardSSD_LRS` and `Premium_LRS`.
        :param pulumi.Input['WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs'] diff_disk_settings: A `diff_disk_settings` block as defined above. Changing this forces a new resource to be created.
        :param pulumi.Input[str] disk_encryption_set_id: The ID of the Disk Encryption Set which should be used to encrypt this OS Disk.
        :param pulumi.Input[float] disk_size_gb: The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine Scale Set is sourced from.
        :param pulumi.Input[bool] write_accelerator_enabled: Should Write Accelerator be Enabled for this OS Disk? Defaults to `false`.
        """
        __self__.caching = caching
        __self__.storage_account_type = storage_account_type
        __self__.diff_disk_settings = diff_disk_settings
        __self__.disk_encryption_set_id = disk_encryption_set_id
        __self__.disk_size_gb = disk_size_gb
        __self__.write_accelerator_enabled = write_accelerator_enabled

@pulumi.input_type
class WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs:
    option: pulumi.Input[str] = pulumi.input_property("option")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, option: pulumi.Input[str]) -> None:
        __self__.option = option

@pulumi.input_type
class WindowsVirtualMachineScaleSetPlanArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The name of the Windows Virtual Machine Scale Set. Changing this forces a new resource to be created.
    """
    product: pulumi.Input[str] = pulumi.input_property("product")
    publisher: pulumi.Input[str] = pulumi.input_property("publisher")
    """
    Specifies the publisher of the image used to create the virtual machines.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], product: pulumi.Input[str], publisher: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] name: The name of the Windows Virtual Machine Scale Set. Changing this forces a new resource to be created.
        :param pulumi.Input[str] publisher: Specifies the publisher of the image used to create the virtual machines.
        """
        __self__.name = name
        __self__.product = product
        __self__.publisher = publisher

@pulumi.input_type
class WindowsVirtualMachineScaleSetRollingUpgradePolicyArgs:
    max_batch_instance_percent: pulumi.Input[float] = pulumi.input_property("maxBatchInstancePercent")
    """
    The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. Changing this forces a new resource to be created.
    """
    max_unhealthy_instance_percent: pulumi.Input[float] = pulumi.input_property("maxUnhealthyInstancePercent")
    """
    The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. Changing this forces a new resource to be created.
    """
    max_unhealthy_upgraded_instance_percent: pulumi.Input[float] = pulumi.input_property("maxUnhealthyUpgradedInstancePercent")
    """
    The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. Changing this forces a new resource to be created.
    """
    pause_time_between_batches: pulumi.Input[str] = pulumi.input_property("pauseTimeBetweenBatches")
    """
    The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, max_batch_instance_percent: pulumi.Input[float], max_unhealthy_instance_percent: pulumi.Input[float], max_unhealthy_upgraded_instance_percent: pulumi.Input[float], pause_time_between_batches: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[float] max_batch_instance_percent: The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. Changing this forces a new resource to be created.
        :param pulumi.Input[float] max_unhealthy_instance_percent: The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. Changing this forces a new resource to be created.
        :param pulumi.Input[float] max_unhealthy_upgraded_instance_percent: The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. Changing this forces a new resource to be created.
        :param pulumi.Input[str] pause_time_between_batches: The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format. Changing this forces a new resource to be created.
        """
        __self__.max_batch_instance_percent = max_batch_instance_percent
        __self__.max_unhealthy_instance_percent = max_unhealthy_instance_percent
        __self__.max_unhealthy_upgraded_instance_percent = max_unhealthy_upgraded_instance_percent
        __self__.pause_time_between_batches = pause_time_between_batches

@pulumi.input_type
class WindowsVirtualMachineScaleSetSecretArgs:
    certificates: pulumi.Input[List[pulumi.Input['WindowsVirtualMachineScaleSetSecretCertificateArgs']]] = pulumi.input_property("certificates")
    """
    One or more `certificate` blocks as defined above.
    """
    key_vault_id: pulumi.Input[str] = pulumi.input_property("keyVaultId")
    """
    The ID of the Key Vault from which all Secrets should be sourced.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, certificates: pulumi.Input[List[pulumi.Input['WindowsVirtualMachineScaleSetSecretCertificateArgs']]], key_vault_id: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[List[pulumi.Input['WindowsVirtualMachineScaleSetSecretCertificateArgs']]] certificates: One or more `certificate` blocks as defined above.
        :param pulumi.Input[str] key_vault_id: The ID of the Key Vault from which all Secrets should be sourced.
        """
        __self__.certificates = certificates
        __self__.key_vault_id = key_vault_id

@pulumi.input_type
class WindowsVirtualMachineScaleSetSecretCertificateArgs:
    store: pulumi.Input[str] = pulumi.input_property("store")
    """
    The certificate store on the Virtual Machine where the certificate should be added.
    """
    url: pulumi.Input[str] = pulumi.input_property("url")
    """
    The Secret URL of a Key Vault Certificate.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, store: pulumi.Input[str], url: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] store: The certificate store on the Virtual Machine where the certificate should be added.
        :param pulumi.Input[str] url: The Secret URL of a Key Vault Certificate.
        """
        __self__.store = store
        __self__.url = url

@pulumi.input_type
class WindowsVirtualMachineScaleSetSourceImageReferenceArgs:
    offer: pulumi.Input[str] = pulumi.input_property("offer")
    """
    Specifies the offer of the image used to create the virtual machines.
    """
    publisher: pulumi.Input[str] = pulumi.input_property("publisher")
    """
    Specifies the publisher of the image used to create the virtual machines.
    """
    sku: pulumi.Input[str] = pulumi.input_property("sku")
    """
    Specifies the SKU of the image used to create the virtual machines.
    """
    version: pulumi.Input[str] = pulumi.input_property("version")
    """
    Specifies the version of the image used to create the virtual machines.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, offer: pulumi.Input[str], publisher: pulumi.Input[str], sku: pulumi.Input[str], version: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] offer: Specifies the offer of the image used to create the virtual machines.
        :param pulumi.Input[str] publisher: Specifies the publisher of the image used to create the virtual machines.
        :param pulumi.Input[str] sku: Specifies the SKU of the image used to create the virtual machines.
        :param pulumi.Input[str] version: Specifies the version of the image used to create the virtual machines.
        """
        __self__.offer = offer
        __self__.publisher = publisher
        __self__.sku = sku
        __self__.version = version

@pulumi.input_type
class WindowsVirtualMachineScaleSetTerminateNotificationArgs:
    enabled: pulumi.Input[bool] = pulumi.input_property("enabled")
    """
    Should the terminate notification be enabled on this Virtual Machine Scale Set? Defaults to `false`.
    """
    timeout: Optional[pulumi.Input[str]] = pulumi.input_property("timeout")
    """
    Length of time (in minutes, between 5 and 15) a notification to be sent to the VM on the instance metadata server till the VM gets deleted. The time duration should be specified in ISO 8601 format.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, enabled: pulumi.Input[bool], timeout: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[bool] enabled: Should the terminate notification be enabled on this Virtual Machine Scale Set? Defaults to `false`.
        :param pulumi.Input[str] timeout: Length of time (in minutes, between 5 and 15) a notification to be sent to the VM on the instance metadata server till the VM gets deleted. The time duration should be specified in ISO 8601 format.
        """
        __self__.enabled = enabled
        __self__.timeout = timeout

@pulumi.input_type
class WindowsVirtualMachineScaleSetWinrmListenerArgs:
    protocol: pulumi.Input[str] = pulumi.input_property("protocol")
    """
    The Protocol of the WinRM Listener. Possible values are `Http` and `Https`.
    """
    certificate_url: Optional[pulumi.Input[str]] = pulumi.input_property("certificateUrl")
    """
    The Secret URL of a Key Vault Certificate, which must be specified when `protocol` is set to `Https`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, protocol: pulumi.Input[str], certificate_url: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] protocol: The Protocol of the WinRM Listener. Possible values are `Http` and `Https`.
        :param pulumi.Input[str] certificate_url: The Secret URL of a Key Vault Certificate, which must be specified when `protocol` is set to `Https`.
        """
        __self__.protocol = protocol
        __self__.certificate_url = certificate_url

@pulumi.input_type
class WindowsVirtualMachineSecretArgs:
    certificates: pulumi.Input[List[pulumi.Input['WindowsVirtualMachineSecretCertificateArgs']]] = pulumi.input_property("certificates")
    """
    One or more `certificate` blocks as defined above.
    """
    key_vault_id: pulumi.Input[str] = pulumi.input_property("keyVaultId")
    """
    The ID of the Key Vault from which all Secrets should be sourced.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, certificates: pulumi.Input[List[pulumi.Input['WindowsVirtualMachineSecretCertificateArgs']]], key_vault_id: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[List[pulumi.Input['WindowsVirtualMachineSecretCertificateArgs']]] certificates: One or more `certificate` blocks as defined above.
        :param pulumi.Input[str] key_vault_id: The ID of the Key Vault from which all Secrets should be sourced.
        """
        __self__.certificates = certificates
        __self__.key_vault_id = key_vault_id

@pulumi.input_type
class WindowsVirtualMachineSecretCertificateArgs:
    store: pulumi.Input[str] = pulumi.input_property("store")
    """
    The certificate store on the Virtual Machine where the certificate should be added.
    """
    url: pulumi.Input[str] = pulumi.input_property("url")
    """
    The Secret URL of a Key Vault Certificate.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, store: pulumi.Input[str], url: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] store: The certificate store on the Virtual Machine where the certificate should be added.
        :param pulumi.Input[str] url: The Secret URL of a Key Vault Certificate.
        """
        __self__.store = store
        __self__.url = url

@pulumi.input_type
class WindowsVirtualMachineSourceImageReferenceArgs:
    offer: pulumi.Input[str] = pulumi.input_property("offer")
    """
    (Optional) Specifies the offer of the image used to create the virtual machines.
    """
    publisher: pulumi.Input[str] = pulumi.input_property("publisher")
    """
    Specifies the Publisher of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
    """
    sku: pulumi.Input[str] = pulumi.input_property("sku")
    """
    (Optional) Specifies the SKU of the image used to create the virtual machines.
    """
    version: pulumi.Input[str] = pulumi.input_property("version")
    """
    (Optional) Specifies the version of the image used to create the virtual machines.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, offer: pulumi.Input[str], publisher: pulumi.Input[str], sku: pulumi.Input[str], version: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] offer: (Optional) Specifies the offer of the image used to create the virtual machines.
        :param pulumi.Input[str] publisher: Specifies the Publisher of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
        :param pulumi.Input[str] sku: (Optional) Specifies the SKU of the image used to create the virtual machines.
        :param pulumi.Input[str] version: (Optional) Specifies the version of the image used to create the virtual machines.
        """
        __self__.offer = offer
        __self__.publisher = publisher
        __self__.sku = sku
        __self__.version = version

@pulumi.input_type
class WindowsVirtualMachineWinrmListenerArgs:
    protocol: pulumi.Input[str] = pulumi.input_property("protocol")
    certificate_url: Optional[pulumi.Input[str]] = pulumi.input_property("certificateUrl")
    """
    The Secret URL of a Key Vault Certificate, which must be specified when `protocol` is set to `Https`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, protocol: pulumi.Input[str], certificate_url: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] certificate_url: The Secret URL of a Key Vault Certificate, which must be specified when `protocol` is set to `Https`.
        """
        __self__.protocol = protocol
        __self__.certificate_url = certificate_url

