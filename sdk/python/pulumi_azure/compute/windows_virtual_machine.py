# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Mapping, Optional, Tuple, Union
from .. import _utilities, _tables
from . import outputs
from ._inputs import *

__all__ = ['WindowsVirtualMachine']


class WindowsVirtualMachine(pulumi.CustomResource):
    additional_capabilities: pulumi.Output[Optional['outputs.WindowsVirtualMachineAdditionalCapabilities']] = pulumi.property("additionalCapabilities")
    """
    A `additional_capabilities` block as defined below.
    """

    additional_unattend_contents: pulumi.Output[Optional[List['outputs.WindowsVirtualMachineAdditionalUnattendContent']]] = pulumi.property("additionalUnattendContents")
    """
    One or more `additional_unattend_content` blocks as defined below. Changing this forces a new resource to be created.
    """

    admin_password: pulumi.Output[str] = pulumi.property("adminPassword")
    """
    The Password which should be used for the local-administrator on this Virtual Machine. Changing this forces a new resource to be created.
    """

    admin_username: pulumi.Output[str] = pulumi.property("adminUsername")
    """
    The username of the local administrator used for the Virtual Machine. Changing this forces a new resource to be created.
    """

    allow_extension_operations: pulumi.Output[Optional[bool]] = pulumi.property("allowExtensionOperations")
    """
    Should Extension Operations be allowed on this Virtual Machine?
    """

    availability_set_id: pulumi.Output[Optional[str]] = pulumi.property("availabilitySetId")
    """
    Specifies the ID of the Availability Set in which the Virtual Machine should exist. Changing this forces a new resource to be created.
    """

    boot_diagnostics: pulumi.Output[Optional['outputs.WindowsVirtualMachineBootDiagnostics']] = pulumi.property("bootDiagnostics")
    """
    A `boot_diagnostics` block as defined below.
    """

    computer_name: pulumi.Output[str] = pulumi.property("computerName")
    """
    Specifies the Hostname which should be used for this Virtual Machine. If unspecified this defaults to the value for the `name` field. If the value of the `name` field is not a valid `computer_name`, then you must specify `computer_name`. Changing this forces a new resource to be created.
    """

    custom_data: pulumi.Output[Optional[str]] = pulumi.property("customData")
    """
    The Base64-Encoded Custom Data which should be used for this Virtual Machine. Changing this forces a new resource to be created.
    """

    dedicated_host_id: pulumi.Output[Optional[str]] = pulumi.property("dedicatedHostId")
    """
    The ID of a Dedicated Host where this machine should be run on. Changing this forces a new resource to be created.
    """

    enable_automatic_updates: pulumi.Output[Optional[bool]] = pulumi.property("enableAutomaticUpdates")
    """
    Specifies if Automatic Updates are Enabled for the Windows Virtual Machine. Changing this forces a new resource to be created.
    """

    eviction_policy: pulumi.Output[Optional[str]] = pulumi.property("evictionPolicy")
    """
    Specifies what should happen when the Virtual Machine is evicted for price reasons when using a Spot instance. At this time the only supported value is `Deallocate`. Changing this forces a new resource to be created.
    """

    identity: pulumi.Output[Optional['outputs.WindowsVirtualMachineIdentity']] = pulumi.property("identity")
    """
    An `identity` block as defined below.
    """

    license_type: pulumi.Output[Optional[str]] = pulumi.property("licenseType")
    """
    Specifies the type of on-premise license (also known as [Azure Hybrid Use Benefit](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-hybrid-use-benefit-licensing)) which should be used for this Virtual Machine. Possible values are `None`, `Windows_Client` and `Windows_Server`. Changing this forces a new resource to be created.
    """

    location: pulumi.Output[str] = pulumi.property("location")
    """
    The Azure location where the Windows Virtual Machine should exist. Changing this forces a new resource to be created.
    """

    max_bid_price: pulumi.Output[Optional[float]] = pulumi.property("maxBidPrice")
    """
    The maximum price you're willing to pay for this Virtual Machine, in US Dollars; which must be greater than the current spot price. If this bid price falls below the current spot price the Virtual Machine will be evicted using the `eviction_policy`. Defaults to `-1`, which means that the Virtual Machine should not be evicted for price reasons.
    """

    name: pulumi.Output[str] = pulumi.property("name")
    """
    The name of the Windows Virtual Machine. Changing this forces a new resource to be created.
    """

    network_interface_ids: pulumi.Output[List[str]] = pulumi.property("networkInterfaceIds")
    """
    . A list of Network Interface ID's which should be attached to this Virtual Machine. The first Network Interface ID in this list will be the Primary Network Interface on the Virtual Machine.
    """

    os_disk: pulumi.Output['outputs.WindowsVirtualMachineOsDisk'] = pulumi.property("osDisk")
    """
    A `os_disk` block as defined below.
    """

    plan: pulumi.Output[Optional['outputs.WindowsVirtualMachinePlan']] = pulumi.property("plan")
    """
    A `plan` block as defined below. Changing this forces a new resource to be created.
    """

    priority: pulumi.Output[Optional[str]] = pulumi.property("priority")
    """
    Specifies the priority of this Virtual Machine. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this forces a new resource to be created.
    """

    private_ip_address: pulumi.Output[str] = pulumi.property("privateIpAddress")
    """
    The Primary Private IP Address assigned to this Virtual Machine.
    """

    private_ip_addresses: pulumi.Output[List[str]] = pulumi.property("privateIpAddresses")
    """
    A list of Private IP Addresses assigned to this Virtual Machine.
    """

    provision_vm_agent: pulumi.Output[Optional[bool]] = pulumi.property("provisionVmAgent")
    """
    Should the Azure VM Agent be provisioned on this Virtual Machine? Defaults to `true`. Changing this forces a new resource to be created.
    """

    proximity_placement_group_id: pulumi.Output[Optional[str]] = pulumi.property("proximityPlacementGroupId")
    """
    The ID of the Proximity Placement Group which the Virtual Machine should be assigned to. Changing this forces a new resource to be created.
    """

    public_ip_address: pulumi.Output[str] = pulumi.property("publicIpAddress")
    """
    The Primary Public IP Address assigned to this Virtual Machine.
    """

    public_ip_addresses: pulumi.Output[List[str]] = pulumi.property("publicIpAddresses")
    """
    A list of the Public IP Addresses assigned to this Virtual Machine.
    """

    resource_group_name: pulumi.Output[str] = pulumi.property("resourceGroupName")
    """
    The name of the Resource Group in which the Windows Virtual Machine should be exist. Changing this forces a new resource to be created.
    """

    secrets: pulumi.Output[Optional[List['outputs.WindowsVirtualMachineSecret']]] = pulumi.property("secrets")
    """
    One or more `secret` blocks as defined below.
    """

    size: pulumi.Output[str] = pulumi.property("size")
    """
    The SKU which should be used for this Virtual Machine, such as `Standard_F2`.
    """

    source_image_id: pulumi.Output[Optional[str]] = pulumi.property("sourceImageId")
    """
    The ID of the Image which this Virtual Machine should be created from. Changing this forces a new resource to be created.
    """

    source_image_reference: pulumi.Output[Optional['outputs.WindowsVirtualMachineSourceImageReference']] = pulumi.property("sourceImageReference")
    """
    A `source_image_reference` block as defined below. Changing this forces a new resource to be created.
    """

    tags: pulumi.Output[Optional[Mapping[str, str]]] = pulumi.property("tags")
    """
    A mapping of tags which should be assigned to this Virtual Machine.
    """

    timezone: pulumi.Output[Optional[str]] = pulumi.property("timezone")
    """
    Specifies the Time Zone which should be used by the Virtual Machine, [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).
    """

    virtual_machine_id: pulumi.Output[str] = pulumi.property("virtualMachineId")
    """
    A 128-bit identifier which uniquely identifies this Virtual Machine.
    """

    virtual_machine_scale_set_id: pulumi.Output[Optional[str]] = pulumi.property("virtualMachineScaleSetId")
    """
    Specifies the Orchestrated Virtual Machine Scale Set that this Virtual Machine should be created within. Changing this forces a new resource to be created.
    """

    winrm_listeners: pulumi.Output[Optional[List['outputs.WindowsVirtualMachineWinrmListener']]] = pulumi.property("winrmListeners")
    """
    One or more `winrm_listener` blocks as defined below.
    """

    zone: pulumi.Output[str] = pulumi.property("zone")
    """
    The Zone in which this Virtual Machine should be created. Changing this forces a new resource to be created.
    """

    def __init__(__self__,
                 resource_name,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 additional_capabilities: Optional[pulumi.Input[pulumi.InputType['WindowsVirtualMachineAdditionalCapabilitiesArgs']]] = None,
                 additional_unattend_contents: Optional[pulumi.Input[List[pulumi.Input[pulumi.InputType['WindowsVirtualMachineAdditionalUnattendContentArgs']]]]] = None,
                 admin_password: Optional[pulumi.Input[str]] = None,
                 admin_username: Optional[pulumi.Input[str]] = None,
                 allow_extension_operations: Optional[pulumi.Input[bool]] = None,
                 availability_set_id: Optional[pulumi.Input[str]] = None,
                 boot_diagnostics: Optional[pulumi.Input[pulumi.InputType['WindowsVirtualMachineBootDiagnosticsArgs']]] = None,
                 computer_name: Optional[pulumi.Input[str]] = None,
                 custom_data: Optional[pulumi.Input[str]] = None,
                 dedicated_host_id: Optional[pulumi.Input[str]] = None,
                 enable_automatic_updates: Optional[pulumi.Input[bool]] = None,
                 eviction_policy: Optional[pulumi.Input[str]] = None,
                 identity: Optional[pulumi.Input[pulumi.InputType['WindowsVirtualMachineIdentityArgs']]] = None,
                 license_type: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 max_bid_price: Optional[pulumi.Input[float]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 network_interface_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None,
                 os_disk: Optional[pulumi.Input[pulumi.InputType['WindowsVirtualMachineOsDiskArgs']]] = None,
                 plan: Optional[pulumi.Input[pulumi.InputType['WindowsVirtualMachinePlanArgs']]] = None,
                 priority: Optional[pulumi.Input[str]] = None,
                 provision_vm_agent: Optional[pulumi.Input[bool]] = None,
                 proximity_placement_group_id: Optional[pulumi.Input[str]] = None,
                 resource_group_name: Optional[pulumi.Input[str]] = None,
                 secrets: Optional[pulumi.Input[List[pulumi.Input[pulumi.InputType['WindowsVirtualMachineSecretArgs']]]]] = None,
                 size: Optional[pulumi.Input[str]] = None,
                 source_image_id: Optional[pulumi.Input[str]] = None,
                 source_image_reference: Optional[pulumi.Input[pulumi.InputType['WindowsVirtualMachineSourceImageReferenceArgs']]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 timezone: Optional[pulumi.Input[str]] = None,
                 virtual_machine_scale_set_id: Optional[pulumi.Input[str]] = None,
                 winrm_listeners: Optional[pulumi.Input[List[pulumi.Input[pulumi.InputType['WindowsVirtualMachineWinrmListenerArgs']]]]] = None,
                 zone: Optional[pulumi.Input[str]] = None,
                 __props__=None,
                 __name__=None,
                 __opts__=None):
        """
        Manages a Windows Virtual Machine.

        ## Disclaimers

        > **Note** This provider will automatically remove the OS Disk by default - this behaviour can be configured using the `features` configuration within the Provider configuration block.

        > **Note** This resource does not support Unmanaged Disks. If you need to use Unmanaged Disks you can continue to use the `compute.VirtualMachine` resource instead.

        > **Note** This resource does not support attaching existing OS Disks. You can instead capture an image of the OS Disk or continue to use the `compute.VirtualMachine` resource instead.

        > In this release there's a known issue where the `public_ip_address` and `public_ip_addresses` fields may not be fully populated for Dynamic Public IP's.

        ## Example Usage

        This example provisions a basic Windows Virtual Machine on an internal network.

        ```python
        import pulumi
        import pulumi_azure as azure

        example_resource_group = azure.core.ResourceGroup("exampleResourceGroup", location="West Europe")
        example_virtual_network = azure.network.VirtualNetwork("exampleVirtualNetwork",
            address_spaces=["10.0.0.0/16"],
            location=example_resource_group.location,
            resource_group_name=example_resource_group.name)
        example_subnet = azure.network.Subnet("exampleSubnet",
            resource_group_name=example_resource_group.name,
            virtual_network_name=example_virtual_network.name,
            address_prefix="10.0.2.0/24")
        example_network_interface = azure.network.NetworkInterface("exampleNetworkInterface",
            location=example_resource_group.location,
            resource_group_name=example_resource_group.name,
            ip_configurations=[{
                "name": "internal",
                "subnet_id": example_subnet.id,
                "privateIpAddressAllocation": "Dynamic",
            }])
        example_windows_virtual_machine = azure.compute.WindowsVirtualMachine("exampleWindowsVirtualMachine",
            resource_group_name=example_resource_group.name,
            location=example_resource_group.location,
            size="Standard_F2",
            admin_username="adminuser",
            admin_password="P@$$w0rd1234!",
            network_interface_ids=[example_network_interface.id],
            os_disk={
                "caching": "ReadWrite",
                "storage_account_type": "Standard_LRS",
            },
            source_image_reference={
                "publisher": "MicrosoftWindowsServer",
                "offer": "WindowsServer",
                "sku": "2016-Datacenter",
                "version": "latest",
            })
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[pulumi.InputType['WindowsVirtualMachineAdditionalCapabilitiesArgs']] additional_capabilities: A `additional_capabilities` block as defined below.
        :param pulumi.Input[List[pulumi.Input[pulumi.InputType['WindowsVirtualMachineAdditionalUnattendContentArgs']]]] additional_unattend_contents: One or more `additional_unattend_content` blocks as defined below. Changing this forces a new resource to be created.
        :param pulumi.Input[str] admin_password: The Password which should be used for the local-administrator on this Virtual Machine. Changing this forces a new resource to be created.
        :param pulumi.Input[str] admin_username: The username of the local administrator used for the Virtual Machine. Changing this forces a new resource to be created.
        :param pulumi.Input[bool] allow_extension_operations: Should Extension Operations be allowed on this Virtual Machine?
        :param pulumi.Input[str] availability_set_id: Specifies the ID of the Availability Set in which the Virtual Machine should exist. Changing this forces a new resource to be created.
        :param pulumi.Input[pulumi.InputType['WindowsVirtualMachineBootDiagnosticsArgs']] boot_diagnostics: A `boot_diagnostics` block as defined below.
        :param pulumi.Input[str] computer_name: Specifies the Hostname which should be used for this Virtual Machine. If unspecified this defaults to the value for the `name` field. If the value of the `name` field is not a valid `computer_name`, then you must specify `computer_name`. Changing this forces a new resource to be created.
        :param pulumi.Input[str] custom_data: The Base64-Encoded Custom Data which should be used for this Virtual Machine. Changing this forces a new resource to be created.
        :param pulumi.Input[str] dedicated_host_id: The ID of a Dedicated Host where this machine should be run on. Changing this forces a new resource to be created.
        :param pulumi.Input[bool] enable_automatic_updates: Specifies if Automatic Updates are Enabled for the Windows Virtual Machine. Changing this forces a new resource to be created.
        :param pulumi.Input[str] eviction_policy: Specifies what should happen when the Virtual Machine is evicted for price reasons when using a Spot instance. At this time the only supported value is `Deallocate`. Changing this forces a new resource to be created.
        :param pulumi.Input[pulumi.InputType['WindowsVirtualMachineIdentityArgs']] identity: An `identity` block as defined below.
        :param pulumi.Input[str] license_type: Specifies the type of on-premise license (also known as [Azure Hybrid Use Benefit](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-hybrid-use-benefit-licensing)) which should be used for this Virtual Machine. Possible values are `None`, `Windows_Client` and `Windows_Server`. Changing this forces a new resource to be created.
        :param pulumi.Input[str] location: The Azure location where the Windows Virtual Machine should exist. Changing this forces a new resource to be created.
        :param pulumi.Input[float] max_bid_price: The maximum price you're willing to pay for this Virtual Machine, in US Dollars; which must be greater than the current spot price. If this bid price falls below the current spot price the Virtual Machine will be evicted using the `eviction_policy`. Defaults to `-1`, which means that the Virtual Machine should not be evicted for price reasons.
        :param pulumi.Input[str] name: The name of the Windows Virtual Machine. Changing this forces a new resource to be created.
        :param pulumi.Input[List[pulumi.Input[str]]] network_interface_ids: . A list of Network Interface ID's which should be attached to this Virtual Machine. The first Network Interface ID in this list will be the Primary Network Interface on the Virtual Machine.
        :param pulumi.Input[pulumi.InputType['WindowsVirtualMachineOsDiskArgs']] os_disk: A `os_disk` block as defined below.
        :param pulumi.Input[pulumi.InputType['WindowsVirtualMachinePlanArgs']] plan: A `plan` block as defined below. Changing this forces a new resource to be created.
        :param pulumi.Input[str] priority: Specifies the priority of this Virtual Machine. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this forces a new resource to be created.
        :param pulumi.Input[bool] provision_vm_agent: Should the Azure VM Agent be provisioned on this Virtual Machine? Defaults to `true`. Changing this forces a new resource to be created.
        :param pulumi.Input[str] proximity_placement_group_id: The ID of the Proximity Placement Group which the Virtual Machine should be assigned to. Changing this forces a new resource to be created.
        :param pulumi.Input[str] resource_group_name: The name of the Resource Group in which the Windows Virtual Machine should be exist. Changing this forces a new resource to be created.
        :param pulumi.Input[List[pulumi.Input[pulumi.InputType['WindowsVirtualMachineSecretArgs']]]] secrets: One or more `secret` blocks as defined below.
        :param pulumi.Input[str] size: The SKU which should be used for this Virtual Machine, such as `Standard_F2`.
        :param pulumi.Input[str] source_image_id: The ID of the Image which this Virtual Machine should be created from. Changing this forces a new resource to be created.
        :param pulumi.Input[pulumi.InputType['WindowsVirtualMachineSourceImageReferenceArgs']] source_image_reference: A `source_image_reference` block as defined below. Changing this forces a new resource to be created.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] tags: A mapping of tags which should be assigned to this Virtual Machine.
        :param pulumi.Input[str] timezone: Specifies the Time Zone which should be used by the Virtual Machine, [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).
        :param pulumi.Input[str] virtual_machine_scale_set_id: Specifies the Orchestrated Virtual Machine Scale Set that this Virtual Machine should be created within. Changing this forces a new resource to be created.
        :param pulumi.Input[List[pulumi.Input[pulumi.InputType['WindowsVirtualMachineWinrmListenerArgs']]]] winrm_listeners: One or more `winrm_listener` blocks as defined below.
        :param pulumi.Input[str] zone: The Zone in which this Virtual Machine should be created. Changing this forces a new resource to be created.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['additional_capabilities'] = additional_capabilities
            __props__['additional_unattend_contents'] = additional_unattend_contents
            if admin_password is None:
                raise TypeError("Missing required property 'admin_password'")
            __props__['admin_password'] = admin_password
            if admin_username is None:
                raise TypeError("Missing required property 'admin_username'")
            __props__['admin_username'] = admin_username
            __props__['allow_extension_operations'] = allow_extension_operations
            __props__['availability_set_id'] = availability_set_id
            __props__['boot_diagnostics'] = boot_diagnostics
            __props__['computer_name'] = computer_name
            __props__['custom_data'] = custom_data
            __props__['dedicated_host_id'] = dedicated_host_id
            __props__['enable_automatic_updates'] = enable_automatic_updates
            __props__['eviction_policy'] = eviction_policy
            __props__['identity'] = identity
            __props__['license_type'] = license_type
            __props__['location'] = location
            __props__['max_bid_price'] = max_bid_price
            __props__['name'] = name
            if network_interface_ids is None:
                raise TypeError("Missing required property 'network_interface_ids'")
            __props__['network_interface_ids'] = network_interface_ids
            if os_disk is None:
                raise TypeError("Missing required property 'os_disk'")
            __props__['os_disk'] = os_disk
            __props__['plan'] = plan
            __props__['priority'] = priority
            __props__['provision_vm_agent'] = provision_vm_agent
            __props__['proximity_placement_group_id'] = proximity_placement_group_id
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            __props__['secrets'] = secrets
            if size is None:
                raise TypeError("Missing required property 'size'")
            __props__['size'] = size
            __props__['source_image_id'] = source_image_id
            __props__['source_image_reference'] = source_image_reference
            __props__['tags'] = tags
            __props__['timezone'] = timezone
            __props__['virtual_machine_scale_set_id'] = virtual_machine_scale_set_id
            __props__['winrm_listeners'] = winrm_listeners
            __props__['zone'] = zone
            __props__['private_ip_address'] = None
            __props__['private_ip_addresses'] = None
            __props__['public_ip_address'] = None
            __props__['public_ip_addresses'] = None
            __props__['virtual_machine_id'] = None
        super(WindowsVirtualMachine, __self__).__init__(
            'azure:compute/windowsVirtualMachine:WindowsVirtualMachine',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: str,
            opts: Optional[pulumi.ResourceOptions] = None,
            additional_capabilities: Optional[pulumi.Input[pulumi.InputType['WindowsVirtualMachineAdditionalCapabilitiesArgs']]] = None,
            additional_unattend_contents: Optional[pulumi.Input[List[pulumi.Input[pulumi.InputType['WindowsVirtualMachineAdditionalUnattendContentArgs']]]]] = None,
            admin_password: Optional[pulumi.Input[str]] = None,
            admin_username: Optional[pulumi.Input[str]] = None,
            allow_extension_operations: Optional[pulumi.Input[bool]] = None,
            availability_set_id: Optional[pulumi.Input[str]] = None,
            boot_diagnostics: Optional[pulumi.Input[pulumi.InputType['WindowsVirtualMachineBootDiagnosticsArgs']]] = None,
            computer_name: Optional[pulumi.Input[str]] = None,
            custom_data: Optional[pulumi.Input[str]] = None,
            dedicated_host_id: Optional[pulumi.Input[str]] = None,
            enable_automatic_updates: Optional[pulumi.Input[bool]] = None,
            eviction_policy: Optional[pulumi.Input[str]] = None,
            identity: Optional[pulumi.Input[pulumi.InputType['WindowsVirtualMachineIdentityArgs']]] = None,
            license_type: Optional[pulumi.Input[str]] = None,
            location: Optional[pulumi.Input[str]] = None,
            max_bid_price: Optional[pulumi.Input[float]] = None,
            name: Optional[pulumi.Input[str]] = None,
            network_interface_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None,
            os_disk: Optional[pulumi.Input[pulumi.InputType['WindowsVirtualMachineOsDiskArgs']]] = None,
            plan: Optional[pulumi.Input[pulumi.InputType['WindowsVirtualMachinePlanArgs']]] = None,
            priority: Optional[pulumi.Input[str]] = None,
            private_ip_address: Optional[pulumi.Input[str]] = None,
            private_ip_addresses: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None,
            provision_vm_agent: Optional[pulumi.Input[bool]] = None,
            proximity_placement_group_id: Optional[pulumi.Input[str]] = None,
            public_ip_address: Optional[pulumi.Input[str]] = None,
            public_ip_addresses: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None,
            resource_group_name: Optional[pulumi.Input[str]] = None,
            secrets: Optional[pulumi.Input[List[pulumi.Input[pulumi.InputType['WindowsVirtualMachineSecretArgs']]]]] = None,
            size: Optional[pulumi.Input[str]] = None,
            source_image_id: Optional[pulumi.Input[str]] = None,
            source_image_reference: Optional[pulumi.Input[pulumi.InputType['WindowsVirtualMachineSourceImageReferenceArgs']]] = None,
            tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
            timezone: Optional[pulumi.Input[str]] = None,
            virtual_machine_id: Optional[pulumi.Input[str]] = None,
            virtual_machine_scale_set_id: Optional[pulumi.Input[str]] = None,
            winrm_listeners: Optional[pulumi.Input[List[pulumi.Input[pulumi.InputType['WindowsVirtualMachineWinrmListenerArgs']]]]] = None,
            zone: Optional[pulumi.Input[str]] = None) -> 'WindowsVirtualMachine':
        """
        Get an existing WindowsVirtualMachine resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[pulumi.InputType['WindowsVirtualMachineAdditionalCapabilitiesArgs']] additional_capabilities: A `additional_capabilities` block as defined below.
        :param pulumi.Input[List[pulumi.Input[pulumi.InputType['WindowsVirtualMachineAdditionalUnattendContentArgs']]]] additional_unattend_contents: One or more `additional_unattend_content` blocks as defined below. Changing this forces a new resource to be created.
        :param pulumi.Input[str] admin_password: The Password which should be used for the local-administrator on this Virtual Machine. Changing this forces a new resource to be created.
        :param pulumi.Input[str] admin_username: The username of the local administrator used for the Virtual Machine. Changing this forces a new resource to be created.
        :param pulumi.Input[bool] allow_extension_operations: Should Extension Operations be allowed on this Virtual Machine?
        :param pulumi.Input[str] availability_set_id: Specifies the ID of the Availability Set in which the Virtual Machine should exist. Changing this forces a new resource to be created.
        :param pulumi.Input[pulumi.InputType['WindowsVirtualMachineBootDiagnosticsArgs']] boot_diagnostics: A `boot_diagnostics` block as defined below.
        :param pulumi.Input[str] computer_name: Specifies the Hostname which should be used for this Virtual Machine. If unspecified this defaults to the value for the `name` field. If the value of the `name` field is not a valid `computer_name`, then you must specify `computer_name`. Changing this forces a new resource to be created.
        :param pulumi.Input[str] custom_data: The Base64-Encoded Custom Data which should be used for this Virtual Machine. Changing this forces a new resource to be created.
        :param pulumi.Input[str] dedicated_host_id: The ID of a Dedicated Host where this machine should be run on. Changing this forces a new resource to be created.
        :param pulumi.Input[bool] enable_automatic_updates: Specifies if Automatic Updates are Enabled for the Windows Virtual Machine. Changing this forces a new resource to be created.
        :param pulumi.Input[str] eviction_policy: Specifies what should happen when the Virtual Machine is evicted for price reasons when using a Spot instance. At this time the only supported value is `Deallocate`. Changing this forces a new resource to be created.
        :param pulumi.Input[pulumi.InputType['WindowsVirtualMachineIdentityArgs']] identity: An `identity` block as defined below.
        :param pulumi.Input[str] license_type: Specifies the type of on-premise license (also known as [Azure Hybrid Use Benefit](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-hybrid-use-benefit-licensing)) which should be used for this Virtual Machine. Possible values are `None`, `Windows_Client` and `Windows_Server`. Changing this forces a new resource to be created.
        :param pulumi.Input[str] location: The Azure location where the Windows Virtual Machine should exist. Changing this forces a new resource to be created.
        :param pulumi.Input[float] max_bid_price: The maximum price you're willing to pay for this Virtual Machine, in US Dollars; which must be greater than the current spot price. If this bid price falls below the current spot price the Virtual Machine will be evicted using the `eviction_policy`. Defaults to `-1`, which means that the Virtual Machine should not be evicted for price reasons.
        :param pulumi.Input[str] name: The name of the Windows Virtual Machine. Changing this forces a new resource to be created.
        :param pulumi.Input[List[pulumi.Input[str]]] network_interface_ids: . A list of Network Interface ID's which should be attached to this Virtual Machine. The first Network Interface ID in this list will be the Primary Network Interface on the Virtual Machine.
        :param pulumi.Input[pulumi.InputType['WindowsVirtualMachineOsDiskArgs']] os_disk: A `os_disk` block as defined below.
        :param pulumi.Input[pulumi.InputType['WindowsVirtualMachinePlanArgs']] plan: A `plan` block as defined below. Changing this forces a new resource to be created.
        :param pulumi.Input[str] priority: Specifies the priority of this Virtual Machine. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this forces a new resource to be created.
        :param pulumi.Input[str] private_ip_address: The Primary Private IP Address assigned to this Virtual Machine.
        :param pulumi.Input[List[pulumi.Input[str]]] private_ip_addresses: A list of Private IP Addresses assigned to this Virtual Machine.
        :param pulumi.Input[bool] provision_vm_agent: Should the Azure VM Agent be provisioned on this Virtual Machine? Defaults to `true`. Changing this forces a new resource to be created.
        :param pulumi.Input[str] proximity_placement_group_id: The ID of the Proximity Placement Group which the Virtual Machine should be assigned to. Changing this forces a new resource to be created.
        :param pulumi.Input[str] public_ip_address: The Primary Public IP Address assigned to this Virtual Machine.
        :param pulumi.Input[List[pulumi.Input[str]]] public_ip_addresses: A list of the Public IP Addresses assigned to this Virtual Machine.
        :param pulumi.Input[str] resource_group_name: The name of the Resource Group in which the Windows Virtual Machine should be exist. Changing this forces a new resource to be created.
        :param pulumi.Input[List[pulumi.Input[pulumi.InputType['WindowsVirtualMachineSecretArgs']]]] secrets: One or more `secret` blocks as defined below.
        :param pulumi.Input[str] size: The SKU which should be used for this Virtual Machine, such as `Standard_F2`.
        :param pulumi.Input[str] source_image_id: The ID of the Image which this Virtual Machine should be created from. Changing this forces a new resource to be created.
        :param pulumi.Input[pulumi.InputType['WindowsVirtualMachineSourceImageReferenceArgs']] source_image_reference: A `source_image_reference` block as defined below. Changing this forces a new resource to be created.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] tags: A mapping of tags which should be assigned to this Virtual Machine.
        :param pulumi.Input[str] timezone: Specifies the Time Zone which should be used by the Virtual Machine, [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).
        :param pulumi.Input[str] virtual_machine_id: A 128-bit identifier which uniquely identifies this Virtual Machine.
        :param pulumi.Input[str] virtual_machine_scale_set_id: Specifies the Orchestrated Virtual Machine Scale Set that this Virtual Machine should be created within. Changing this forces a new resource to be created.
        :param pulumi.Input[List[pulumi.Input[pulumi.InputType['WindowsVirtualMachineWinrmListenerArgs']]]] winrm_listeners: One or more `winrm_listener` blocks as defined below.
        :param pulumi.Input[str] zone: The Zone in which this Virtual Machine should be created. Changing this forces a new resource to be created.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["additional_capabilities"] = additional_capabilities
        __props__["additional_unattend_contents"] = additional_unattend_contents
        __props__["admin_password"] = admin_password
        __props__["admin_username"] = admin_username
        __props__["allow_extension_operations"] = allow_extension_operations
        __props__["availability_set_id"] = availability_set_id
        __props__["boot_diagnostics"] = boot_diagnostics
        __props__["computer_name"] = computer_name
        __props__["custom_data"] = custom_data
        __props__["dedicated_host_id"] = dedicated_host_id
        __props__["enable_automatic_updates"] = enable_automatic_updates
        __props__["eviction_policy"] = eviction_policy
        __props__["identity"] = identity
        __props__["license_type"] = license_type
        __props__["location"] = location
        __props__["max_bid_price"] = max_bid_price
        __props__["name"] = name
        __props__["network_interface_ids"] = network_interface_ids
        __props__["os_disk"] = os_disk
        __props__["plan"] = plan
        __props__["priority"] = priority
        __props__["private_ip_address"] = private_ip_address
        __props__["private_ip_addresses"] = private_ip_addresses
        __props__["provision_vm_agent"] = provision_vm_agent
        __props__["proximity_placement_group_id"] = proximity_placement_group_id
        __props__["public_ip_address"] = public_ip_address
        __props__["public_ip_addresses"] = public_ip_addresses
        __props__["resource_group_name"] = resource_group_name
        __props__["secrets"] = secrets
        __props__["size"] = size
        __props__["source_image_id"] = source_image_id
        __props__["source_image_reference"] = source_image_reference
        __props__["tags"] = tags
        __props__["timezone"] = timezone
        __props__["virtual_machine_id"] = virtual_machine_id
        __props__["virtual_machine_scale_set_id"] = virtual_machine_scale_set_id
        __props__["winrm_listeners"] = winrm_listeners
        __props__["zone"] = zone
        return WindowsVirtualMachine(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

