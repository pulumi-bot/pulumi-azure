# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Mapping, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'ChannelDirectLineSiteArgs',
]

@pulumi.input_type
class ChannelDirectLineSiteArgs:
    def __init__(__self__, *,
                 name: pulumi.Input[str],
                 enabled: Optional[pulumi.Input[bool]] = None,
                 enhanced_authentication_enabled: Optional[pulumi.Input[bool]] = None,
                 id: Optional[pulumi.Input[str]] = None,
                 key: Optional[pulumi.Input[str]] = None,
                 key2: Optional[pulumi.Input[str]] = None,
                 trusted_origins: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None,
                 v1_allowed: Optional[pulumi.Input[bool]] = None,
                 v3_allowed: Optional[pulumi.Input[bool]] = None):
        pulumi.set(__self__, "name", name)
        if enabled is not None:
            pulumi.set(__self__, "enabled", enabled)
        if enhanced_authentication_enabled is not None:
            pulumi.set(__self__, "enhanced_authentication_enabled", enhanced_authentication_enabled)
        if id is not None:
            pulumi.set(__self__, "id", id)
        if key is not None:
            pulumi.set(__self__, "key", key)
        if key2 is not None:
            pulumi.set(__self__, "key2", key2)
        if trusted_origins is not None:
            pulumi.set(__self__, "trusted_origins", trusted_origins)
        if v1_allowed is not None:
            pulumi.set(__self__, "v1_allowed", v1_allowed)
        if v3_allowed is not None:
            pulumi.set(__self__, "v3_allowed", v3_allowed)

    @property
    @pulumi.getter
    def name(self) -> pulumi.Input[str]:
        ...

    @name.setter
    def name(self, value: pulumi.Input[str]):
        ...

    @property
    @pulumi.getter
    def enabled(self) -> Optional[pulumi.Input[bool]]:
        ...

    @enabled.setter
    def enabled(self, value: Optional[pulumi.Input[bool]]):
        ...

    @property
    @pulumi.getter(name="enhancedAuthenticationEnabled")
    def enhanced_authentication_enabled(self) -> Optional[pulumi.Input[bool]]:
        ...

    @enhanced_authentication_enabled.setter
    def enhanced_authentication_enabled(self, value: Optional[pulumi.Input[bool]]):
        ...

    @property
    @pulumi.getter
    def id(self) -> Optional[pulumi.Input[str]]:
        ...

    @id.setter
    def id(self, value: Optional[pulumi.Input[str]]):
        ...

    @property
    @pulumi.getter
    def key(self) -> Optional[pulumi.Input[str]]:
        ...

    @key.setter
    def key(self, value: Optional[pulumi.Input[str]]):
        ...

    @property
    @pulumi.getter
    def key2(self) -> Optional[pulumi.Input[str]]:
        ...

    @key2.setter
    def key2(self, value: Optional[pulumi.Input[str]]):
        ...

    @property
    @pulumi.getter(name="trustedOrigins")
    def trusted_origins(self) -> Optional[pulumi.Input[List[pulumi.Input[str]]]]:
        ...

    @trusted_origins.setter
    def trusted_origins(self, value: Optional[pulumi.Input[List[pulumi.Input[str]]]]):
        ...

    @property
    @pulumi.getter(name="v1Allowed")
    def v1_allowed(self) -> Optional[pulumi.Input[bool]]:
        ...

    @v1_allowed.setter
    def v1_allowed(self, value: Optional[pulumi.Input[bool]]):
        ...

    @property
    @pulumi.getter(name="v3Allowed")
    def v3_allowed(self) -> Optional[pulumi.Input[bool]]:
        ...

    @v3_allowed.setter
    def v3_allowed(self, value: Optional[pulumi.Input[bool]]):
        ...


