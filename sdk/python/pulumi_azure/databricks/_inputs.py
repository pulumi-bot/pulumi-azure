# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Mapping, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'WorkspaceCustomParametersArgs',
]

@pulumi.input_type
class WorkspaceCustomParametersArgs:
    def __init__(__self__, *,
                 no_public_ip: Optional[pulumi.Input[bool]] = None,
                 private_subnet_name: Optional[pulumi.Input[str]] = None,
                 public_subnet_name: Optional[pulumi.Input[str]] = None,
                 virtual_network_id: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[bool] no_public_ip: Are public IP Addresses not allowed?
        :param pulumi.Input[str] private_subnet_name: The name of the Private Subnet within the Virtual Network. Required if `virtual_network_id` is set.
        :param pulumi.Input[str] public_subnet_name: The name of the Public Subnet within the Virtual Network. Required if `virtual_network_id` is set.
        :param pulumi.Input[str] virtual_network_id: The ID of a Virtual Network where this Databricks Cluster should be created.
        """
        pulumi.set(__self__, "noPublicIp", no_public_ip)
        pulumi.set(__self__, "privateSubnetName", private_subnet_name)
        pulumi.set(__self__, "publicSubnetName", public_subnet_name)
        pulumi.set(__self__, "virtualNetworkId", virtual_network_id)

    @property
    @pulumi.getter(name="noPublicIp")
    def no_public_ip(self) -> Optional[pulumi.Input[bool]]:
        """
        Are public IP Addresses not allowed?
        """
        ...

    @no_public_ip.setter
    def no_public_ip(self, value: Optional[pulumi.Input[bool]]):
        ...

    @property
    @pulumi.getter(name="privateSubnetName")
    def private_subnet_name(self) -> Optional[pulumi.Input[str]]:
        """
        The name of the Private Subnet within the Virtual Network. Required if `virtual_network_id` is set.
        """
        ...

    @private_subnet_name.setter
    def private_subnet_name(self, value: Optional[pulumi.Input[str]]):
        ...

    @property
    @pulumi.getter(name="publicSubnetName")
    def public_subnet_name(self) -> Optional[pulumi.Input[str]]:
        """
        The name of the Public Subnet within the Virtual Network. Required if `virtual_network_id` is set.
        """
        ...

    @public_subnet_name.setter
    def public_subnet_name(self, value: Optional[pulumi.Input[str]]):
        ...

    @property
    @pulumi.getter(name="virtualNetworkId")
    def virtual_network_id(self) -> Optional[pulumi.Input[str]]:
        """
        The ID of a Virtual Network where this Databricks Cluster should be created.
        """
        ...

    @virtual_network_id.setter
    def virtual_network_id(self, value: Optional[pulumi.Input[str]]):
        ...


