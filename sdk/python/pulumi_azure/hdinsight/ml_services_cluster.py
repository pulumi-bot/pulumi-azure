# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables
from . import outputs
from ._inputs import *


class MLServicesCluster(pulumi.CustomResource):
    cluster_version: pulumi.Output[str] = pulumi.output_property("clusterVersion")
    """
    Specifies the Version of HDInsights which should be used for this Cluster. Changing this forces a new resource to be created.
    """
    edge_ssh_endpoint: pulumi.Output[str] = pulumi.output_property("edgeSshEndpoint")
    """
    The SSH Connectivity Endpoint for the Edge Node of the HDInsight ML Cluster.
    """
    gateway: pulumi.Output['outputs.MLServicesClusterGateway'] = pulumi.output_property("gateway")
    """
    A `gateway` block as defined below.
    """
    https_endpoint: pulumi.Output[str] = pulumi.output_property("httpsEndpoint")
    """
    The HTTPS Connectivity Endpoint for this HDInsight ML Services Cluster.
    """
    location: pulumi.Output[str] = pulumi.output_property("location")
    """
    Specifies the Azure Region which this HDInsight ML Services Cluster should exist. Changing this forces a new resource to be created.
    """
    name: pulumi.Output[str] = pulumi.output_property("name")
    """
    Specifies the name for this HDInsight ML Services Cluster. Changing this forces a new resource to be created.
    """
    resource_group_name: pulumi.Output[str] = pulumi.output_property("resourceGroupName")
    """
    Specifies the name of the Resource Group in which this HDInsight ML Services Cluster should exist. Changing this forces a new resource to be created.
    """
    roles: pulumi.Output['outputs.MLServicesClusterRoles'] = pulumi.output_property("roles")
    """
    A `roles` block as defined below.
    """
    rstudio: pulumi.Output[bool] = pulumi.output_property("rstudio")
    """
    Should R Studio community edition for ML Services be installed? Changing this forces a new resource to be created.
    """
    ssh_endpoint: pulumi.Output[str] = pulumi.output_property("sshEndpoint")
    """
    The SSH Connectivity Endpoint for this HDInsight ML Services Cluster.
    """
    storage_accounts: pulumi.Output[Optional[List['outputs.MLServicesClusterStorageAccount']]] = pulumi.output_property("storageAccounts")
    """
    One or more `storage_account` block as defined below.
    """
    tags: pulumi.Output[Optional[Dict[str, str]]] = pulumi.output_property("tags")
    """
    A map of Tags which should be assigned to this HDInsight ML Services Cluster.
    """
    tier: pulumi.Output[str] = pulumi.output_property("tier")
    """
    Specifies the Tier which should be used for this HDInsight ML Services Cluster. Possible values are `Standard` or `Premium`. Changing this forces a new resource to be created.
    """
    tls_min_version: pulumi.Output[Optional[str]] = pulumi.output_property("tlsMinVersion")
    # pylint: disable=no-self-argument
    def __init__(__self__, resource_name, opts: Optional[pulumi.ResourceOptions] = None, cluster_version=None, gateway=None, location=None, name=None, resource_group_name=None, roles=None, rstudio=None, storage_accounts=None, tags=None, tier=None, tls_min_version=None, __props__=None, __name__=None, __opts__=None) -> None:
        """
        Manages a HDInsight ML Services Cluster.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_azure as azure

        example_resource_group = azure.core.ResourceGroup("exampleResourceGroup", location="West Europe")
        example_account = azure.storage.Account("exampleAccount",
            resource_group_name=example_resource_group.name,
            location=example_resource_group.location,
            account_tier="Standard",
            account_replication_type="LRS")
        example_container = azure.storage.Container("exampleContainer",
            storage_account_name=example_account.name,
            container_access_type="private")
        example_ml_services_cluster = azure.hdinsight.MLServicesCluster("exampleMLServicesCluster",
            resource_group_name=example_resource_group.name,
            location=example_resource_group.location,
            cluster_version="3.6",
            tier="Standard",
            rstudio=True,
            gateway={
                "enabled": True,
                "username": "acctestusrgw",
                "password": "Password123!",
            },
            storage_accounts=[{
                "storage_container_id": example_container.id,
                "storage_account_key": example_account.primary_access_key,
                "isDefault": True,
            }],
            roles={
                "headNode": {
                    "vm_size": "Standard_D3_v2",
                    "username": "acctestusrvm",
                    "password": "AccTestvdSC4daf986!",
                },
                "workerNode": {
                    "vm_size": "Standard_D4_V2",
                    "username": "acctestusrvm",
                    "password": "AccTestvdSC4daf986!",
                    "targetInstanceCount": 3,
                },
                "zookeeperNode": {
                    "vm_size": "Standard_D3_v2",
                    "username": "acctestusrvm",
                    "password": "AccTestvdSC4daf986!",
                },
                "edgeNode": {
                    "vm_size": "Standard_D3_v2",
                    "username": "acctestusrvm",
                    "password": "AccTestvdSC4daf986!",
                },
            })
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] cluster_version: Specifies the Version of HDInsights which should be used for this Cluster. Changing this forces a new resource to be created.
        :param pulumi.Input['MLServicesClusterGatewayArgs'] gateway: A `gateway` block as defined below.
        :param pulumi.Input[str] location: Specifies the Azure Region which this HDInsight ML Services Cluster should exist. Changing this forces a new resource to be created.
        :param pulumi.Input[str] name: Specifies the name for this HDInsight ML Services Cluster. Changing this forces a new resource to be created.
        :param pulumi.Input[str] resource_group_name: Specifies the name of the Resource Group in which this HDInsight ML Services Cluster should exist. Changing this forces a new resource to be created.
        :param pulumi.Input['MLServicesClusterRolesArgs'] roles: A `roles` block as defined below.
        :param pulumi.Input[bool] rstudio: Should R Studio community edition for ML Services be installed? Changing this forces a new resource to be created.
        :param pulumi.Input[List[pulumi.Input['MLServicesClusterStorageAccountArgs']]] storage_accounts: One or more `storage_account` block as defined below.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] tags: A map of Tags which should be assigned to this HDInsight ML Services Cluster.
        :param pulumi.Input[str] tier: Specifies the Tier which should be used for this HDInsight ML Services Cluster. Possible values are `Standard` or `Premium`. Changing this forces a new resource to be created.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            if cluster_version is None:
                raise TypeError("Missing required property 'cluster_version'")
            __props__['cluster_version'] = cluster_version
            if gateway is None:
                raise TypeError("Missing required property 'gateway'")
            __props__['gateway'] = gateway
            __props__['location'] = location
            __props__['name'] = name
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            if roles is None:
                raise TypeError("Missing required property 'roles'")
            __props__['roles'] = roles
            if rstudio is None:
                raise TypeError("Missing required property 'rstudio'")
            __props__['rstudio'] = rstudio
            __props__['storage_accounts'] = storage_accounts
            __props__['tags'] = tags
            if tier is None:
                raise TypeError("Missing required property 'tier'")
            __props__['tier'] = tier
            __props__['tls_min_version'] = tls_min_version
            __props__['edge_ssh_endpoint'] = None
            __props__['https_endpoint'] = None
            __props__['ssh_endpoint'] = None
        super(MLServicesCluster, __self__).__init__(
            'azure:hdinsight/mLServicesCluster:MLServicesCluster',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, cluster_version=None, edge_ssh_endpoint=None, gateway=None, https_endpoint=None, location=None, name=None, resource_group_name=None, roles=None, rstudio=None, ssh_endpoint=None, storage_accounts=None, tags=None, tier=None, tls_min_version=None):
        """
        Get an existing MLServicesCluster resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] cluster_version: Specifies the Version of HDInsights which should be used for this Cluster. Changing this forces a new resource to be created.
        :param pulumi.Input[str] edge_ssh_endpoint: The SSH Connectivity Endpoint for the Edge Node of the HDInsight ML Cluster.
        :param pulumi.Input['MLServicesClusterGatewayArgs'] gateway: A `gateway` block as defined below.
        :param pulumi.Input[str] https_endpoint: The HTTPS Connectivity Endpoint for this HDInsight ML Services Cluster.
        :param pulumi.Input[str] location: Specifies the Azure Region which this HDInsight ML Services Cluster should exist. Changing this forces a new resource to be created.
        :param pulumi.Input[str] name: Specifies the name for this HDInsight ML Services Cluster. Changing this forces a new resource to be created.
        :param pulumi.Input[str] resource_group_name: Specifies the name of the Resource Group in which this HDInsight ML Services Cluster should exist. Changing this forces a new resource to be created.
        :param pulumi.Input['MLServicesClusterRolesArgs'] roles: A `roles` block as defined below.
        :param pulumi.Input[bool] rstudio: Should R Studio community edition for ML Services be installed? Changing this forces a new resource to be created.
        :param pulumi.Input[str] ssh_endpoint: The SSH Connectivity Endpoint for this HDInsight ML Services Cluster.
        :param pulumi.Input[List[pulumi.Input['MLServicesClusterStorageAccountArgs']]] storage_accounts: One or more `storage_account` block as defined below.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] tags: A map of Tags which should be assigned to this HDInsight ML Services Cluster.
        :param pulumi.Input[str] tier: Specifies the Tier which should be used for this HDInsight ML Services Cluster. Possible values are `Standard` or `Premium`. Changing this forces a new resource to be created.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["cluster_version"] = cluster_version
        __props__["edge_ssh_endpoint"] = edge_ssh_endpoint
        __props__["gateway"] = gateway
        __props__["https_endpoint"] = https_endpoint
        __props__["location"] = location
        __props__["name"] = name
        __props__["resource_group_name"] = resource_group_name
        __props__["roles"] = roles
        __props__["rstudio"] = rstudio
        __props__["ssh_endpoint"] = ssh_endpoint
        __props__["storage_accounts"] = storage_accounts
        __props__["tags"] = tags
        __props__["tier"] = tier
        __props__["tls_min_version"] = tls_min_version
        return MLServicesCluster(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

