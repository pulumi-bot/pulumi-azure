# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables
from . import outputs
from ._inputs import *


class DatasetDelimitedText(pulumi.CustomResource):
    additional_properties: pulumi.Output[Optional[Dict[str, str]]] = pulumi.output_property("additionalProperties")
    """
    A map of additional properties to associate with the Data Factory Dataset.
    """
    annotations: pulumi.Output[Optional[List[str]]] = pulumi.output_property("annotations")
    """
    List of tags that can be used for describing the Data Factory Dataset.
    """
    azure_blob_storage_location: pulumi.Output[Optional['outputs.DatasetDelimitedTextAzureBlobStorageLocation']] = pulumi.output_property("azureBlobStorageLocation")
    """
    A `azure_blob_storage_location` block as defined below.
    """
    column_delimiter: pulumi.Output[Optional[str]] = pulumi.output_property("columnDelimiter")
    """
    The column delimiter.
    """
    data_factory_name: pulumi.Output[str] = pulumi.output_property("dataFactoryName")
    """
    The Data Factory name in which to associate the Dataset with. Changing this forces a new resource.
    """
    description: pulumi.Output[Optional[str]] = pulumi.output_property("description")
    """
    The description for the Data Factory Dataset.
    """
    encoding: pulumi.Output[Optional[str]] = pulumi.output_property("encoding")
    """
    The encoding format for the file.
    """
    escape_character: pulumi.Output[Optional[str]] = pulumi.output_property("escapeCharacter")
    """
    The escape character.
    """
    first_row_as_header: pulumi.Output[Optional[bool]] = pulumi.output_property("firstRowAsHeader")
    """
    When used as input, treat the first row of data as headers. When used as output, write the headers into the output as the first row of data.
    """
    folder: pulumi.Output[Optional[str]] = pulumi.output_property("folder")
    """
    The folder that this Dataset is in. If not specified, the Dataset will appear at the root level.
    """
    http_server_location: pulumi.Output[Optional['outputs.DatasetDelimitedTextHttpServerLocation']] = pulumi.output_property("httpServerLocation")
    """
    A `http_server_location` block as defined below.
    """
    linked_service_name: pulumi.Output[str] = pulumi.output_property("linkedServiceName")
    """
    The Data Factory Linked Service name in which to associate the Dataset with.
    """
    name: pulumi.Output[str] = pulumi.output_property("name")
    """
    Specifies the name of the Data Factory Dataset. Changing this forces a new resource to be created. Must be globally unique. See the [Microsoft documentation](https://docs.microsoft.com/en-us/azure/data-factory/naming-rules) for all restrictions.
    """
    null_value: pulumi.Output[Optional[str]] = pulumi.output_property("nullValue")
    """
    The null value string.
    """
    parameters: pulumi.Output[Optional[Dict[str, str]]] = pulumi.output_property("parameters")
    """
    A map of parameters to associate with the Data Factory Dataset.
    """
    quote_character: pulumi.Output[Optional[str]] = pulumi.output_property("quoteCharacter")
    """
    The quote character.
    """
    resource_group_name: pulumi.Output[str] = pulumi.output_property("resourceGroupName")
    """
    The name of the resource group in which to create the Data Factory Dataset. Changing this forces a new resource
    """
    row_delimiter: pulumi.Output[Optional[str]] = pulumi.output_property("rowDelimiter")
    """
    The row delimiter.
    """
    schema_columns: pulumi.Output[Optional[List['outputs.DatasetDelimitedTextSchemaColumn']]] = pulumi.output_property("schemaColumns")
    """
    A `schema_column` block as defined below.
    """
    # pylint: disable=no-self-argument
    def __init__(__self__, resource_name, opts: Optional[pulumi.ResourceOptions] = None, additional_properties=None, annotations=None, azure_blob_storage_location=None, column_delimiter=None, data_factory_name=None, description=None, encoding=None, escape_character=None, first_row_as_header=None, folder=None, http_server_location=None, linked_service_name=None, name=None, null_value=None, parameters=None, quote_character=None, resource_group_name=None, row_delimiter=None, schema_columns=None, __props__=None, __name__=None, __opts__=None) -> None:
        """
        Manages an Azure Delimited Text Dataset inside an Azure Data Factory.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_azure as azure

        example_resource_group = azure.core.ResourceGroup("exampleResourceGroup", location="northeurope")
        example_factory = azure.datafactory.Factory("exampleFactory",
            location=example_resource_group.location,
            resource_group_name=example_resource_group.name)
        example_linked_service_web = azure.datafactory.LinkedServiceWeb("exampleLinkedServiceWeb",
            resource_group_name=example_resource_group.name,
            data_factory_name=example_factory.name,
            authentication_type="Anonymous",
            url="https://www.bing.com")
        example_dataset_delimited_text = azure.datafactory.DatasetDelimitedText("exampleDatasetDelimitedText",
            resource_group_name=example_resource_group.name,
            data_factory_name=example_factory.name,
            linked_service_name=example_linked_service_web.name,
            http_server_location={
                "relative_url": "http://www.bing.com",
                "path": "foo/bar/",
                "filename": "fizz.txt",
            },
            column_delimiter=",",
            row_delimiter="NEW",
            encoding="UTF-8",
            quote_character="x",
            escape_character="f",
            first_row_as_header=True,
            null_value="NULL")
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] additional_properties: A map of additional properties to associate with the Data Factory Dataset.
        :param pulumi.Input[List[pulumi.Input[str]]] annotations: List of tags that can be used for describing the Data Factory Dataset.
        :param pulumi.Input['DatasetDelimitedTextAzureBlobStorageLocationArgs'] azure_blob_storage_location: A `azure_blob_storage_location` block as defined below.
        :param pulumi.Input[str] column_delimiter: The column delimiter.
        :param pulumi.Input[str] data_factory_name: The Data Factory name in which to associate the Dataset with. Changing this forces a new resource.
        :param pulumi.Input[str] description: The description for the Data Factory Dataset.
        :param pulumi.Input[str] encoding: The encoding format for the file.
        :param pulumi.Input[str] escape_character: The escape character.
        :param pulumi.Input[bool] first_row_as_header: When used as input, treat the first row of data as headers. When used as output, write the headers into the output as the first row of data.
        :param pulumi.Input[str] folder: The folder that this Dataset is in. If not specified, the Dataset will appear at the root level.
        :param pulumi.Input['DatasetDelimitedTextHttpServerLocationArgs'] http_server_location: A `http_server_location` block as defined below.
        :param pulumi.Input[str] linked_service_name: The Data Factory Linked Service name in which to associate the Dataset with.
        :param pulumi.Input[str] name: Specifies the name of the Data Factory Dataset. Changing this forces a new resource to be created. Must be globally unique. See the [Microsoft documentation](https://docs.microsoft.com/en-us/azure/data-factory/naming-rules) for all restrictions.
        :param pulumi.Input[str] null_value: The null value string.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] parameters: A map of parameters to associate with the Data Factory Dataset.
        :param pulumi.Input[str] quote_character: The quote character.
        :param pulumi.Input[str] resource_group_name: The name of the resource group in which to create the Data Factory Dataset. Changing this forces a new resource
        :param pulumi.Input[str] row_delimiter: The row delimiter.
        :param pulumi.Input[List[pulumi.Input['DatasetDelimitedTextSchemaColumnArgs']]] schema_columns: A `schema_column` block as defined below.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['additional_properties'] = additional_properties
            __props__['annotations'] = annotations
            __props__['azure_blob_storage_location'] = azure_blob_storage_location
            __props__['column_delimiter'] = column_delimiter
            if data_factory_name is None:
                raise TypeError("Missing required property 'data_factory_name'")
            __props__['data_factory_name'] = data_factory_name
            __props__['description'] = description
            __props__['encoding'] = encoding
            __props__['escape_character'] = escape_character
            __props__['first_row_as_header'] = first_row_as_header
            __props__['folder'] = folder
            __props__['http_server_location'] = http_server_location
            if linked_service_name is None:
                raise TypeError("Missing required property 'linked_service_name'")
            __props__['linked_service_name'] = linked_service_name
            __props__['name'] = name
            __props__['null_value'] = null_value
            __props__['parameters'] = parameters
            __props__['quote_character'] = quote_character
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            __props__['row_delimiter'] = row_delimiter
            __props__['schema_columns'] = schema_columns
        super(DatasetDelimitedText, __self__).__init__(
            'azure:datafactory/datasetDelimitedText:DatasetDelimitedText',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, additional_properties=None, annotations=None, azure_blob_storage_location=None, column_delimiter=None, data_factory_name=None, description=None, encoding=None, escape_character=None, first_row_as_header=None, folder=None, http_server_location=None, linked_service_name=None, name=None, null_value=None, parameters=None, quote_character=None, resource_group_name=None, row_delimiter=None, schema_columns=None):
        """
        Get an existing DatasetDelimitedText resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] additional_properties: A map of additional properties to associate with the Data Factory Dataset.
        :param pulumi.Input[List[pulumi.Input[str]]] annotations: List of tags that can be used for describing the Data Factory Dataset.
        :param pulumi.Input['DatasetDelimitedTextAzureBlobStorageLocationArgs'] azure_blob_storage_location: A `azure_blob_storage_location` block as defined below.
        :param pulumi.Input[str] column_delimiter: The column delimiter.
        :param pulumi.Input[str] data_factory_name: The Data Factory name in which to associate the Dataset with. Changing this forces a new resource.
        :param pulumi.Input[str] description: The description for the Data Factory Dataset.
        :param pulumi.Input[str] encoding: The encoding format for the file.
        :param pulumi.Input[str] escape_character: The escape character.
        :param pulumi.Input[bool] first_row_as_header: When used as input, treat the first row of data as headers. When used as output, write the headers into the output as the first row of data.
        :param pulumi.Input[str] folder: The folder that this Dataset is in. If not specified, the Dataset will appear at the root level.
        :param pulumi.Input['DatasetDelimitedTextHttpServerLocationArgs'] http_server_location: A `http_server_location` block as defined below.
        :param pulumi.Input[str] linked_service_name: The Data Factory Linked Service name in which to associate the Dataset with.
        :param pulumi.Input[str] name: Specifies the name of the Data Factory Dataset. Changing this forces a new resource to be created. Must be globally unique. See the [Microsoft documentation](https://docs.microsoft.com/en-us/azure/data-factory/naming-rules) for all restrictions.
        :param pulumi.Input[str] null_value: The null value string.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] parameters: A map of parameters to associate with the Data Factory Dataset.
        :param pulumi.Input[str] quote_character: The quote character.
        :param pulumi.Input[str] resource_group_name: The name of the resource group in which to create the Data Factory Dataset. Changing this forces a new resource
        :param pulumi.Input[str] row_delimiter: The row delimiter.
        :param pulumi.Input[List[pulumi.Input['DatasetDelimitedTextSchemaColumnArgs']]] schema_columns: A `schema_column` block as defined below.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["additional_properties"] = additional_properties
        __props__["annotations"] = annotations
        __props__["azure_blob_storage_location"] = azure_blob_storage_location
        __props__["column_delimiter"] = column_delimiter
        __props__["data_factory_name"] = data_factory_name
        __props__["description"] = description
        __props__["encoding"] = encoding
        __props__["escape_character"] = escape_character
        __props__["first_row_as_header"] = first_row_as_header
        __props__["folder"] = folder
        __props__["http_server_location"] = http_server_location
        __props__["linked_service_name"] = linked_service_name
        __props__["name"] = name
        __props__["null_value"] = null_value
        __props__["parameters"] = parameters
        __props__["quote_character"] = quote_character
        __props__["resource_group_name"] = resource_group_name
        __props__["row_delimiter"] = row_delimiter
        __props__["schema_columns"] = schema_columns
        return DatasetDelimitedText(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

