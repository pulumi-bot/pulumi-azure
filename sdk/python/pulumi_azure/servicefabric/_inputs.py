# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

@pulumi.input_type
class ClusterAzureActiveDirectoryArgs:
    client_application_id: pulumi.Input[str] = pulumi.input_property("clientApplicationId")
    """
    The Azure Active Directory Client ID which should be used for the Client Application.
    """
    cluster_application_id: pulumi.Input[str] = pulumi.input_property("clusterApplicationId")
    """
    The Azure Active Directory Cluster Application ID.
    """
    tenant_id: pulumi.Input[str] = pulumi.input_property("tenantId")
    """
    The Azure Active Directory Tenant ID.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, client_application_id: pulumi.Input[str], cluster_application_id: pulumi.Input[str], tenant_id: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] client_application_id: The Azure Active Directory Client ID which should be used for the Client Application.
        :param pulumi.Input[str] cluster_application_id: The Azure Active Directory Cluster Application ID.
        :param pulumi.Input[str] tenant_id: The Azure Active Directory Tenant ID.
        """
        __self__.client_application_id = client_application_id
        __self__.cluster_application_id = cluster_application_id
        __self__.tenant_id = tenant_id

@pulumi.input_type
class ClusterCertificateArgs:
    thumbprint: pulumi.Input[str] = pulumi.input_property("thumbprint")
    """
    The Thumbprint of the Certificate.
    """
    x509_store_name: pulumi.Input[str] = pulumi.input_property("x509StoreName")
    """
    The X509 Store where the Certificate Exists, such as `My`.
    """
    thumbprint_secondary: Optional[pulumi.Input[str]] = pulumi.input_property("thumbprintSecondary")
    """
    The Secondary Thumbprint of the Certificate.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, thumbprint: pulumi.Input[str], x509_store_name: pulumi.Input[str], thumbprint_secondary: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] thumbprint: The Thumbprint of the Certificate.
        :param pulumi.Input[str] x509_store_name: The X509 Store where the Certificate Exists, such as `My`.
        :param pulumi.Input[str] thumbprint_secondary: The Secondary Thumbprint of the Certificate.
        """
        __self__.thumbprint = thumbprint
        __self__.x509_store_name = x509_store_name
        __self__.thumbprint_secondary = thumbprint_secondary

@pulumi.input_type
class ClusterCertificateCommonNamesArgs:
    common_names: pulumi.Input[List[pulumi.Input['ClusterCertificateCommonNamesCommonNameArgs']]] = pulumi.input_property("commonNames")
    """
    A `common_names` block as defined below.
    """
    x509_store_name: pulumi.Input[str] = pulumi.input_property("x509StoreName")
    """
    The X509 Store where the Certificate Exists, such as `My`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, common_names: pulumi.Input[List[pulumi.Input['ClusterCertificateCommonNamesCommonNameArgs']]], x509_store_name: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[List[pulumi.Input['ClusterCertificateCommonNamesCommonNameArgs']]] common_names: A `common_names` block as defined below.
        :param pulumi.Input[str] x509_store_name: The X509 Store where the Certificate Exists, such as `My`.
        """
        __self__.common_names = common_names
        __self__.x509_store_name = x509_store_name

@pulumi.input_type
class ClusterCertificateCommonNamesCommonNameArgs:
    certificate_common_name: pulumi.Input[str] = pulumi.input_property("certificateCommonName")
    """
    The common or subject name of the certificate.
    """
    certificate_issuer_thumbprint: Optional[pulumi.Input[str]] = pulumi.input_property("certificateIssuerThumbprint")
    """
    The Issuer Thumbprint of the Certificate.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, certificate_common_name: pulumi.Input[str], certificate_issuer_thumbprint: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] certificate_common_name: The common or subject name of the certificate.
        :param pulumi.Input[str] certificate_issuer_thumbprint: The Issuer Thumbprint of the Certificate.
        """
        __self__.certificate_common_name = certificate_common_name
        __self__.certificate_issuer_thumbprint = certificate_issuer_thumbprint

@pulumi.input_type
class ClusterClientCertificateCommonNameArgs:
    common_name: pulumi.Input[str] = pulumi.input_property("commonName")
    is_admin: pulumi.Input[bool] = pulumi.input_property("isAdmin")
    """
    Does the Client Certificate have Admin Access to the cluster? Non-admin clients can only perform read only operations on the cluster.
    """
    issuer_thumbprint: Optional[pulumi.Input[str]] = pulumi.input_property("issuerThumbprint")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, common_name: pulumi.Input[str], is_admin: pulumi.Input[bool], issuer_thumbprint: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[bool] is_admin: Does the Client Certificate have Admin Access to the cluster? Non-admin clients can only perform read only operations on the cluster.
        """
        __self__.common_name = common_name
        __self__.is_admin = is_admin
        __self__.issuer_thumbprint = issuer_thumbprint

@pulumi.input_type
class ClusterClientCertificateThumbprintArgs:
    is_admin: pulumi.Input[bool] = pulumi.input_property("isAdmin")
    """
    Does the Client Certificate have Admin Access to the cluster? Non-admin clients can only perform read only operations on the cluster.
    """
    thumbprint: pulumi.Input[str] = pulumi.input_property("thumbprint")
    """
    The Thumbprint associated with the Client Certificate.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, is_admin: pulumi.Input[bool], thumbprint: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[bool] is_admin: Does the Client Certificate have Admin Access to the cluster? Non-admin clients can only perform read only operations on the cluster.
        :param pulumi.Input[str] thumbprint: The Thumbprint associated with the Client Certificate.
        """
        __self__.is_admin = is_admin
        __self__.thumbprint = thumbprint

@pulumi.input_type
class ClusterDiagnosticsConfigArgs:
    blob_endpoint: pulumi.Input[str] = pulumi.input_property("blobEndpoint")
    """
    The Blob Endpoint of the Storage Account.
    """
    protected_account_key_name: pulumi.Input[str] = pulumi.input_property("protectedAccountKeyName")
    """
    The protected diagnostics storage key name, such as `StorageAccountKey1`.
    """
    queue_endpoint: pulumi.Input[str] = pulumi.input_property("queueEndpoint")
    """
    The Queue Endpoint of the Storage Account.
    """
    storage_account_name: pulumi.Input[str] = pulumi.input_property("storageAccountName")
    """
    The name of the Storage Account where the Diagnostics should be sent to.
    """
    table_endpoint: pulumi.Input[str] = pulumi.input_property("tableEndpoint")
    """
    The Table Endpoint of the Storage Account.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, blob_endpoint: pulumi.Input[str], protected_account_key_name: pulumi.Input[str], queue_endpoint: pulumi.Input[str], storage_account_name: pulumi.Input[str], table_endpoint: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] blob_endpoint: The Blob Endpoint of the Storage Account.
        :param pulumi.Input[str] protected_account_key_name: The protected diagnostics storage key name, such as `StorageAccountKey1`.
        :param pulumi.Input[str] queue_endpoint: The Queue Endpoint of the Storage Account.
        :param pulumi.Input[str] storage_account_name: The name of the Storage Account where the Diagnostics should be sent to.
        :param pulumi.Input[str] table_endpoint: The Table Endpoint of the Storage Account.
        """
        __self__.blob_endpoint = blob_endpoint
        __self__.protected_account_key_name = protected_account_key_name
        __self__.queue_endpoint = queue_endpoint
        __self__.storage_account_name = storage_account_name
        __self__.table_endpoint = table_endpoint

@pulumi.input_type
class ClusterFabricSettingArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The name of the Fabric Setting, such as `Security` or `Federation`.
    """
    parameters: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("parameters")
    """
    A map containing settings for the specified Fabric Setting.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], parameters: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[str] name: The name of the Fabric Setting, such as `Security` or `Federation`.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] parameters: A map containing settings for the specified Fabric Setting.
        """
        __self__.name = name
        __self__.parameters = parameters

@pulumi.input_type
class ClusterNodeTypeArgs:
    client_endpoint_port: pulumi.Input[float] = pulumi.input_property("clientEndpointPort")
    """
    The Port used for the Client Endpoint for this Node Type. Changing this forces a new resource to be created.
    """
    http_endpoint_port: pulumi.Input[float] = pulumi.input_property("httpEndpointPort")
    """
    The Port used for the HTTP Endpoint for this Node Type. Changing this forces a new resource to be created.
    """
    instance_count: pulumi.Input[float] = pulumi.input_property("instanceCount")
    """
    The number of nodes for this Node Type.
    """
    is_primary: pulumi.Input[bool] = pulumi.input_property("isPrimary")
    """
    Is this the Primary Node Type? Changing this forces a new resource to be created.
    """
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The name of the Node Type. Changing this forces a new resource to be created.
    """
    application_ports: Optional[pulumi.Input['ClusterNodeTypeApplicationPortsArgs']] = pulumi.input_property("applicationPorts")
    """
    A `application_ports` block as defined below.
    """
    capacities: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("capacities")
    """
    The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.
    """
    durability_level: Optional[pulumi.Input[str]] = pulumi.input_property("durabilityLevel")
    """
    The Durability Level for this Node Type. Possible values include `Bronze`, `Gold` and `Silver`. Defaults to `Bronze`. Changing this forces a new resource to be created.
    """
    ephemeral_ports: Optional[pulumi.Input['ClusterNodeTypeEphemeralPortsArgs']] = pulumi.input_property("ephemeralPorts")
    """
    A `ephemeral_ports` block as defined below.
    """
    placement_properties: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("placementProperties")
    """
    The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.
    """
    reverse_proxy_endpoint_port: Optional[pulumi.Input[float]] = pulumi.input_property("reverseProxyEndpointPort")
    """
    The Port used for the Reverse Proxy Endpoint  for this Node Type. Changing this will upgrade the cluster.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, client_endpoint_port: pulumi.Input[float], http_endpoint_port: pulumi.Input[float], instance_count: pulumi.Input[float], is_primary: pulumi.Input[bool], name: pulumi.Input[str], application_ports: Optional[pulumi.Input['ClusterNodeTypeApplicationPortsArgs']] = None, capacities: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None, durability_level: Optional[pulumi.Input[str]] = None, ephemeral_ports: Optional[pulumi.Input['ClusterNodeTypeEphemeralPortsArgs']] = None, placement_properties: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None, reverse_proxy_endpoint_port: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[float] client_endpoint_port: The Port used for the Client Endpoint for this Node Type. Changing this forces a new resource to be created.
        :param pulumi.Input[float] http_endpoint_port: The Port used for the HTTP Endpoint for this Node Type. Changing this forces a new resource to be created.
        :param pulumi.Input[float] instance_count: The number of nodes for this Node Type.
        :param pulumi.Input[bool] is_primary: Is this the Primary Node Type? Changing this forces a new resource to be created.
        :param pulumi.Input[str] name: The name of the Node Type. Changing this forces a new resource to be created.
        :param pulumi.Input['ClusterNodeTypeApplicationPortsArgs'] application_ports: A `application_ports` block as defined below.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] capacities: The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.
        :param pulumi.Input[str] durability_level: The Durability Level for this Node Type. Possible values include `Bronze`, `Gold` and `Silver`. Defaults to `Bronze`. Changing this forces a new resource to be created.
        :param pulumi.Input['ClusterNodeTypeEphemeralPortsArgs'] ephemeral_ports: A `ephemeral_ports` block as defined below.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] placement_properties: The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.
        :param pulumi.Input[float] reverse_proxy_endpoint_port: The Port used for the Reverse Proxy Endpoint  for this Node Type. Changing this will upgrade the cluster.
        """
        __self__.client_endpoint_port = client_endpoint_port
        __self__.http_endpoint_port = http_endpoint_port
        __self__.instance_count = instance_count
        __self__.is_primary = is_primary
        __self__.name = name
        __self__.application_ports = application_ports
        __self__.capacities = capacities
        __self__.durability_level = durability_level
        __self__.ephemeral_ports = ephemeral_ports
        __self__.placement_properties = placement_properties
        __self__.reverse_proxy_endpoint_port = reverse_proxy_endpoint_port

@pulumi.input_type
class ClusterNodeTypeApplicationPortsArgs:
    end_port: pulumi.Input[float] = pulumi.input_property("endPort")
    """
    The end of the Application Port Range on this Node Type.
    """
    start_port: pulumi.Input[float] = pulumi.input_property("startPort")
    """
    The start of the Application Port Range on this Node Type.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, end_port: pulumi.Input[float], start_port: pulumi.Input[float]) -> None:
        """
        :param pulumi.Input[float] end_port: The end of the Application Port Range on this Node Type.
        :param pulumi.Input[float] start_port: The start of the Application Port Range on this Node Type.
        """
        __self__.end_port = end_port
        __self__.start_port = start_port

@pulumi.input_type
class ClusterNodeTypeEphemeralPortsArgs:
    end_port: pulumi.Input[float] = pulumi.input_property("endPort")
    """
    The end of the Ephemeral Port Range on this Node Type.
    """
    start_port: pulumi.Input[float] = pulumi.input_property("startPort")
    """
    The start of the Ephemeral Port Range on this Node Type.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, end_port: pulumi.Input[float], start_port: pulumi.Input[float]) -> None:
        """
        :param pulumi.Input[float] end_port: The end of the Ephemeral Port Range on this Node Type.
        :param pulumi.Input[float] start_port: The start of the Ephemeral Port Range on this Node Type.
        """
        __self__.end_port = end_port
        __self__.start_port = start_port

@pulumi.input_type
class ClusterReverseProxyCertificateArgs:
    thumbprint: pulumi.Input[str] = pulumi.input_property("thumbprint")
    """
    The Thumbprint of the Certificate.
    """
    x509_store_name: pulumi.Input[str] = pulumi.input_property("x509StoreName")
    """
    The X509 Store where the Certificate Exists, such as `My`.
    """
    thumbprint_secondary: Optional[pulumi.Input[str]] = pulumi.input_property("thumbprintSecondary")
    """
    The Secondary Thumbprint of the Certificate.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, thumbprint: pulumi.Input[str], x509_store_name: pulumi.Input[str], thumbprint_secondary: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] thumbprint: The Thumbprint of the Certificate.
        :param pulumi.Input[str] x509_store_name: The X509 Store where the Certificate Exists, such as `My`.
        :param pulumi.Input[str] thumbprint_secondary: The Secondary Thumbprint of the Certificate.
        """
        __self__.thumbprint = thumbprint
        __self__.x509_store_name = x509_store_name
        __self__.thumbprint_secondary = thumbprint_secondary

