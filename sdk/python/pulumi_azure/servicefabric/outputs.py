# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Mapping, Optional, Tuple, Union
from .. import _utilities, _tables
from . import outputs

__all__ = [
    'ClusterAzureActiveDirectory',
    'ClusterCertificate',
    'ClusterCertificateCommonNames',
    'ClusterCertificateCommonNamesCommonName',
    'ClusterClientCertificateCommonName',
    'ClusterClientCertificateThumbprint',
    'ClusterDiagnosticsConfig',
    'ClusterFabricSetting',
    'ClusterNodeType',
    'ClusterNodeTypeApplicationPorts',
    'ClusterNodeTypeEphemeralPorts',
    'ClusterReverseProxyCertificate',
]

@pulumi.output_type
class ClusterAzureActiveDirectory(dict):
    @property
    @pulumi.getter(name="clientApplicationId")
    def client_application_id(self) -> str:
        """
        The Azure Active Directory Client ID which should be used for the Client Application.
        """
        ...

    @property
    @pulumi.getter(name="clusterApplicationId")
    def cluster_application_id(self) -> str:
        """
        The Azure Active Directory Cluster Application ID.
        """
        ...

    @property
    @pulumi.getter(name="tenantId")
    def tenant_id(self) -> str:
        """
        The Azure Active Directory Tenant ID.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ClusterCertificate(dict):
    @property
    @pulumi.getter
    def thumbprint(self) -> str:
        """
        The Thumbprint of the Certificate.
        """
        ...

    @property
    @pulumi.getter(name="thumbprintSecondary")
    def thumbprint_secondary(self) -> Optional[str]:
        """
        The Secondary Thumbprint of the Certificate.
        """
        ...

    @property
    @pulumi.getter(name="x509StoreName")
    def x509_store_name(self) -> str:
        """
        The X509 Store where the Certificate Exists, such as `My`.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ClusterCertificateCommonNames(dict):
    @property
    @pulumi.getter(name="commonNames")
    def common_names(self) -> List['outputs.ClusterCertificateCommonNamesCommonName']:
        """
        A `common_names` block as defined below.
        """
        ...

    @property
    @pulumi.getter(name="x509StoreName")
    def x509_store_name(self) -> str:
        """
        The X509 Store where the Certificate Exists, such as `My`.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ClusterCertificateCommonNamesCommonName(dict):
    @property
    @pulumi.getter(name="certificateCommonName")
    def certificate_common_name(self) -> str:
        """
        The common or subject name of the certificate.
        """
        ...

    @property
    @pulumi.getter(name="certificateIssuerThumbprint")
    def certificate_issuer_thumbprint(self) -> Optional[str]:
        """
        The Issuer Thumbprint of the Certificate.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ClusterClientCertificateCommonName(dict):
    @property
    @pulumi.getter(name="commonName")
    def common_name(self) -> str:
        ...

    @property
    @pulumi.getter(name="isAdmin")
    def is_admin(self) -> bool:
        """
        Does the Client Certificate have Admin Access to the cluster? Non-admin clients can only perform read only operations on the cluster.
        """
        ...

    @property
    @pulumi.getter(name="issuerThumbprint")
    def issuer_thumbprint(self) -> Optional[str]:
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ClusterClientCertificateThumbprint(dict):
    @property
    @pulumi.getter(name="isAdmin")
    def is_admin(self) -> bool:
        """
        Does the Client Certificate have Admin Access to the cluster? Non-admin clients can only perform read only operations on the cluster.
        """
        ...

    @property
    @pulumi.getter
    def thumbprint(self) -> str:
        """
        The Thumbprint associated with the Client Certificate.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ClusterDiagnosticsConfig(dict):
    @property
    @pulumi.getter(name="blobEndpoint")
    def blob_endpoint(self) -> str:
        """
        The Blob Endpoint of the Storage Account.
        """
        ...

    @property
    @pulumi.getter(name="protectedAccountKeyName")
    def protected_account_key_name(self) -> str:
        """
        The protected diagnostics storage key name, such as `StorageAccountKey1`.
        """
        ...

    @property
    @pulumi.getter(name="queueEndpoint")
    def queue_endpoint(self) -> str:
        """
        The Queue Endpoint of the Storage Account.
        """
        ...

    @property
    @pulumi.getter(name="storageAccountName")
    def storage_account_name(self) -> str:
        """
        The name of the Storage Account where the Diagnostics should be sent to.
        """
        ...

    @property
    @pulumi.getter(name="tableEndpoint")
    def table_endpoint(self) -> str:
        """
        The Table Endpoint of the Storage Account.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ClusterFabricSetting(dict):
    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the Fabric Setting, such as `Security` or `Federation`.
        """
        ...

    @property
    @pulumi.getter
    def parameters(self) -> Optional[Mapping[str, str]]:
        """
        A map containing settings for the specified Fabric Setting.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ClusterNodeType(dict):
    @property
    @pulumi.getter(name="applicationPorts")
    def application_ports(self) -> Optional['outputs.ClusterNodeTypeApplicationPorts']:
        """
        A `application_ports` block as defined below.
        """
        ...

    @property
    @pulumi.getter
    def capacities(self) -> Optional[Mapping[str, str]]:
        """
        The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.
        """
        ...

    @property
    @pulumi.getter(name="clientEndpointPort")
    def client_endpoint_port(self) -> float:
        """
        The Port used for the Client Endpoint for this Node Type. Changing this forces a new resource to be created.
        """
        ...

    @property
    @pulumi.getter(name="durabilityLevel")
    def durability_level(self) -> Optional[str]:
        """
        The Durability Level for this Node Type. Possible values include `Bronze`, `Gold` and `Silver`. Defaults to `Bronze`. Changing this forces a new resource to be created.
        """
        ...

    @property
    @pulumi.getter(name="ephemeralPorts")
    def ephemeral_ports(self) -> Optional['outputs.ClusterNodeTypeEphemeralPorts']:
        """
        A `ephemeral_ports` block as defined below.
        """
        ...

    @property
    @pulumi.getter(name="httpEndpointPort")
    def http_endpoint_port(self) -> float:
        """
        The Port used for the HTTP Endpoint for this Node Type. Changing this forces a new resource to be created.
        """
        ...

    @property
    @pulumi.getter(name="instanceCount")
    def instance_count(self) -> float:
        """
        The number of nodes for this Node Type.
        """
        ...

    @property
    @pulumi.getter(name="isPrimary")
    def is_primary(self) -> bool:
        """
        Is this the Primary Node Type? Changing this forces a new resource to be created.
        """
        ...

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the Node Type. Changing this forces a new resource to be created.
        """
        ...

    @property
    @pulumi.getter(name="placementProperties")
    def placement_properties(self) -> Optional[Mapping[str, str]]:
        """
        The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.
        """
        ...

    @property
    @pulumi.getter(name="reverseProxyEndpointPort")
    def reverse_proxy_endpoint_port(self) -> Optional[float]:
        """
        The Port used for the Reverse Proxy Endpoint  for this Node Type. Changing this will upgrade the cluster.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ClusterNodeTypeApplicationPorts(dict):
    @property
    @pulumi.getter(name="endPort")
    def end_port(self) -> float:
        """
        The end of the Application Port Range on this Node Type.
        """
        ...

    @property
    @pulumi.getter(name="startPort")
    def start_port(self) -> float:
        """
        The start of the Application Port Range on this Node Type.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ClusterNodeTypeEphemeralPorts(dict):
    @property
    @pulumi.getter(name="endPort")
    def end_port(self) -> float:
        """
        The end of the Ephemeral Port Range on this Node Type.
        """
        ...

    @property
    @pulumi.getter(name="startPort")
    def start_port(self) -> float:
        """
        The start of the Ephemeral Port Range on this Node Type.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ClusterReverseProxyCertificate(dict):
    @property
    @pulumi.getter
    def thumbprint(self) -> str:
        """
        The Thumbprint of the Certificate.
        """
        ...

    @property
    @pulumi.getter(name="thumbprintSecondary")
    def thumbprint_secondary(self) -> Optional[str]:
        """
        The Secondary Thumbprint of the Certificate.
        """
        ...

    @property
    @pulumi.getter(name="x509StoreName")
    def x509_store_name(self) -> str:
        """
        The X509 Store where the Certificate Exists, such as `My`.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


