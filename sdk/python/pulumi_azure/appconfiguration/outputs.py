# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Mapping, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'ConfigurationStorePrimaryReadKey',
    'ConfigurationStorePrimaryWriteKey',
    'ConfigurationStoreSecondaryReadKey',
    'ConfigurationStoreSecondaryWriteKey',
    'GetConfigurationStorePrimaryReadKey',
    'GetConfigurationStorePrimaryWriteKey',
    'GetConfigurationStoreSecondaryReadKey',
    'GetConfigurationStoreSecondaryWriteKey',
]

@pulumi.output_type
class ConfigurationStorePrimaryReadKey(dict):
    @property
    @pulumi.getter(name="connectionString")
    def connection_string(self) -> Optional[str]:
        """
        The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
        """
        ...

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        """
        The ID of the Access Key.
        """
        ...

    @property
    @pulumi.getter
    def secret(self) -> Optional[str]:
        """
        The Secret of the Access Key.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ConfigurationStorePrimaryWriteKey(dict):
    @property
    @pulumi.getter(name="connectionString")
    def connection_string(self) -> Optional[str]:
        """
        The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
        """
        ...

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        """
        The ID of the Access Key.
        """
        ...

    @property
    @pulumi.getter
    def secret(self) -> Optional[str]:
        """
        The Secret of the Access Key.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ConfigurationStoreSecondaryReadKey(dict):
    @property
    @pulumi.getter(name="connectionString")
    def connection_string(self) -> Optional[str]:
        """
        The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
        """
        ...

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        """
        The ID of the Access Key.
        """
        ...

    @property
    @pulumi.getter
    def secret(self) -> Optional[str]:
        """
        The Secret of the Access Key.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ConfigurationStoreSecondaryWriteKey(dict):
    @property
    @pulumi.getter(name="connectionString")
    def connection_string(self) -> Optional[str]:
        """
        The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
        """
        ...

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        """
        The ID of the Access Key.
        """
        ...

    @property
    @pulumi.getter
    def secret(self) -> Optional[str]:
        """
        The Secret of the Access Key.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetConfigurationStorePrimaryReadKey(dict):
    @property
    @pulumi.getter(name="connectionString")
    def connection_string(self) -> str:
        """
        The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
        """
        ...

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The ID of the Access Key.
        """
        ...

    @property
    @pulumi.getter
    def secret(self) -> str:
        """
        The Secret of the Access Key.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetConfigurationStorePrimaryWriteKey(dict):
    @property
    @pulumi.getter(name="connectionString")
    def connection_string(self) -> str:
        """
        The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
        """
        ...

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The ID of the Access Key.
        """
        ...

    @property
    @pulumi.getter
    def secret(self) -> str:
        """
        The Secret of the Access Key.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetConfigurationStoreSecondaryReadKey(dict):
    @property
    @pulumi.getter(name="connectionString")
    def connection_string(self) -> str:
        """
        The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
        """
        ...

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The ID of the Access Key.
        """
        ...

    @property
    @pulumi.getter
    def secret(self) -> str:
        """
        The Secret of the Access Key.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetConfigurationStoreSecondaryWriteKey(dict):
    @property
    @pulumi.getter(name="connectionString")
    def connection_string(self) -> str:
        """
        The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
        """
        ...

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The ID of the Access Key.
        """
        ...

    @property
    @pulumi.getter
    def secret(self) -> str:
        """
        The Secret of the Access Key.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


