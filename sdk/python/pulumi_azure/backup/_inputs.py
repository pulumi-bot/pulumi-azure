# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'PolicyFileShareBackupArgs',
    'PolicyFileShareRetentionDailyArgs',
    'PolicyVMBackupArgs',
    'PolicyVMRetentionDailyArgs',
    'PolicyVMRetentionMonthlyArgs',
    'PolicyVMRetentionWeeklyArgs',
    'PolicyVMRetentionYearlyArgs',
]

@pulumi.input_type
class PolicyFileShareBackupArgs:
    frequency: pulumi.Input[str] = pulumi.input_property("frequency")
    """
    Sets the backup frequency. Currently, only `Daily` is supported
    """
    time: pulumi.Input[str] = pulumi.input_property("time")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, frequency: pulumi.Input[str], time: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] frequency: Sets the backup frequency. Currently, only `Daily` is supported
        """
        __self__.frequency = frequency
        __self__.time = time

@pulumi.input_type
class PolicyFileShareRetentionDailyArgs:
    count: pulumi.Input[float] = pulumi.input_property("count")
    """
    The number of daily backups to keep. Must be between `1` and `180` (inclusive)
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, count: pulumi.Input[float]) -> None:
        """
        :param pulumi.Input[float] count: The number of daily backups to keep. Must be between `1` and `180` (inclusive)
        """
        __self__.count = count

@pulumi.input_type
class PolicyVMBackupArgs:
    frequency: pulumi.Input[str] = pulumi.input_property("frequency")
    """
    Sets the backup frequency. Must be either `Daily` or`Weekly`.
    """
    time: pulumi.Input[str] = pulumi.input_property("time")
    """
    The time of day to perform the backup in 24hour format.
    """
    weekdays: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("weekdays")
    """
    The weekday backups to retain . Must be one of `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, frequency: pulumi.Input[str], time: pulumi.Input[str], weekdays: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[str] frequency: Sets the backup frequency. Must be either `Daily` or`Weekly`.
        :param pulumi.Input[str] time: The time of day to perform the backup in 24hour format.
        :param pulumi.Input[List[pulumi.Input[str]]] weekdays: The weekday backups to retain . Must be one of `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.
        """
        __self__.frequency = frequency
        __self__.time = time
        __self__.weekdays = weekdays

@pulumi.input_type
class PolicyVMRetentionDailyArgs:
    count: pulumi.Input[float] = pulumi.input_property("count")
    """
    The number of yearly backups to keep. Must be between `1` and `9999`
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, count: pulumi.Input[float]) -> None:
        """
        :param pulumi.Input[float] count: The number of yearly backups to keep. Must be between `1` and `9999`
        """
        __self__.count = count

@pulumi.input_type
class PolicyVMRetentionMonthlyArgs:
    count: pulumi.Input[float] = pulumi.input_property("count")
    """
    The number of yearly backups to keep. Must be between `1` and `9999`
    """
    weekdays: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("weekdays")
    """
    The weekday backups to retain . Must be one of `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.
    """
    weeks: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("weeks")
    """
    The weeks of the month to retain backups of. Must be one of `First`, `Second`, `Third`, `Fourth`, `Last`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, count: pulumi.Input[float], weekdays: pulumi.Input[List[pulumi.Input[str]]], weeks: pulumi.Input[List[pulumi.Input[str]]]) -> None:
        """
        :param pulumi.Input[float] count: The number of yearly backups to keep. Must be between `1` and `9999`
        :param pulumi.Input[List[pulumi.Input[str]]] weekdays: The weekday backups to retain . Must be one of `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.
        :param pulumi.Input[List[pulumi.Input[str]]] weeks: The weeks of the month to retain backups of. Must be one of `First`, `Second`, `Third`, `Fourth`, `Last`.
        """
        __self__.count = count
        __self__.weekdays = weekdays
        __self__.weeks = weeks

@pulumi.input_type
class PolicyVMRetentionWeeklyArgs:
    count: pulumi.Input[float] = pulumi.input_property("count")
    """
    The number of yearly backups to keep. Must be between `1` and `9999`
    """
    weekdays: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("weekdays")
    """
    The weekday backups to retain . Must be one of `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, count: pulumi.Input[float], weekdays: pulumi.Input[List[pulumi.Input[str]]]) -> None:
        """
        :param pulumi.Input[float] count: The number of yearly backups to keep. Must be between `1` and `9999`
        :param pulumi.Input[List[pulumi.Input[str]]] weekdays: The weekday backups to retain . Must be one of `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.
        """
        __self__.count = count
        __self__.weekdays = weekdays

@pulumi.input_type
class PolicyVMRetentionYearlyArgs:
    count: pulumi.Input[float] = pulumi.input_property("count")
    """
    The number of yearly backups to keep. Must be between `1` and `9999`
    """
    months: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("months")
    """
    The months of the year to retain backups of. Must be one of `January`, `February`, `March`, `April`, `May`, `June`, `July`, `Augest`, `September`, `October`, `November` and `December`.
    """
    weekdays: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("weekdays")
    """
    The weekday backups to retain . Must be one of `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.
    """
    weeks: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("weeks")
    """
    The weeks of the month to retain backups of. Must be one of `First`, `Second`, `Third`, `Fourth`, `Last`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, count: pulumi.Input[float], months: pulumi.Input[List[pulumi.Input[str]]], weekdays: pulumi.Input[List[pulumi.Input[str]]], weeks: pulumi.Input[List[pulumi.Input[str]]]) -> None:
        """
        :param pulumi.Input[float] count: The number of yearly backups to keep. Must be between `1` and `9999`
        :param pulumi.Input[List[pulumi.Input[str]]] months: The months of the year to retain backups of. Must be one of `January`, `February`, `March`, `April`, `May`, `June`, `July`, `Augest`, `September`, `October`, `November` and `December`.
        :param pulumi.Input[List[pulumi.Input[str]]] weekdays: The weekday backups to retain . Must be one of `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.
        :param pulumi.Input[List[pulumi.Input[str]]] weeks: The weeks of the month to retain backups of. Must be one of `First`, `Second`, `Third`, `Fourth`, `Last`.
        """
        __self__.count = count
        __self__.months = months
        __self__.weekdays = weekdays
        __self__.weeks = weeks

