# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'ServerStorageProfileArgs',
    'ServerThreatDetectionPolicyArgs',
]

@pulumi.input_type
class ServerStorageProfileArgs:
    auto_grow: Optional[pulumi.Input[str]] = pulumi.input_property("autoGrow")
    backup_retention_days: Optional[pulumi.Input[float]] = pulumi.input_property("backupRetentionDays")
    """
    Backup retention days for the server, supported values are between `7` and `35` days.
    """
    geo_redundant_backup: Optional[pulumi.Input[str]] = pulumi.input_property("geoRedundantBackup")
    storage_mb: Optional[pulumi.Input[float]] = pulumi.input_property("storageMb")
    """
    Max storage allowed for a server. Possible values are between `5120` MB(5GB) and `1048576` MB(1TB) for the Basic SKU and between `5120` MB(5GB) and `4194304` MB(4TB) for General Purpose/Memory Optimized SKUs. For more information see the [product documentation](https://docs.microsoft.com/en-us/rest/api/mysql/servers/create#StorageProfile).
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, auto_grow: Optional[pulumi.Input[str]] = None, backup_retention_days: Optional[pulumi.Input[float]] = None, geo_redundant_backup: Optional[pulumi.Input[str]] = None, storage_mb: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[float] backup_retention_days: Backup retention days for the server, supported values are between `7` and `35` days.
        :param pulumi.Input[float] storage_mb: Max storage allowed for a server. Possible values are between `5120` MB(5GB) and `1048576` MB(1TB) for the Basic SKU and between `5120` MB(5GB) and `4194304` MB(4TB) for General Purpose/Memory Optimized SKUs. For more information see the [product documentation](https://docs.microsoft.com/en-us/rest/api/mysql/servers/create#StorageProfile).
        """
        if auto_grow is not None:
            warnings.warn("this has been moved to the top level boolean attribute `auto_grow_enabled` and will be removed in version 3.0 of the provider.", DeprecationWarning)
            pulumi.log.warn("auto_grow is deprecated: this has been moved to the top level boolean attribute `auto_grow_enabled` and will be removed in version 3.0 of the provider.")
        __self__.auto_grow = auto_grow
        if backup_retention_days is not None:
            warnings.warn("this has been moved to the top level and will be removed in version 3.0 of the provider.", DeprecationWarning)
            pulumi.log.warn("backup_retention_days is deprecated: this has been moved to the top level and will be removed in version 3.0 of the provider.")
        __self__.backup_retention_days = backup_retention_days
        if geo_redundant_backup is not None:
            warnings.warn("this has been moved to the top level boolean attribute `geo_redundant_backup_enabled` and will be removed in version 3.0 of the provider.", DeprecationWarning)
            pulumi.log.warn("geo_redundant_backup is deprecated: this has been moved to the top level boolean attribute `geo_redundant_backup_enabled` and will be removed in version 3.0 of the provider.")
        __self__.geo_redundant_backup = geo_redundant_backup
        if storage_mb is not None:
            warnings.warn("this has been moved to the top level and will be removed in version 3.0 of the provider.", DeprecationWarning)
            pulumi.log.warn("storage_mb is deprecated: this has been moved to the top level and will be removed in version 3.0 of the provider.")
        __self__.storage_mb = storage_mb

@pulumi.input_type
class ServerThreatDetectionPolicyArgs:
    disabled_alerts: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("disabledAlerts")
    """
    Specifies a list of alerts which should be disabled. Possible values include `Access_Anomaly`, `Sql_Injection` and `Sql_Injection_Vulnerability`.
    """
    email_account_admins: Optional[pulumi.Input[bool]] = pulumi.input_property("emailAccountAdmins")
    """
    Should the account administrators be emailed when this alert is triggered?
    """
    email_addresses: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("emailAddresses")
    """
    A list of email addresses which alerts should be sent to.
    """
    enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("enabled")
    """
    Is the policy enabled?
    """
    retention_days: Optional[pulumi.Input[float]] = pulumi.input_property("retentionDays")
    """
    Specifies the number of days to keep in the Threat Detection audit logs.
    """
    storage_account_access_key: Optional[pulumi.Input[str]] = pulumi.input_property("storageAccountAccessKey")
    """
    Specifies the identifier key of the Threat Detection audit storage account.
    """
    storage_endpoint: Optional[pulumi.Input[str]] = pulumi.input_property("storageEndpoint")
    """
    Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, disabled_alerts: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, email_account_admins: Optional[pulumi.Input[bool]] = None, email_addresses: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, enabled: Optional[pulumi.Input[bool]] = None, retention_days: Optional[pulumi.Input[float]] = None, storage_account_access_key: Optional[pulumi.Input[str]] = None, storage_endpoint: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[str]]] disabled_alerts: Specifies a list of alerts which should be disabled. Possible values include `Access_Anomaly`, `Sql_Injection` and `Sql_Injection_Vulnerability`.
        :param pulumi.Input[bool] email_account_admins: Should the account administrators be emailed when this alert is triggered?
        :param pulumi.Input[List[pulumi.Input[str]]] email_addresses: A list of email addresses which alerts should be sent to.
        :param pulumi.Input[bool] enabled: Is the policy enabled?
        :param pulumi.Input[float] retention_days: Specifies the number of days to keep in the Threat Detection audit logs.
        :param pulumi.Input[str] storage_account_access_key: Specifies the identifier key of the Threat Detection audit storage account.
        :param pulumi.Input[str] storage_endpoint: Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.
        """
        __self__.disabled_alerts = disabled_alerts
        __self__.email_account_admins = email_account_admins
        __self__.email_addresses = email_addresses
        __self__.enabled = enabled
        __self__.retention_days = retention_days
        __self__.storage_account_access_key = storage_account_access_key
        __self__.storage_endpoint = storage_endpoint

