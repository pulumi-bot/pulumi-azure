# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'AccountBlobPropertiesArgs',
    'AccountBlobPropertiesCorsRuleArgs',
    'AccountBlobPropertiesDeleteRetentionPolicyArgs',
    'AccountCustomDomainArgs',
    'AccountIdentityArgs',
    'AccountNetworkRulesArgs',
    'AccountQueuePropertiesArgs',
    'AccountQueuePropertiesCorsRuleArgs',
    'AccountQueuePropertiesHourMetricsArgs',
    'AccountQueuePropertiesLoggingArgs',
    'AccountQueuePropertiesMinuteMetricsArgs',
    'AccountStaticWebsiteArgs',
    'ManagementPolicyRuleArgs',
    'ManagementPolicyRuleActionsArgs',
    'ManagementPolicyRuleActionsBaseBlobArgs',
    'ManagementPolicyRuleActionsSnapshotArgs',
    'ManagementPolicyRuleFiltersArgs',
    'ShareAclArgs',
    'ShareAclAccessPolicyArgs',
    'TableAclArgs',
    'TableAclAccessPolicyArgs',
    'GetAccountBlobContainerSASPermissionsArgs',
    'GetAccountSASPermissionsArgs',
    'GetAccountSASResourceTypesArgs',
    'GetAccountSASServicesArgs',
]

@pulumi.input_type
class AccountBlobPropertiesArgs:
    cors_rules: Optional[pulumi.Input[List[pulumi.Input['AccountBlobPropertiesCorsRuleArgs']]]] = pulumi.input_property("corsRules")
    """
    A `cors_rule` block as defined below.
    """
    delete_retention_policy: Optional[pulumi.Input['AccountBlobPropertiesDeleteRetentionPolicyArgs']] = pulumi.input_property("deleteRetentionPolicy")
    """
    A `delete_retention_policy` block as defined below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, cors_rules: Optional[pulumi.Input[List[pulumi.Input['AccountBlobPropertiesCorsRuleArgs']]]] = None, delete_retention_policy: Optional[pulumi.Input['AccountBlobPropertiesDeleteRetentionPolicyArgs']] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input['AccountBlobPropertiesCorsRuleArgs']]] cors_rules: A `cors_rule` block as defined below.
        :param pulumi.Input['AccountBlobPropertiesDeleteRetentionPolicyArgs'] delete_retention_policy: A `delete_retention_policy` block as defined below.
        """
        __self__.cors_rules = cors_rules
        __self__.delete_retention_policy = delete_retention_policy

@pulumi.input_type
class AccountBlobPropertiesCorsRuleArgs:
    allowed_headers: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("allowedHeaders")
    """
    A list of headers that are allowed to be a part of the cross-origin request.
    """
    allowed_methods: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("allowedMethods")
    """
    A list of http headers that are allowed to be executed by the origin. Valid options are
    `DELETE`, `GET`, `HEAD`, `MERGE`, `POST`, `OPTIONS`, `PUT` or `PATCH`.
    """
    allowed_origins: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("allowedOrigins")
    """
    A list of origin domains that will be allowed by CORS.
    """
    exposed_headers: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("exposedHeaders")
    """
    A list of response headers that are exposed to CORS clients.
    """
    max_age_in_seconds: pulumi.Input[float] = pulumi.input_property("maxAgeInSeconds")
    """
    The number of seconds the client should cache a preflight response.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, allowed_headers: pulumi.Input[List[pulumi.Input[str]]], allowed_methods: pulumi.Input[List[pulumi.Input[str]]], allowed_origins: pulumi.Input[List[pulumi.Input[str]]], exposed_headers: pulumi.Input[List[pulumi.Input[str]]], max_age_in_seconds: pulumi.Input[float]) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[str]]] allowed_headers: A list of headers that are allowed to be a part of the cross-origin request.
        :param pulumi.Input[List[pulumi.Input[str]]] allowed_methods: A list of http headers that are allowed to be executed by the origin. Valid options are
               `DELETE`, `GET`, `HEAD`, `MERGE`, `POST`, `OPTIONS`, `PUT` or `PATCH`.
        :param pulumi.Input[List[pulumi.Input[str]]] allowed_origins: A list of origin domains that will be allowed by CORS.
        :param pulumi.Input[List[pulumi.Input[str]]] exposed_headers: A list of response headers that are exposed to CORS clients.
        :param pulumi.Input[float] max_age_in_seconds: The number of seconds the client should cache a preflight response.
        """
        __self__.allowed_headers = allowed_headers
        __self__.allowed_methods = allowed_methods
        __self__.allowed_origins = allowed_origins
        __self__.exposed_headers = exposed_headers
        __self__.max_age_in_seconds = max_age_in_seconds

@pulumi.input_type
class AccountBlobPropertiesDeleteRetentionPolicyArgs:
    days: Optional[pulumi.Input[float]] = pulumi.input_property("days")
    """
    Specifies the number of days that the blob should be retained, between `1` and `365` days. Defaults to `7`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, days: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[float] days: Specifies the number of days that the blob should be retained, between `1` and `365` days. Defaults to `7`.
        """
        __self__.days = days

@pulumi.input_type
class AccountCustomDomainArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The Custom Domain Name to use for the Storage Account, which will be validated by Azure.
    """
    use_subdomain: Optional[pulumi.Input[bool]] = pulumi.input_property("useSubdomain")
    """
    Should the Custom Domain Name be validated by using indirect CNAME validation?
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], use_subdomain: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[str] name: The Custom Domain Name to use for the Storage Account, which will be validated by Azure.
        :param pulumi.Input[bool] use_subdomain: Should the Custom Domain Name be validated by using indirect CNAME validation?
        """
        __self__.name = name
        __self__.use_subdomain = use_subdomain

@pulumi.input_type
class AccountIdentityArgs:
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    Specifies the identity type of the Storage Account. At this time the only allowed value is `SystemAssigned`.
    """
    principal_id: Optional[pulumi.Input[str]] = pulumi.input_property("principalId")
    """
    The Principal ID for the Service Principal associated with the Identity of this Storage Account.
    """
    tenant_id: Optional[pulumi.Input[str]] = pulumi.input_property("tenantId")
    """
    The Tenant ID for the Service Principal associated with the Identity of this Storage Account.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, type: pulumi.Input[str], principal_id: Optional[pulumi.Input[str]] = None, tenant_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] type: Specifies the identity type of the Storage Account. At this time the only allowed value is `SystemAssigned`.
        :param pulumi.Input[str] principal_id: The Principal ID for the Service Principal associated with the Identity of this Storage Account.
        :param pulumi.Input[str] tenant_id: The Tenant ID for the Service Principal associated with the Identity of this Storage Account.
        """
        __self__.type = type
        __self__.principal_id = principal_id
        __self__.tenant_id = tenant_id

@pulumi.input_type
class AccountNetworkRulesArgs:
    default_action: pulumi.Input[str] = pulumi.input_property("defaultAction")
    """
    Specifies the default action of allow or deny when no other rules match. Valid options are `Deny` or `Allow`.
    """
    bypasses: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("bypasses")
    """
    Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Valid options are
    any combination of `Logging`, `Metrics`, `AzureServices`, or `None`.
    """
    ip_rules: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("ipRules")
    """
    List of public IP or IP ranges in CIDR Format. Only IPV4 addresses are allowed. Private IP address ranges (as defined in [RFC 1918](https://tools.ietf.org/html/rfc1918#section-3)) are not allowed.
    """
    virtual_network_subnet_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("virtualNetworkSubnetIds")
    """
    A list of resource ids for subnets.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, default_action: pulumi.Input[str], bypasses: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, ip_rules: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, virtual_network_subnet_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[str] default_action: Specifies the default action of allow or deny when no other rules match. Valid options are `Deny` or `Allow`.
        :param pulumi.Input[List[pulumi.Input[str]]] bypasses: Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Valid options are
               any combination of `Logging`, `Metrics`, `AzureServices`, or `None`.
        :param pulumi.Input[List[pulumi.Input[str]]] ip_rules: List of public IP or IP ranges in CIDR Format. Only IPV4 addresses are allowed. Private IP address ranges (as defined in [RFC 1918](https://tools.ietf.org/html/rfc1918#section-3)) are not allowed.
        :param pulumi.Input[List[pulumi.Input[str]]] virtual_network_subnet_ids: A list of resource ids for subnets.
        """
        __self__.default_action = default_action
        __self__.bypasses = bypasses
        __self__.ip_rules = ip_rules
        __self__.virtual_network_subnet_ids = virtual_network_subnet_ids

@pulumi.input_type
class AccountQueuePropertiesArgs:
    cors_rules: Optional[pulumi.Input[List[pulumi.Input['AccountQueuePropertiesCorsRuleArgs']]]] = pulumi.input_property("corsRules")
    """
    A `cors_rule` block as defined above.
    """
    hour_metrics: Optional[pulumi.Input['AccountQueuePropertiesHourMetricsArgs']] = pulumi.input_property("hourMetrics")
    """
    A `hour_metrics` block as defined below.
    """
    logging: Optional[pulumi.Input['AccountQueuePropertiesLoggingArgs']] = pulumi.input_property("logging")
    """
    A `logging` block as defined below.
    """
    minute_metrics: Optional[pulumi.Input['AccountQueuePropertiesMinuteMetricsArgs']] = pulumi.input_property("minuteMetrics")
    """
    A `minute_metrics` block as defined below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, cors_rules: Optional[pulumi.Input[List[pulumi.Input['AccountQueuePropertiesCorsRuleArgs']]]] = None, hour_metrics: Optional[pulumi.Input['AccountQueuePropertiesHourMetricsArgs']] = None, logging: Optional[pulumi.Input['AccountQueuePropertiesLoggingArgs']] = None, minute_metrics: Optional[pulumi.Input['AccountQueuePropertiesMinuteMetricsArgs']] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input['AccountQueuePropertiesCorsRuleArgs']]] cors_rules: A `cors_rule` block as defined above.
        :param pulumi.Input['AccountQueuePropertiesHourMetricsArgs'] hour_metrics: A `hour_metrics` block as defined below.
        :param pulumi.Input['AccountQueuePropertiesLoggingArgs'] logging: A `logging` block as defined below.
        :param pulumi.Input['AccountQueuePropertiesMinuteMetricsArgs'] minute_metrics: A `minute_metrics` block as defined below.
        """
        __self__.cors_rules = cors_rules
        __self__.hour_metrics = hour_metrics
        __self__.logging = logging
        __self__.minute_metrics = minute_metrics

@pulumi.input_type
class AccountQueuePropertiesCorsRuleArgs:
    allowed_headers: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("allowedHeaders")
    """
    A list of headers that are allowed to be a part of the cross-origin request.
    """
    allowed_methods: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("allowedMethods")
    """
    A list of http headers that are allowed to be executed by the origin. Valid options are
    `DELETE`, `GET`, `HEAD`, `MERGE`, `POST`, `OPTIONS`, `PUT` or `PATCH`.
    """
    allowed_origins: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("allowedOrigins")
    """
    A list of origin domains that will be allowed by CORS.
    """
    exposed_headers: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("exposedHeaders")
    """
    A list of response headers that are exposed to CORS clients.
    """
    max_age_in_seconds: pulumi.Input[float] = pulumi.input_property("maxAgeInSeconds")
    """
    The number of seconds the client should cache a preflight response.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, allowed_headers: pulumi.Input[List[pulumi.Input[str]]], allowed_methods: pulumi.Input[List[pulumi.Input[str]]], allowed_origins: pulumi.Input[List[pulumi.Input[str]]], exposed_headers: pulumi.Input[List[pulumi.Input[str]]], max_age_in_seconds: pulumi.Input[float]) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[str]]] allowed_headers: A list of headers that are allowed to be a part of the cross-origin request.
        :param pulumi.Input[List[pulumi.Input[str]]] allowed_methods: A list of http headers that are allowed to be executed by the origin. Valid options are
               `DELETE`, `GET`, `HEAD`, `MERGE`, `POST`, `OPTIONS`, `PUT` or `PATCH`.
        :param pulumi.Input[List[pulumi.Input[str]]] allowed_origins: A list of origin domains that will be allowed by CORS.
        :param pulumi.Input[List[pulumi.Input[str]]] exposed_headers: A list of response headers that are exposed to CORS clients.
        :param pulumi.Input[float] max_age_in_seconds: The number of seconds the client should cache a preflight response.
        """
        __self__.allowed_headers = allowed_headers
        __self__.allowed_methods = allowed_methods
        __self__.allowed_origins = allowed_origins
        __self__.exposed_headers = exposed_headers
        __self__.max_age_in_seconds = max_age_in_seconds

@pulumi.input_type
class AccountQueuePropertiesHourMetricsArgs:
    enabled: pulumi.Input[bool] = pulumi.input_property("enabled")
    """
    Indicates whether hour metrics are enabled for the Queue service. Changing this forces a new resource.
    """
    version: pulumi.Input[str] = pulumi.input_property("version")
    """
    The version of storage analytics to configure. Changing this forces a new resource.
    """
    include_apis: Optional[pulumi.Input[bool]] = pulumi.input_property("includeApis")
    """
    Indicates whether metrics should generate summary statistics for called API operations.
    """
    retention_policy_days: Optional[pulumi.Input[float]] = pulumi.input_property("retentionPolicyDays")
    """
    Specifies the number of days that logs will be retained. Changing this forces a new resource.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, enabled: pulumi.Input[bool], version: pulumi.Input[str], include_apis: Optional[pulumi.Input[bool]] = None, retention_policy_days: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[bool] enabled: Indicates whether hour metrics are enabled for the Queue service. Changing this forces a new resource.
        :param pulumi.Input[str] version: The version of storage analytics to configure. Changing this forces a new resource.
        :param pulumi.Input[bool] include_apis: Indicates whether metrics should generate summary statistics for called API operations.
        :param pulumi.Input[float] retention_policy_days: Specifies the number of days that logs will be retained. Changing this forces a new resource.
        """
        __self__.enabled = enabled
        __self__.version = version
        __self__.include_apis = include_apis
        __self__.retention_policy_days = retention_policy_days

@pulumi.input_type
class AccountQueuePropertiesLoggingArgs:
    delete: pulumi.Input[bool] = pulumi.input_property("delete")
    """
    Indicates whether all delete requests should be logged. Changing this forces a new resource.
    """
    read: pulumi.Input[bool] = pulumi.input_property("read")
    """
    Indicates whether all read requests should be logged. Changing this forces a new resource.
    """
    version: pulumi.Input[str] = pulumi.input_property("version")
    """
    The version of storage analytics to configure. Changing this forces a new resource.
    """
    write: pulumi.Input[bool] = pulumi.input_property("write")
    """
    Indicates whether all write requests should be logged. Changing this forces a new resource.
    """
    retention_policy_days: Optional[pulumi.Input[float]] = pulumi.input_property("retentionPolicyDays")
    """
    Specifies the number of days that logs will be retained. Changing this forces a new resource.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, delete: pulumi.Input[bool], read: pulumi.Input[bool], version: pulumi.Input[str], write: pulumi.Input[bool], retention_policy_days: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[bool] delete: Indicates whether all delete requests should be logged. Changing this forces a new resource.
        :param pulumi.Input[bool] read: Indicates whether all read requests should be logged. Changing this forces a new resource.
        :param pulumi.Input[str] version: The version of storage analytics to configure. Changing this forces a new resource.
        :param pulumi.Input[bool] write: Indicates whether all write requests should be logged. Changing this forces a new resource.
        :param pulumi.Input[float] retention_policy_days: Specifies the number of days that logs will be retained. Changing this forces a new resource.
        """
        __self__.delete = delete
        __self__.read = read
        __self__.version = version
        __self__.write = write
        __self__.retention_policy_days = retention_policy_days

@pulumi.input_type
class AccountQueuePropertiesMinuteMetricsArgs:
    enabled: pulumi.Input[bool] = pulumi.input_property("enabled")
    """
    Indicates whether minute metrics are enabled for the Queue service. Changing this forces a new resource.
    """
    version: pulumi.Input[str] = pulumi.input_property("version")
    """
    The version of storage analytics to configure. Changing this forces a new resource.
    """
    include_apis: Optional[pulumi.Input[bool]] = pulumi.input_property("includeApis")
    """
    Indicates whether metrics should generate summary statistics for called API operations.
    """
    retention_policy_days: Optional[pulumi.Input[float]] = pulumi.input_property("retentionPolicyDays")
    """
    Specifies the number of days that logs will be retained. Changing this forces a new resource.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, enabled: pulumi.Input[bool], version: pulumi.Input[str], include_apis: Optional[pulumi.Input[bool]] = None, retention_policy_days: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[bool] enabled: Indicates whether minute metrics are enabled for the Queue service. Changing this forces a new resource.
        :param pulumi.Input[str] version: The version of storage analytics to configure. Changing this forces a new resource.
        :param pulumi.Input[bool] include_apis: Indicates whether metrics should generate summary statistics for called API operations.
        :param pulumi.Input[float] retention_policy_days: Specifies the number of days that logs will be retained. Changing this forces a new resource.
        """
        __self__.enabled = enabled
        __self__.version = version
        __self__.include_apis = include_apis
        __self__.retention_policy_days = retention_policy_days

@pulumi.input_type
class AccountStaticWebsiteArgs:
    error404_document: Optional[pulumi.Input[str]] = pulumi.input_property("error404Document")
    """
    The absolute path to a custom webpage that should be used when a request is made which does not correspond to an existing file.
    """
    index_document: Optional[pulumi.Input[str]] = pulumi.input_property("indexDocument")
    """
    The webpage that Azure Storage serves for requests to the root of a website or any subfolder. For example, index.html. The value is case-sensitive.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, error404_document: Optional[pulumi.Input[str]] = None, index_document: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] error404_document: The absolute path to a custom webpage that should be used when a request is made which does not correspond to an existing file.
        :param pulumi.Input[str] index_document: The webpage that Azure Storage serves for requests to the root of a website or any subfolder. For example, index.html. The value is case-sensitive.
        """
        __self__.error404_document = error404_document
        __self__.index_document = index_document

@pulumi.input_type
class ManagementPolicyRuleArgs:
    actions: pulumi.Input['ManagementPolicyRuleActionsArgs'] = pulumi.input_property("actions")
    """
    An `actions` block as documented below.
    """
    enabled: pulumi.Input[bool] = pulumi.input_property("enabled")
    """
    Boolean to specify whether the rule is enabled.
    """
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
    """
    filters: Optional[pulumi.Input['ManagementPolicyRuleFiltersArgs']] = pulumi.input_property("filters")
    """
    A `filter` block as documented below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, actions: pulumi.Input['ManagementPolicyRuleActionsArgs'], enabled: pulumi.Input[bool], name: pulumi.Input[str], filters: Optional[pulumi.Input['ManagementPolicyRuleFiltersArgs']] = None) -> None:
        """
        :param pulumi.Input['ManagementPolicyRuleActionsArgs'] actions: An `actions` block as documented below.
        :param pulumi.Input[bool] enabled: Boolean to specify whether the rule is enabled.
        :param pulumi.Input[str] name: A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
        :param pulumi.Input['ManagementPolicyRuleFiltersArgs'] filters: A `filter` block as documented below.
        """
        __self__.actions = actions
        __self__.enabled = enabled
        __self__.name = name
        __self__.filters = filters

@pulumi.input_type
class ManagementPolicyRuleActionsArgs:
    base_blob: Optional[pulumi.Input['ManagementPolicyRuleActionsBaseBlobArgs']] = pulumi.input_property("baseBlob")
    """
    A `base_blob` block as documented below.
    """
    snapshot: Optional[pulumi.Input['ManagementPolicyRuleActionsSnapshotArgs']] = pulumi.input_property("snapshot")
    """
    A `snapshot` block as documented below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, base_blob: Optional[pulumi.Input['ManagementPolicyRuleActionsBaseBlobArgs']] = None, snapshot: Optional[pulumi.Input['ManagementPolicyRuleActionsSnapshotArgs']] = None) -> None:
        """
        :param pulumi.Input['ManagementPolicyRuleActionsBaseBlobArgs'] base_blob: A `base_blob` block as documented below.
        :param pulumi.Input['ManagementPolicyRuleActionsSnapshotArgs'] snapshot: A `snapshot` block as documented below.
        """
        __self__.base_blob = base_blob
        __self__.snapshot = snapshot

@pulumi.input_type
class ManagementPolicyRuleActionsBaseBlobArgs:
    delete_after_days_since_modification_greater_than: Optional[pulumi.Input[float]] = pulumi.input_property("deleteAfterDaysSinceModificationGreaterThan")
    """
    The age in days after last modification to delete the blob. Must be at least 0.
    """
    tier_to_archive_after_days_since_modification_greater_than: Optional[pulumi.Input[float]] = pulumi.input_property("tierToArchiveAfterDaysSinceModificationGreaterThan")
    """
    The age in days after last modification to tier blobs to archive storage. Supports blob currently at Hot or Cool tier. Must be at least 0.
    """
    tier_to_cool_after_days_since_modification_greater_than: Optional[pulumi.Input[float]] = pulumi.input_property("tierToCoolAfterDaysSinceModificationGreaterThan")
    """
    The age in days after last modification to tier blobs to cool storage. Supports blob currently at Hot tier. Must be at least 0.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, delete_after_days_since_modification_greater_than: Optional[pulumi.Input[float]] = None, tier_to_archive_after_days_since_modification_greater_than: Optional[pulumi.Input[float]] = None, tier_to_cool_after_days_since_modification_greater_than: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[float] delete_after_days_since_modification_greater_than: The age in days after last modification to delete the blob. Must be at least 0.
        :param pulumi.Input[float] tier_to_archive_after_days_since_modification_greater_than: The age in days after last modification to tier blobs to archive storage. Supports blob currently at Hot or Cool tier. Must be at least 0.
        :param pulumi.Input[float] tier_to_cool_after_days_since_modification_greater_than: The age in days after last modification to tier blobs to cool storage. Supports blob currently at Hot tier. Must be at least 0.
        """
        __self__.delete_after_days_since_modification_greater_than = delete_after_days_since_modification_greater_than
        __self__.tier_to_archive_after_days_since_modification_greater_than = tier_to_archive_after_days_since_modification_greater_than
        __self__.tier_to_cool_after_days_since_modification_greater_than = tier_to_cool_after_days_since_modification_greater_than

@pulumi.input_type
class ManagementPolicyRuleActionsSnapshotArgs:
    delete_after_days_since_creation_greater_than: Optional[pulumi.Input[float]] = pulumi.input_property("deleteAfterDaysSinceCreationGreaterThan")
    """
    The age in days after create to delete the snaphot. Must be at least 0.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, delete_after_days_since_creation_greater_than: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[float] delete_after_days_since_creation_greater_than: The age in days after create to delete the snaphot. Must be at least 0.
        """
        __self__.delete_after_days_since_creation_greater_than = delete_after_days_since_creation_greater_than

@pulumi.input_type
class ManagementPolicyRuleFiltersArgs:
    blob_types: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("blobTypes")
    """
    An array of predefined values. Only `blockBlob` is supported.
    """
    prefix_matches: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("prefixMatches")
    """
    An array of strings for prefixes to be matched.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, blob_types: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, prefix_matches: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[str]]] blob_types: An array of predefined values. Only `blockBlob` is supported.
        :param pulumi.Input[List[pulumi.Input[str]]] prefix_matches: An array of strings for prefixes to be matched.
        """
        __self__.blob_types = blob_types
        __self__.prefix_matches = prefix_matches

@pulumi.input_type
class ShareAclArgs:
    id: pulumi.Input[str] = pulumi.input_property("id")
    """
    The ID which should be used for this Shared Identifier.
    """
    access_policies: Optional[pulumi.Input[List[pulumi.Input['ShareAclAccessPolicyArgs']]]] = pulumi.input_property("accessPolicies")
    """
    An `access_policy` block as defined below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, id: pulumi.Input[str], access_policies: Optional[pulumi.Input[List[pulumi.Input['ShareAclAccessPolicyArgs']]]] = None) -> None:
        """
        :param pulumi.Input[str] id: The ID which should be used for this Shared Identifier.
        :param pulumi.Input[List[pulumi.Input['ShareAclAccessPolicyArgs']]] access_policies: An `access_policy` block as defined below.
        """
        __self__.id = id
        __self__.access_policies = access_policies

@pulumi.input_type
class ShareAclAccessPolicyArgs:
    expiry: pulumi.Input[str] = pulumi.input_property("expiry")
    """
    The time at which this Access Policy should be valid until, in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) format.
    """
    permissions: pulumi.Input[str] = pulumi.input_property("permissions")
    """
    The permissions which should be associated with this Shared Identifier. Possible value is combination of `d` (delete), `l` (list), `r` (read) and `w` (write).
    """
    start: pulumi.Input[str] = pulumi.input_property("start")
    """
    The time at which this Access Policy should be valid from, in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) format.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, expiry: pulumi.Input[str], permissions: pulumi.Input[str], start: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] expiry: The time at which this Access Policy should be valid until, in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) format.
        :param pulumi.Input[str] permissions: The permissions which should be associated with this Shared Identifier. Possible value is combination of `d` (delete), `l` (list), `r` (read) and `w` (write).
        :param pulumi.Input[str] start: The time at which this Access Policy should be valid from, in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) format.
        """
        __self__.expiry = expiry
        __self__.permissions = permissions
        __self__.start = start

@pulumi.input_type
class TableAclArgs:
    id: pulumi.Input[str] = pulumi.input_property("id")
    """
    The ID which should be used for this Shared Identifier.
    """
    access_policies: Optional[pulumi.Input[List[pulumi.Input['TableAclAccessPolicyArgs']]]] = pulumi.input_property("accessPolicies")
    """
    An `access_policy` block as defined below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, id: pulumi.Input[str], access_policies: Optional[pulumi.Input[List[pulumi.Input['TableAclAccessPolicyArgs']]]] = None) -> None:
        """
        :param pulumi.Input[str] id: The ID which should be used for this Shared Identifier.
        :param pulumi.Input[List[pulumi.Input['TableAclAccessPolicyArgs']]] access_policies: An `access_policy` block as defined below.
        """
        __self__.id = id
        __self__.access_policies = access_policies

@pulumi.input_type
class TableAclAccessPolicyArgs:
    expiry: pulumi.Input[str] = pulumi.input_property("expiry")
    """
    The ISO8061 UTC time at which this Access Policy should be valid until.
    """
    permissions: pulumi.Input[str] = pulumi.input_property("permissions")
    """
    The permissions which should associated with this Shared Identifier.
    """
    start: pulumi.Input[str] = pulumi.input_property("start")
    """
    The ISO8061 UTC time at which this Access Policy should be valid from.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, expiry: pulumi.Input[str], permissions: pulumi.Input[str], start: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] expiry: The ISO8061 UTC time at which this Access Policy should be valid until.
        :param pulumi.Input[str] permissions: The permissions which should associated with this Shared Identifier.
        :param pulumi.Input[str] start: The ISO8061 UTC time at which this Access Policy should be valid from.
        """
        __self__.expiry = expiry
        __self__.permissions = permissions
        __self__.start = start

@pulumi.input_type
class GetAccountBlobContainerSASPermissionsArgs:
    add: bool = pulumi.input_property("add")
    """
    Should Add permissions be enabled for this SAS?
    """
    create: bool = pulumi.input_property("create")
    """
    Should Create permissions be enabled for this SAS?
    """
    delete: bool = pulumi.input_property("delete")
    """
    Should Delete permissions be enabled for this SAS?
    """
    list: bool = pulumi.input_property("list")
    """
    Should List permissions be enabled for this SAS?
    """
    read: bool = pulumi.input_property("read")
    """
    Should Read permissions be enabled for this SAS?
    """
    write: bool = pulumi.input_property("write")
    """
    Should Write permissions be enabled for this SAS?
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, add: bool, create: bool, delete: bool, list: bool, read: bool, write: bool) -> None:
        """
        :param bool add: Should Add permissions be enabled for this SAS?
        :param bool create: Should Create permissions be enabled for this SAS?
        :param bool delete: Should Delete permissions be enabled for this SAS?
        :param bool list: Should List permissions be enabled for this SAS?
        :param bool read: Should Read permissions be enabled for this SAS?
        :param bool write: Should Write permissions be enabled for this SAS?
        """
        __self__.add = add
        __self__.create = create
        __self__.delete = delete
        __self__.list = list
        __self__.read = read
        __self__.write = write

@pulumi.input_type
class GetAccountSASPermissionsArgs:
    add: bool = pulumi.input_property("add")
    """
    Should Add permissions be enabled for this SAS?
    """
    create: bool = pulumi.input_property("create")
    """
    Should Create permissions be enabled for this SAS?
    """
    delete: bool = pulumi.input_property("delete")
    """
    Should Delete permissions be enabled for this SAS?
    """
    list: bool = pulumi.input_property("list")
    """
    Should List permissions be enabled for this SAS?
    """
    process: bool = pulumi.input_property("process")
    """
    Should Process permissions be enabled for this SAS?
    """
    read: bool = pulumi.input_property("read")
    """
    Should Read permissions be enabled for this SAS?
    """
    update: bool = pulumi.input_property("update")
    """
    Should Update permissions be enabled for this SAS?
    """
    write: bool = pulumi.input_property("write")
    """
    Should Write permissions be enabled for this SAS?
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, add: bool, create: bool, delete: bool, list: bool, process: bool, read: bool, update: bool, write: bool) -> None:
        """
        :param bool add: Should Add permissions be enabled for this SAS?
        :param bool create: Should Create permissions be enabled for this SAS?
        :param bool delete: Should Delete permissions be enabled for this SAS?
        :param bool list: Should List permissions be enabled for this SAS?
        :param bool process: Should Process permissions be enabled for this SAS?
        :param bool read: Should Read permissions be enabled for this SAS?
        :param bool update: Should Update permissions be enabled for this SAS?
        :param bool write: Should Write permissions be enabled for this SAS?
        """
        __self__.add = add
        __self__.create = create
        __self__.delete = delete
        __self__.list = list
        __self__.process = process
        __self__.read = read
        __self__.update = update
        __self__.write = write

@pulumi.input_type
class GetAccountSASResourceTypesArgs:
    container: bool = pulumi.input_property("container")
    """
    Should permission be granted to the container?
    """
    object: bool = pulumi.input_property("object")
    """
    Should permission be granted only to a specific object?
    """
    service: bool = pulumi.input_property("service")
    """
    Should permission be granted to the entire service?
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, container: bool, object: bool, service: bool) -> None:
        """
        :param bool container: Should permission be granted to the container?
        :param bool object: Should permission be granted only to a specific object?
        :param bool service: Should permission be granted to the entire service?
        """
        __self__.container = container
        __self__.object = object
        __self__.service = service

@pulumi.input_type
class GetAccountSASServicesArgs:
    blob: bool = pulumi.input_property("blob")
    """
    Should permission be granted to `blob` services within this storage account?
    """
    file: bool = pulumi.input_property("file")
    """
    Should permission be granted to `file` services within this storage account?
    """
    queue: bool = pulumi.input_property("queue")
    """
    Should permission be granted to `queue` services within this storage account?
    """
    table: bool = pulumi.input_property("table")
    """
    Should permission be granted to `table` services within this storage account?
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, blob: bool, file: bool, queue: bool, table: bool) -> None:
        """
        :param bool blob: Should permission be granted to `blob` services within this storage account?
        :param bool file: Should permission be granted to `file` services within this storage account?
        :param bool queue: Should permission be granted to `queue` services within this storage account?
        :param bool table: Should permission be granted to `table` services within this storage account?
        """
        __self__.blob = blob
        __self__.file = file
        __self__.queue = queue
        __self__.table = table

