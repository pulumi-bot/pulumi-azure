# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'AccountBlobProperties',
    'AccountBlobPropertiesCorsRule',
    'AccountBlobPropertiesDeleteRetentionPolicy',
    'AccountCustomDomain',
    'AccountIdentity',
    'AccountNetworkRules',
    'AccountQueueProperties',
    'AccountQueuePropertiesCorsRule',
    'AccountQueuePropertiesHourMetrics',
    'AccountQueuePropertiesLogging',
    'AccountQueuePropertiesMinuteMetrics',
    'AccountStaticWebsite',
    'ManagementPolicyRule',
    'ManagementPolicyRuleActions',
    'ManagementPolicyRuleActionsBaseBlob',
    'ManagementPolicyRuleActionsSnapshot',
    'ManagementPolicyRuleFilters',
    'ShareAcl',
    'ShareAclAccessPolicy',
    'TableAcl',
    'TableAclAccessPolicy',
    'GetAccountBlobContainerSASPermissions',
    'GetAccountCustomDomain',
    'GetAccountSASPermissions',
    'GetAccountSASResourceTypes',
    'GetAccountSASServices',
    'GetPolicyRule',
    'GetPolicyRuleAction',
    'GetPolicyRuleActionBaseBlob',
    'GetPolicyRuleActionSnapshot',
    'GetPolicyRuleFilter',
]

@pulumi.output_type
class AccountBlobProperties(dict):
    cors_rules: Optional[List['outputs.AccountBlobPropertiesCorsRule']] = pulumi.output_property("corsRules")
    """
    A `cors_rule` block as defined below.
    """
    delete_retention_policy: Optional['outputs.AccountBlobPropertiesDeleteRetentionPolicy'] = pulumi.output_property("deleteRetentionPolicy")
    """
    A `delete_retention_policy` block as defined below.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class AccountBlobPropertiesCorsRule(dict):
    allowed_headers: List[str] = pulumi.output_property("allowedHeaders")
    """
    A list of headers that are allowed to be a part of the cross-origin request.
    """
    allowed_methods: List[str] = pulumi.output_property("allowedMethods")
    """
    A list of http headers that are allowed to be executed by the origin. Valid options are
    `DELETE`, `GET`, `HEAD`, `MERGE`, `POST`, `OPTIONS`, `PUT` or `PATCH`.
    """
    allowed_origins: List[str] = pulumi.output_property("allowedOrigins")
    """
    A list of origin domains that will be allowed by CORS.
    """
    exposed_headers: List[str] = pulumi.output_property("exposedHeaders")
    """
    A list of response headers that are exposed to CORS clients.
    """
    max_age_in_seconds: float = pulumi.output_property("maxAgeInSeconds")
    """
    The number of seconds the client should cache a preflight response.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class AccountBlobPropertiesDeleteRetentionPolicy(dict):
    days: Optional[float] = pulumi.output_property("days")
    """
    Specifies the number of days that the blob should be retained, between `1` and `365` days. Defaults to `7`.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class AccountCustomDomain(dict):
    name: str = pulumi.output_property("name")
    """
    The Custom Domain Name to use for the Storage Account, which will be validated by Azure.
    """
    use_subdomain: Optional[bool] = pulumi.output_property("useSubdomain")
    """
    Should the Custom Domain Name be validated by using indirect CNAME validation?
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class AccountIdentity(dict):
    principal_id: Optional[str] = pulumi.output_property("principalId")
    """
    The Principal ID for the Service Principal associated with the Identity of this Storage Account.
    """
    tenant_id: Optional[str] = pulumi.output_property("tenantId")
    """
    The Tenant ID for the Service Principal associated with the Identity of this Storage Account.
    """
    type: str = pulumi.output_property("type")
    """
    Specifies the identity type of the Storage Account. At this time the only allowed value is `SystemAssigned`.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class AccountNetworkRules(dict):
    bypasses: Optional[List[str]] = pulumi.output_property("bypasses")
    """
    Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Valid options are
    any combination of `Logging`, `Metrics`, `AzureServices`, or `None`.
    """
    default_action: str = pulumi.output_property("defaultAction")
    """
    Specifies the default action of allow or deny when no other rules match. Valid options are `Deny` or `Allow`.
    """
    ip_rules: Optional[List[str]] = pulumi.output_property("ipRules")
    """
    List of public IP or IP ranges in CIDR Format. Only IPV4 addresses are allowed. Private IP address ranges (as defined in [RFC 1918](https://tools.ietf.org/html/rfc1918#section-3)) are not allowed.
    """
    virtual_network_subnet_ids: Optional[List[str]] = pulumi.output_property("virtualNetworkSubnetIds")
    """
    A list of resource ids for subnets.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class AccountQueueProperties(dict):
    cors_rules: Optional[List['outputs.AccountQueuePropertiesCorsRule']] = pulumi.output_property("corsRules")
    """
    A `cors_rule` block as defined above.
    """
    hour_metrics: Optional['outputs.AccountQueuePropertiesHourMetrics'] = pulumi.output_property("hourMetrics")
    """
    A `hour_metrics` block as defined below.
    """
    logging: Optional['outputs.AccountQueuePropertiesLogging'] = pulumi.output_property("logging")
    """
    A `logging` block as defined below.
    """
    minute_metrics: Optional['outputs.AccountQueuePropertiesMinuteMetrics'] = pulumi.output_property("minuteMetrics")
    """
    A `minute_metrics` block as defined below.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class AccountQueuePropertiesCorsRule(dict):
    allowed_headers: List[str] = pulumi.output_property("allowedHeaders")
    """
    A list of headers that are allowed to be a part of the cross-origin request.
    """
    allowed_methods: List[str] = pulumi.output_property("allowedMethods")
    """
    A list of http headers that are allowed to be executed by the origin. Valid options are
    `DELETE`, `GET`, `HEAD`, `MERGE`, `POST`, `OPTIONS`, `PUT` or `PATCH`.
    """
    allowed_origins: List[str] = pulumi.output_property("allowedOrigins")
    """
    A list of origin domains that will be allowed by CORS.
    """
    exposed_headers: List[str] = pulumi.output_property("exposedHeaders")
    """
    A list of response headers that are exposed to CORS clients.
    """
    max_age_in_seconds: float = pulumi.output_property("maxAgeInSeconds")
    """
    The number of seconds the client should cache a preflight response.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class AccountQueuePropertiesHourMetrics(dict):
    enabled: bool = pulumi.output_property("enabled")
    """
    Indicates whether hour metrics are enabled for the Queue service. Changing this forces a new resource.
    """
    include_apis: Optional[bool] = pulumi.output_property("includeApis")
    """
    Indicates whether metrics should generate summary statistics for called API operations.
    """
    retention_policy_days: Optional[float] = pulumi.output_property("retentionPolicyDays")
    """
    Specifies the number of days that logs will be retained. Changing this forces a new resource.
    """
    version: str = pulumi.output_property("version")
    """
    The version of storage analytics to configure. Changing this forces a new resource.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class AccountQueuePropertiesLogging(dict):
    delete: bool = pulumi.output_property("delete")
    """
    Indicates whether all delete requests should be logged. Changing this forces a new resource.
    """
    read: bool = pulumi.output_property("read")
    """
    Indicates whether all read requests should be logged. Changing this forces a new resource.
    """
    retention_policy_days: Optional[float] = pulumi.output_property("retentionPolicyDays")
    """
    Specifies the number of days that logs will be retained. Changing this forces a new resource.
    """
    version: str = pulumi.output_property("version")
    """
    The version of storage analytics to configure. Changing this forces a new resource.
    """
    write: bool = pulumi.output_property("write")
    """
    Indicates whether all write requests should be logged. Changing this forces a new resource.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class AccountQueuePropertiesMinuteMetrics(dict):
    enabled: bool = pulumi.output_property("enabled")
    """
    Indicates whether minute metrics are enabled for the Queue service. Changing this forces a new resource.
    """
    include_apis: Optional[bool] = pulumi.output_property("includeApis")
    """
    Indicates whether metrics should generate summary statistics for called API operations.
    """
    retention_policy_days: Optional[float] = pulumi.output_property("retentionPolicyDays")
    """
    Specifies the number of days that logs will be retained. Changing this forces a new resource.
    """
    version: str = pulumi.output_property("version")
    """
    The version of storage analytics to configure. Changing this forces a new resource.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class AccountStaticWebsite(dict):
    error404_document: Optional[str] = pulumi.output_property("error404Document")
    """
    The absolute path to a custom webpage that should be used when a request is made which does not correspond to an existing file.
    """
    index_document: Optional[str] = pulumi.output_property("indexDocument")
    """
    The webpage that Azure Storage serves for requests to the root of a website or any subfolder. For example, index.html. The value is case-sensitive.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ManagementPolicyRule(dict):
    actions: 'outputs.ManagementPolicyRuleActions' = pulumi.output_property("actions")
    """
    An `actions` block as documented below.
    """
    enabled: bool = pulumi.output_property("enabled")
    """
    Boolean to specify whether the rule is enabled.
    """
    filters: Optional['outputs.ManagementPolicyRuleFilters'] = pulumi.output_property("filters")
    """
    A `filter` block as documented below.
    """
    name: str = pulumi.output_property("name")
    """
    A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ManagementPolicyRuleActions(dict):
    base_blob: Optional['outputs.ManagementPolicyRuleActionsBaseBlob'] = pulumi.output_property("baseBlob")
    """
    A `base_blob` block as documented below.
    """
    snapshot: Optional['outputs.ManagementPolicyRuleActionsSnapshot'] = pulumi.output_property("snapshot")
    """
    A `snapshot` block as documented below.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ManagementPolicyRuleActionsBaseBlob(dict):
    delete_after_days_since_modification_greater_than: Optional[float] = pulumi.output_property("deleteAfterDaysSinceModificationGreaterThan")
    """
    The age in days after last modification to delete the blob. Must be at least 0.
    """
    tier_to_archive_after_days_since_modification_greater_than: Optional[float] = pulumi.output_property("tierToArchiveAfterDaysSinceModificationGreaterThan")
    """
    The age in days after last modification to tier blobs to archive storage. Supports blob currently at Hot or Cool tier. Must be at least 0.
    """
    tier_to_cool_after_days_since_modification_greater_than: Optional[float] = pulumi.output_property("tierToCoolAfterDaysSinceModificationGreaterThan")
    """
    The age in days after last modification to tier blobs to cool storage. Supports blob currently at Hot tier. Must be at least 0.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ManagementPolicyRuleActionsSnapshot(dict):
    delete_after_days_since_creation_greater_than: Optional[float] = pulumi.output_property("deleteAfterDaysSinceCreationGreaterThan")
    """
    The age in days after create to delete the snaphot. Must be at least 0.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ManagementPolicyRuleFilters(dict):
    blob_types: Optional[List[str]] = pulumi.output_property("blobTypes")
    """
    An array of predefined values. Only `blockBlob` is supported.
    """
    prefix_matches: Optional[List[str]] = pulumi.output_property("prefixMatches")
    """
    An array of strings for prefixes to be matched.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ShareAcl(dict):
    access_policies: Optional[List['outputs.ShareAclAccessPolicy']] = pulumi.output_property("accessPolicies")
    """
    An `access_policy` block as defined below.
    """
    id: str = pulumi.output_property("id")
    """
    The ID which should be used for this Shared Identifier.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ShareAclAccessPolicy(dict):
    expiry: str = pulumi.output_property("expiry")
    """
    The time at which this Access Policy should be valid until, in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) format.
    """
    permissions: str = pulumi.output_property("permissions")
    """
    The permissions which should be associated with this Shared Identifier. Possible value is combination of `d` (delete), `l` (list), `r` (read) and `w` (write).
    """
    start: str = pulumi.output_property("start")
    """
    The time at which this Access Policy should be valid from, in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) format.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class TableAcl(dict):
    access_policies: Optional[List['outputs.TableAclAccessPolicy']] = pulumi.output_property("accessPolicies")
    """
    An `access_policy` block as defined below.
    """
    id: str = pulumi.output_property("id")
    """
    The ID which should be used for this Shared Identifier.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class TableAclAccessPolicy(dict):
    expiry: str = pulumi.output_property("expiry")
    """
    The ISO8061 UTC time at which this Access Policy should be valid until.
    """
    permissions: str = pulumi.output_property("permissions")
    """
    The permissions which should associated with this Shared Identifier.
    """
    start: str = pulumi.output_property("start")
    """
    The ISO8061 UTC time at which this Access Policy should be valid from.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetAccountBlobContainerSASPermissions(dict):
    add: bool = pulumi.output_property("add")
    """
    Should Add permissions be enabled for this SAS?
    """
    create: bool = pulumi.output_property("create")
    """
    Should Create permissions be enabled for this SAS?
    """
    delete: bool = pulumi.output_property("delete")
    """
    Should Delete permissions be enabled for this SAS?
    """
    list: bool = pulumi.output_property("list")
    """
    Should List permissions be enabled for this SAS?
    """
    read: bool = pulumi.output_property("read")
    """
    Should Read permissions be enabled for this SAS?
    """
    write: bool = pulumi.output_property("write")
    """
    Should Write permissions be enabled for this SAS?
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetAccountCustomDomain(dict):
    name: str = pulumi.output_property("name")
    """
    Specifies the name of the Storage Account
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetAccountSASPermissions(dict):
    add: bool = pulumi.output_property("add")
    """
    Should Add permissions be enabled for this SAS?
    """
    create: bool = pulumi.output_property("create")
    """
    Should Create permissions be enabled for this SAS?
    """
    delete: bool = pulumi.output_property("delete")
    """
    Should Delete permissions be enabled for this SAS?
    """
    list: bool = pulumi.output_property("list")
    """
    Should List permissions be enabled for this SAS?
    """
    process: bool = pulumi.output_property("process")
    """
    Should Process permissions be enabled for this SAS?
    """
    read: bool = pulumi.output_property("read")
    """
    Should Read permissions be enabled for this SAS?
    """
    update: bool = pulumi.output_property("update")
    """
    Should Update permissions be enabled for this SAS?
    """
    write: bool = pulumi.output_property("write")
    """
    Should Write permissions be enabled for this SAS?
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetAccountSASResourceTypes(dict):
    container: bool = pulumi.output_property("container")
    """
    Should permission be granted to the container?
    """
    object: bool = pulumi.output_property("object")
    """
    Should permission be granted only to a specific object?
    """
    service: bool = pulumi.output_property("service")
    """
    Should permission be granted to the entire service?
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetAccountSASServices(dict):
    blob: bool = pulumi.output_property("blob")
    """
    Should permission be granted to `blob` services within this storage account?
    """
    file: bool = pulumi.output_property("file")
    """
    Should permission be granted to `file` services within this storage account?
    """
    queue: bool = pulumi.output_property("queue")
    """
    Should permission be granted to `queue` services within this storage account?
    """
    table: bool = pulumi.output_property("table")
    """
    Should permission be granted to `table` services within this storage account?
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetPolicyRule(dict):
    actions: List['outputs.GetPolicyRuleAction'] = pulumi.output_property("actions")
    """
    An `actions` block as documented below.
    """
    enabled: bool = pulumi.output_property("enabled")
    """
    Boolean to specify whether the rule is enabled.
    """
    filters: List['outputs.GetPolicyRuleFilter'] = pulumi.output_property("filters")
    """
    A `filter` block as documented below.
    """
    name: str = pulumi.output_property("name")
    """
    A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetPolicyRuleAction(dict):
    base_blobs: List['outputs.GetPolicyRuleActionBaseBlob'] = pulumi.output_property("baseBlobs")
    """
    A `base_blob` block as documented below.
    """
    snapshots: List['outputs.GetPolicyRuleActionSnapshot'] = pulumi.output_property("snapshots")
    """
    A `snapshot` block as documented below.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetPolicyRuleActionBaseBlob(dict):
    delete_after_days_since_modification_greater_than: float = pulumi.output_property("deleteAfterDaysSinceModificationGreaterThan")
    """
    The age in days after last modification to delete the blob.
    """
    tier_to_archive_after_days_since_modification_greater_than: float = pulumi.output_property("tierToArchiveAfterDaysSinceModificationGreaterThan")
    """
    The age in days after last modification to tier blobs to archive storage. Supports blob currently at Hot or Cool tier.
    """
    tier_to_cool_after_days_since_modification_greater_than: float = pulumi.output_property("tierToCoolAfterDaysSinceModificationGreaterThan")
    """
    The age in days after last modification to tier blobs to cool storage. Supports blob currently at Hot tier.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetPolicyRuleActionSnapshot(dict):
    delete_after_days_since_creation_greater_than: float = pulumi.output_property("deleteAfterDaysSinceCreationGreaterThan")
    """
    The age in days after create to delete the snaphot.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetPolicyRuleFilter(dict):
    blob_types: List[str] = pulumi.output_property("blobTypes")
    """
    An array of predefined values. Only `blockBlob` is supported.
    """
    prefix_matches: List[str] = pulumi.output_property("prefixMatches")
    """
    An array of strings for prefixes to be matched.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


