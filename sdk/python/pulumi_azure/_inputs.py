# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Mapping, Optional, Tuple, Union
from . import _utilities, _tables

__all__ = [
    'ProviderFeaturesArgs',
    'ProviderFeaturesKeyVaultArgs',
    'ProviderFeaturesNetworkArgs',
    'ProviderFeaturesVirtualMachineArgs',
    'ProviderFeaturesVirtualMachineScaleSetArgs',
]

@pulumi.input_type
class ProviderFeaturesArgs:
    def __init__(__self__, *,
                 key_vault: Optional[pulumi.Input['ProviderFeaturesKeyVaultArgs']] = None,
                 network: Optional[pulumi.Input['ProviderFeaturesNetworkArgs']] = None,
                 virtual_machine: Optional[pulumi.Input['ProviderFeaturesVirtualMachineArgs']] = None,
                 virtual_machine_scale_set: Optional[pulumi.Input['ProviderFeaturesVirtualMachineScaleSetArgs']] = None):
        pulumi.set(__self__, "keyVault", key_vault)
        pulumi.set(__self__, "network", network)
        pulumi.set(__self__, "virtualMachine", virtual_machine)
        pulumi.set(__self__, "virtualMachineScaleSet", virtual_machine_scale_set)

    @property
    @pulumi.getter(name="keyVault")
    def key_vault(self) -> Optional[pulumi.Input['ProviderFeaturesKeyVaultArgs']]:
        ...

    @key_vault.setter
    def key_vault(self, value: Optional[pulumi.Input['ProviderFeaturesKeyVaultArgs']]):
        ...

    @property
    @pulumi.getter
    def network(self) -> Optional[pulumi.Input['ProviderFeaturesNetworkArgs']]:
        ...

    @network.setter
    def network(self, value: Optional[pulumi.Input['ProviderFeaturesNetworkArgs']]):
        ...

    @property
    @pulumi.getter(name="virtualMachine")
    def virtual_machine(self) -> Optional[pulumi.Input['ProviderFeaturesVirtualMachineArgs']]:
        ...

    @virtual_machine.setter
    def virtual_machine(self, value: Optional[pulumi.Input['ProviderFeaturesVirtualMachineArgs']]):
        ...

    @property
    @pulumi.getter(name="virtualMachineScaleSet")
    def virtual_machine_scale_set(self) -> Optional[pulumi.Input['ProviderFeaturesVirtualMachineScaleSetArgs']]:
        ...

    @virtual_machine_scale_set.setter
    def virtual_machine_scale_set(self, value: Optional[pulumi.Input['ProviderFeaturesVirtualMachineScaleSetArgs']]):
        ...


@pulumi.input_type
class ProviderFeaturesKeyVaultArgs:
    def __init__(__self__, *,
                 purge_soft_delete_on_destroy: Optional[pulumi.Input[bool]] = None,
                 recover_soft_deleted_key_vaults: Optional[pulumi.Input[bool]] = None):
        pulumi.set(__self__, "purgeSoftDeleteOnDestroy", purge_soft_delete_on_destroy)
        pulumi.set(__self__, "recoverSoftDeletedKeyVaults", recover_soft_deleted_key_vaults)

    @property
    @pulumi.getter(name="purgeSoftDeleteOnDestroy")
    def purge_soft_delete_on_destroy(self) -> Optional[pulumi.Input[bool]]:
        ...

    @purge_soft_delete_on_destroy.setter
    def purge_soft_delete_on_destroy(self, value: Optional[pulumi.Input[bool]]):
        ...

    @property
    @pulumi.getter(name="recoverSoftDeletedKeyVaults")
    def recover_soft_deleted_key_vaults(self) -> Optional[pulumi.Input[bool]]:
        ...

    @recover_soft_deleted_key_vaults.setter
    def recover_soft_deleted_key_vaults(self, value: Optional[pulumi.Input[bool]]):
        ...


@pulumi.input_type
class ProviderFeaturesNetworkArgs:
    def __init__(__self__, *,
                 relaxed_locking: Optional[pulumi.Input[bool]] = None):
        pulumi.set(__self__, "relaxedLocking", relaxed_locking)

    @property
    @pulumi.getter(name="relaxedLocking")
    def relaxed_locking(self) -> Optional[pulumi.Input[bool]]:
        ...

    @relaxed_locking.setter
    def relaxed_locking(self, value: Optional[pulumi.Input[bool]]):
        ...


@pulumi.input_type
class ProviderFeaturesVirtualMachineArgs:
    def __init__(__self__, *,
                 delete_os_disk_on_deletion: pulumi.Input[bool]):
        pulumi.set(__self__, "deleteOsDiskOnDeletion", delete_os_disk_on_deletion)

    @property
    @pulumi.getter(name="deleteOsDiskOnDeletion")
    def delete_os_disk_on_deletion(self) -> pulumi.Input[bool]:
        ...

    @delete_os_disk_on_deletion.setter
    def delete_os_disk_on_deletion(self, value: pulumi.Input[bool]):
        ...


@pulumi.input_type
class ProviderFeaturesVirtualMachineScaleSetArgs:
    def __init__(__self__, *,
                 roll_instances_when_required: pulumi.Input[bool]):
        pulumi.set(__self__, "rollInstancesWhenRequired", roll_instances_when_required)

    @property
    @pulumi.getter(name="rollInstancesWhenRequired")
    def roll_instances_when_required(self) -> pulumi.Input[bool]:
        ...

    @roll_instances_when_required.setter
    def roll_instances_when_required(self, value: pulumi.Input[bool]):
        ...


