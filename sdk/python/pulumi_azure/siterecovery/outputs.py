# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Mapping, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'ReplicatedVMManagedDisk',
    'ReplicatedVMNetworkInterface',
]

@pulumi.output_type
class ReplicatedVMManagedDisk(dict):
    @property
    @pulumi.getter(name="diskId")
    def disk_id(self) -> str:
        """
        Id of disk that should be replicated.
        """
        ...

    @property
    @pulumi.getter(name="stagingStorageAccountId")
    def staging_storage_account_id(self) -> str:
        """
        Storage account that should be used for caching.
        """
        ...

    @property
    @pulumi.getter(name="targetDiskType")
    def target_disk_type(self) -> str:
        """
        What type should the disk be when a failover is done.
        """
        ...

    @property
    @pulumi.getter(name="targetReplicaDiskType")
    def target_replica_disk_type(self) -> str:
        """
        What type should the disk be that holds the replication data.
        """
        ...

    @property
    @pulumi.getter(name="targetResourceGroupId")
    def target_resource_group_id(self) -> str:
        """
        Resource group disk should belong to when a failover is done.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ReplicatedVMNetworkInterface(dict):
    @property
    @pulumi.getter(name="sourceNetworkInterfaceId")
    def source_network_interface_id(self) -> Optional[str]:
        """
        Id source network interface.
        """
        ...

    @property
    @pulumi.getter(name="targetStaticIp")
    def target_static_ip(self) -> Optional[str]:
        """
        Static IP to assign when a failover is done.
        """
        ...

    @property
    @pulumi.getter(name="targetSubnetName")
    def target_subnet_name(self) -> Optional[str]:
        """
        Name of the subnet to to use when a failover is done.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


