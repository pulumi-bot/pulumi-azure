# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

@pulumi.input_type
class CertifiateCertificateArgs:
    contents: pulumi.Input[str] = pulumi.input_property("contents")
    """
    The base64-encoded certificate contents. Changing this forces a new resource to be created.
    """
    password: Optional[pulumi.Input[str]] = pulumi.input_property("password")
    """
    The password associated with the certificate. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, contents: pulumi.Input[str], password: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] contents: The base64-encoded certificate contents. Changing this forces a new resource to be created.
        :param pulumi.Input[str] password: The password associated with the certificate. Changing this forces a new resource to be created.
        """
        __self__.contents = contents
        __self__.password = password

@pulumi.input_type
class CertifiateCertificateAttributeArgs:
    created: Optional[pulumi.Input[str]] = pulumi.input_property("created")
    """
    The create time of the Key Vault Certificate.
    """
    enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("enabled")
    """
    whether the Key Vault Certificate is enabled.
    """
    expires: Optional[pulumi.Input[str]] = pulumi.input_property("expires")
    """
    The expires time of the Key Vault Certificate.
    """
    not_before: Optional[pulumi.Input[str]] = pulumi.input_property("notBefore")
    """
    The not before valid time of the Key Vault Certificate.
    """
    recovery_level: Optional[pulumi.Input[str]] = pulumi.input_property("recoveryLevel")
    """
    The deletion recovery level of the Key Vault Certificate.
    """
    updated: Optional[pulumi.Input[str]] = pulumi.input_property("updated")
    """
    The recent update time of the Key Vault Certificate.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, created: Optional[pulumi.Input[str]] = None, enabled: Optional[pulumi.Input[bool]] = None, expires: Optional[pulumi.Input[str]] = None, not_before: Optional[pulumi.Input[str]] = None, recovery_level: Optional[pulumi.Input[str]] = None, updated: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] created: The create time of the Key Vault Certificate.
        :param pulumi.Input[bool] enabled: whether the Key Vault Certificate is enabled.
        :param pulumi.Input[str] expires: The expires time of the Key Vault Certificate.
        :param pulumi.Input[str] not_before: The not before valid time of the Key Vault Certificate.
        :param pulumi.Input[str] recovery_level: The deletion recovery level of the Key Vault Certificate.
        :param pulumi.Input[str] updated: The recent update time of the Key Vault Certificate.
        """
        __self__.created = created
        __self__.enabled = enabled
        __self__.expires = expires
        __self__.not_before = not_before
        __self__.recovery_level = recovery_level
        __self__.updated = updated

@pulumi.input_type
class CertifiateCertificatePolicyArgs:
    issuer_parameters: pulumi.Input['CertifiateCertificatePolicyIssuerParametersArgs'] = pulumi.input_property("issuerParameters")
    """
    A `issuer_parameters` block as defined below.
    """
    key_properties: pulumi.Input['CertifiateCertificatePolicyKeyPropertiesArgs'] = pulumi.input_property("keyProperties")
    """
    A `key_properties` block as defined below.
    """
    secret_properties: pulumi.Input['CertifiateCertificatePolicySecretPropertiesArgs'] = pulumi.input_property("secretProperties")
    """
    A `secret_properties` block as defined below.
    """
    lifetime_actions: Optional[pulumi.Input[List[pulumi.Input['CertifiateCertificatePolicyLifetimeActionArgs']]]] = pulumi.input_property("lifetimeActions")
    """
    A `lifetime_action` block as defined below.
    """
    x509_certificate_properties: Optional[pulumi.Input['CertifiateCertificatePolicyX509CertificatePropertiesArgs']] = pulumi.input_property("x509CertificateProperties")
    """
    A `x509_certificate_properties` block as defined below. Required when `certificate` block is not specified.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, issuer_parameters: pulumi.Input['CertifiateCertificatePolicyIssuerParametersArgs'], key_properties: pulumi.Input['CertifiateCertificatePolicyKeyPropertiesArgs'], secret_properties: pulumi.Input['CertifiateCertificatePolicySecretPropertiesArgs'], lifetime_actions: Optional[pulumi.Input[List[pulumi.Input['CertifiateCertificatePolicyLifetimeActionArgs']]]] = None, x509_certificate_properties: Optional[pulumi.Input['CertifiateCertificatePolicyX509CertificatePropertiesArgs']] = None) -> None:
        """
        :param pulumi.Input['CertifiateCertificatePolicyIssuerParametersArgs'] issuer_parameters: A `issuer_parameters` block as defined below.
        :param pulumi.Input['CertifiateCertificatePolicyKeyPropertiesArgs'] key_properties: A `key_properties` block as defined below.
        :param pulumi.Input['CertifiateCertificatePolicySecretPropertiesArgs'] secret_properties: A `secret_properties` block as defined below.
        :param pulumi.Input[List[pulumi.Input['CertifiateCertificatePolicyLifetimeActionArgs']]] lifetime_actions: A `lifetime_action` block as defined below.
        :param pulumi.Input['CertifiateCertificatePolicyX509CertificatePropertiesArgs'] x509_certificate_properties: A `x509_certificate_properties` block as defined below. Required when `certificate` block is not specified.
        """
        __self__.issuer_parameters = issuer_parameters
        __self__.key_properties = key_properties
        __self__.secret_properties = secret_properties
        __self__.lifetime_actions = lifetime_actions
        __self__.x509_certificate_properties = x509_certificate_properties

@pulumi.input_type
class CertifiateCertificatePolicyIssuerParametersArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The name of the Certificate Issuer. Possible values include `Self` (for self-signed certificate), or `Unknown` (for a certificate issuing authority like `Let's Encrypt` and Azure direct supported ones). Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] name: The name of the Certificate Issuer. Possible values include `Self` (for self-signed certificate), or `Unknown` (for a certificate issuing authority like `Let's Encrypt` and Azure direct supported ones). Changing this forces a new resource to be created.
        """
        __self__.name = name

@pulumi.input_type
class CertifiateCertificatePolicyKeyPropertiesArgs:
    exportable: pulumi.Input[bool] = pulumi.input_property("exportable")
    """
    Is this Certificate Exportable? Changing this forces a new resource to be created.
    """
    key_size: pulumi.Input[float] = pulumi.input_property("keySize")
    """
    The size of the Key used in the Certificate. Possible values include `2048` and `4096`. Changing this forces a new resource to be created.
    """
    key_type: pulumi.Input[str] = pulumi.input_property("keyType")
    """
    Specifies the Type of Key, such as `RSA`. Changing this forces a new resource to be created.
    """
    reuse_key: pulumi.Input[bool] = pulumi.input_property("reuseKey")
    """
    Is the key reusable? Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, exportable: pulumi.Input[bool], key_size: pulumi.Input[float], key_type: pulumi.Input[str], reuse_key: pulumi.Input[bool]) -> None:
        """
        :param pulumi.Input[bool] exportable: Is this Certificate Exportable? Changing this forces a new resource to be created.
        :param pulumi.Input[float] key_size: The size of the Key used in the Certificate. Possible values include `2048` and `4096`. Changing this forces a new resource to be created.
        :param pulumi.Input[str] key_type: Specifies the Type of Key, such as `RSA`. Changing this forces a new resource to be created.
        :param pulumi.Input[bool] reuse_key: Is the key reusable? Changing this forces a new resource to be created.
        """
        __self__.exportable = exportable
        __self__.key_size = key_size
        __self__.key_type = key_type
        __self__.reuse_key = reuse_key

@pulumi.input_type
class CertifiateCertificatePolicyLifetimeActionArgs:
    action: pulumi.Input['CertifiateCertificatePolicyLifetimeActionActionArgs'] = pulumi.input_property("action")
    """
    A `action` block as defined below.
    """
    trigger: pulumi.Input['CertifiateCertificatePolicyLifetimeActionTriggerArgs'] = pulumi.input_property("trigger")
    """
    A `trigger` block as defined below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, action: pulumi.Input['CertifiateCertificatePolicyLifetimeActionActionArgs'], trigger: pulumi.Input['CertifiateCertificatePolicyLifetimeActionTriggerArgs']) -> None:
        """
        :param pulumi.Input['CertifiateCertificatePolicyLifetimeActionActionArgs'] action: A `action` block as defined below.
        :param pulumi.Input['CertifiateCertificatePolicyLifetimeActionTriggerArgs'] trigger: A `trigger` block as defined below.
        """
        __self__.action = action
        __self__.trigger = trigger

@pulumi.input_type
class CertifiateCertificatePolicyLifetimeActionActionArgs:
    action_type: pulumi.Input[str] = pulumi.input_property("actionType")
    """
    The Type of action to be performed when the lifetime trigger is triggerec. Possible values include `AutoRenew` and `EmailContacts`. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, action_type: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] action_type: The Type of action to be performed when the lifetime trigger is triggerec. Possible values include `AutoRenew` and `EmailContacts`. Changing this forces a new resource to be created.
        """
        __self__.action_type = action_type

@pulumi.input_type
class CertifiateCertificatePolicyLifetimeActionTriggerArgs:
    days_before_expiry: Optional[pulumi.Input[float]] = pulumi.input_property("daysBeforeExpiry")
    """
    The number of days before the Certificate expires that the action associated with this Trigger should run. Changing this forces a new resource to be created. Conflicts with `lifetime_percentage`.
    """
    lifetime_percentage: Optional[pulumi.Input[float]] = pulumi.input_property("lifetimePercentage")
    """
    The percentage at which during the Certificates Lifetime the action associated with this Trigger should run. Changing this forces a new resource to be created. Conflicts with `days_before_expiry`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, days_before_expiry: Optional[pulumi.Input[float]] = None, lifetime_percentage: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[float] days_before_expiry: The number of days before the Certificate expires that the action associated with this Trigger should run. Changing this forces a new resource to be created. Conflicts with `lifetime_percentage`.
        :param pulumi.Input[float] lifetime_percentage: The percentage at which during the Certificates Lifetime the action associated with this Trigger should run. Changing this forces a new resource to be created. Conflicts with `days_before_expiry`.
        """
        __self__.days_before_expiry = days_before_expiry
        __self__.lifetime_percentage = lifetime_percentage

@pulumi.input_type
class CertifiateCertificatePolicySecretPropertiesArgs:
    content_type: pulumi.Input[str] = pulumi.input_property("contentType")
    """
    The Content-Type of the Certificate, such as `application/x-pkcs12` for a PFX or `application/x-pem-file` for a PEM. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, content_type: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] content_type: The Content-Type of the Certificate, such as `application/x-pkcs12` for a PFX or `application/x-pem-file` for a PEM. Changing this forces a new resource to be created.
        """
        __self__.content_type = content_type

@pulumi.input_type
class CertifiateCertificatePolicyX509CertificatePropertiesArgs:
    key_usages: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("keyUsages")
    """
    A list of uses associated with this Key. Possible values include `cRLSign`, `dataEncipherment`, `decipherOnly`, `digitalSignature`, `encipherOnly`, `keyAgreement`, `keyCertSign`, `keyEncipherment` and `nonRepudiation` and are case-sensitive. Changing this forces a new resource to be created.
    """
    subject: pulumi.Input[str] = pulumi.input_property("subject")
    """
    The Certificate's Subject. Changing this forces a new resource to be created.
    """
    validity_in_months: pulumi.Input[float] = pulumi.input_property("validityInMonths")
    """
    The Certificates Validity Period in Months. Changing this forces a new resource to be created.
    """
    extended_key_usages: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("extendedKeyUsages")
    """
    A list of Extended/Enhanced Key Usages. Changing this forces a new resource to be created.
    """
    subject_alternative_names: Optional[pulumi.Input['CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesArgs']] = pulumi.input_property("subjectAlternativeNames")
    """
    A `subject_alternative_names` block as defined below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, key_usages: pulumi.Input[List[pulumi.Input[str]]], subject: pulumi.Input[str], validity_in_months: pulumi.Input[float], extended_key_usages: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, subject_alternative_names: Optional[pulumi.Input['CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesArgs']] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[str]]] key_usages: A list of uses associated with this Key. Possible values include `cRLSign`, `dataEncipherment`, `decipherOnly`, `digitalSignature`, `encipherOnly`, `keyAgreement`, `keyCertSign`, `keyEncipherment` and `nonRepudiation` and are case-sensitive. Changing this forces a new resource to be created.
        :param pulumi.Input[str] subject: The Certificate's Subject. Changing this forces a new resource to be created.
        :param pulumi.Input[float] validity_in_months: The Certificates Validity Period in Months. Changing this forces a new resource to be created.
        :param pulumi.Input[List[pulumi.Input[str]]] extended_key_usages: A list of Extended/Enhanced Key Usages. Changing this forces a new resource to be created.
        :param pulumi.Input['CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesArgs'] subject_alternative_names: A `subject_alternative_names` block as defined below.
        """
        __self__.key_usages = key_usages
        __self__.subject = subject
        __self__.validity_in_months = validity_in_months
        __self__.extended_key_usages = extended_key_usages
        __self__.subject_alternative_names = subject_alternative_names

@pulumi.input_type
class CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesArgs:
    dns_names: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("dnsNames")
    """
    A list of alternative DNS names (FQDNs) identified by the Certificate. Changing this forces a new resource to be created.
    """
    emails: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("emails")
    """
    A list of email addresses identified by this Certificate. Changing this forces a new resource to be created.
    """
    upns: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("upns")
    """
    A list of User Principal Names identified by the Certificate. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, dns_names: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, emails: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, upns: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[str]]] dns_names: A list of alternative DNS names (FQDNs) identified by the Certificate. Changing this forces a new resource to be created.
        :param pulumi.Input[List[pulumi.Input[str]]] emails: A list of email addresses identified by this Certificate. Changing this forces a new resource to be created.
        :param pulumi.Input[List[pulumi.Input[str]]] upns: A list of User Principal Names identified by the Certificate. Changing this forces a new resource to be created.
        """
        __self__.dns_names = dns_names
        __self__.emails = emails
        __self__.upns = upns

@pulumi.input_type
class CertificateCertificateArgs:
    contents: pulumi.Input[str] = pulumi.input_property("contents")
    """
    The base64-encoded certificate contents. Changing this forces a new resource to be created.
    """
    password: Optional[pulumi.Input[str]] = pulumi.input_property("password")
    """
    The password associated with the certificate. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, contents: pulumi.Input[str], password: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] contents: The base64-encoded certificate contents. Changing this forces a new resource to be created.
        :param pulumi.Input[str] password: The password associated with the certificate. Changing this forces a new resource to be created.
        """
        __self__.contents = contents
        __self__.password = password

@pulumi.input_type
class CertificateCertificateAttributeArgs:
    created: Optional[pulumi.Input[str]] = pulumi.input_property("created")
    """
    The create time of the Key Vault Certificate.
    """
    enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("enabled")
    """
    whether the Key Vault Certificate is enabled.
    """
    expires: Optional[pulumi.Input[str]] = pulumi.input_property("expires")
    """
    The expires time of the Key Vault Certificate.
    """
    not_before: Optional[pulumi.Input[str]] = pulumi.input_property("notBefore")
    """
    The not before valid time of the Key Vault Certificate.
    """
    recovery_level: Optional[pulumi.Input[str]] = pulumi.input_property("recoveryLevel")
    """
    The deletion recovery level of the Key Vault Certificate.
    """
    updated: Optional[pulumi.Input[str]] = pulumi.input_property("updated")
    """
    The recent update time of the Key Vault Certificate.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, created: Optional[pulumi.Input[str]] = None, enabled: Optional[pulumi.Input[bool]] = None, expires: Optional[pulumi.Input[str]] = None, not_before: Optional[pulumi.Input[str]] = None, recovery_level: Optional[pulumi.Input[str]] = None, updated: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] created: The create time of the Key Vault Certificate.
        :param pulumi.Input[bool] enabled: whether the Key Vault Certificate is enabled.
        :param pulumi.Input[str] expires: The expires time of the Key Vault Certificate.
        :param pulumi.Input[str] not_before: The not before valid time of the Key Vault Certificate.
        :param pulumi.Input[str] recovery_level: The deletion recovery level of the Key Vault Certificate.
        :param pulumi.Input[str] updated: The recent update time of the Key Vault Certificate.
        """
        __self__.created = created
        __self__.enabled = enabled
        __self__.expires = expires
        __self__.not_before = not_before
        __self__.recovery_level = recovery_level
        __self__.updated = updated

@pulumi.input_type
class CertificateCertificatePolicyArgs:
    issuer_parameters: pulumi.Input['CertificateCertificatePolicyIssuerParametersArgs'] = pulumi.input_property("issuerParameters")
    """
    A `issuer_parameters` block as defined below.
    """
    key_properties: pulumi.Input['CertificateCertificatePolicyKeyPropertiesArgs'] = pulumi.input_property("keyProperties")
    """
    A `key_properties` block as defined below.
    """
    secret_properties: pulumi.Input['CertificateCertificatePolicySecretPropertiesArgs'] = pulumi.input_property("secretProperties")
    """
    A `secret_properties` block as defined below.
    """
    lifetime_actions: Optional[pulumi.Input[List[pulumi.Input['CertificateCertificatePolicyLifetimeActionArgs']]]] = pulumi.input_property("lifetimeActions")
    """
    A `lifetime_action` block as defined below.
    """
    x509_certificate_properties: Optional[pulumi.Input['CertificateCertificatePolicyX509CertificatePropertiesArgs']] = pulumi.input_property("x509CertificateProperties")
    """
    A `x509_certificate_properties` block as defined below. Required when `certificate` block is not specified.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, issuer_parameters: pulumi.Input['CertificateCertificatePolicyIssuerParametersArgs'], key_properties: pulumi.Input['CertificateCertificatePolicyKeyPropertiesArgs'], secret_properties: pulumi.Input['CertificateCertificatePolicySecretPropertiesArgs'], lifetime_actions: Optional[pulumi.Input[List[pulumi.Input['CertificateCertificatePolicyLifetimeActionArgs']]]] = None, x509_certificate_properties: Optional[pulumi.Input['CertificateCertificatePolicyX509CertificatePropertiesArgs']] = None) -> None:
        """
        :param pulumi.Input['CertificateCertificatePolicyIssuerParametersArgs'] issuer_parameters: A `issuer_parameters` block as defined below.
        :param pulumi.Input['CertificateCertificatePolicyKeyPropertiesArgs'] key_properties: A `key_properties` block as defined below.
        :param pulumi.Input['CertificateCertificatePolicySecretPropertiesArgs'] secret_properties: A `secret_properties` block as defined below.
        :param pulumi.Input[List[pulumi.Input['CertificateCertificatePolicyLifetimeActionArgs']]] lifetime_actions: A `lifetime_action` block as defined below.
        :param pulumi.Input['CertificateCertificatePolicyX509CertificatePropertiesArgs'] x509_certificate_properties: A `x509_certificate_properties` block as defined below. Required when `certificate` block is not specified.
        """
        __self__.issuer_parameters = issuer_parameters
        __self__.key_properties = key_properties
        __self__.secret_properties = secret_properties
        __self__.lifetime_actions = lifetime_actions
        __self__.x509_certificate_properties = x509_certificate_properties

@pulumi.input_type
class CertificateCertificatePolicyIssuerParametersArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The name of the Certificate Issuer. Possible values include `Self` (for self-signed certificate), or `Unknown` (for a certificate issuing authority like `Let's Encrypt` and Azure direct supported ones). Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] name: The name of the Certificate Issuer. Possible values include `Self` (for self-signed certificate), or `Unknown` (for a certificate issuing authority like `Let's Encrypt` and Azure direct supported ones). Changing this forces a new resource to be created.
        """
        __self__.name = name

@pulumi.input_type
class CertificateCertificatePolicyKeyPropertiesArgs:
    exportable: pulumi.Input[bool] = pulumi.input_property("exportable")
    """
    Is this Certificate Exportable? Changing this forces a new resource to be created.
    """
    key_size: pulumi.Input[float] = pulumi.input_property("keySize")
    """
    The size of the Key used in the Certificate. Possible values include `2048` and `4096`. Changing this forces a new resource to be created.
    """
    key_type: pulumi.Input[str] = pulumi.input_property("keyType")
    """
    Specifies the Type of Key, such as `RSA`. Changing this forces a new resource to be created.
    """
    reuse_key: pulumi.Input[bool] = pulumi.input_property("reuseKey")
    """
    Is the key reusable? Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, exportable: pulumi.Input[bool], key_size: pulumi.Input[float], key_type: pulumi.Input[str], reuse_key: pulumi.Input[bool]) -> None:
        """
        :param pulumi.Input[bool] exportable: Is this Certificate Exportable? Changing this forces a new resource to be created.
        :param pulumi.Input[float] key_size: The size of the Key used in the Certificate. Possible values include `2048` and `4096`. Changing this forces a new resource to be created.
        :param pulumi.Input[str] key_type: Specifies the Type of Key, such as `RSA`. Changing this forces a new resource to be created.
        :param pulumi.Input[bool] reuse_key: Is the key reusable? Changing this forces a new resource to be created.
        """
        __self__.exportable = exportable
        __self__.key_size = key_size
        __self__.key_type = key_type
        __self__.reuse_key = reuse_key

@pulumi.input_type
class CertificateCertificatePolicyLifetimeActionArgs:
    action: pulumi.Input['CertificateCertificatePolicyLifetimeActionActionArgs'] = pulumi.input_property("action")
    """
    A `action` block as defined below.
    """
    trigger: pulumi.Input['CertificateCertificatePolicyLifetimeActionTriggerArgs'] = pulumi.input_property("trigger")
    """
    A `trigger` block as defined below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, action: pulumi.Input['CertificateCertificatePolicyLifetimeActionActionArgs'], trigger: pulumi.Input['CertificateCertificatePolicyLifetimeActionTriggerArgs']) -> None:
        """
        :param pulumi.Input['CertificateCertificatePolicyLifetimeActionActionArgs'] action: A `action` block as defined below.
        :param pulumi.Input['CertificateCertificatePolicyLifetimeActionTriggerArgs'] trigger: A `trigger` block as defined below.
        """
        __self__.action = action
        __self__.trigger = trigger

@pulumi.input_type
class CertificateCertificatePolicyLifetimeActionActionArgs:
    action_type: pulumi.Input[str] = pulumi.input_property("actionType")
    """
    The Type of action to be performed when the lifetime trigger is triggerec. Possible values include `AutoRenew` and `EmailContacts`. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, action_type: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] action_type: The Type of action to be performed when the lifetime trigger is triggerec. Possible values include `AutoRenew` and `EmailContacts`. Changing this forces a new resource to be created.
        """
        __self__.action_type = action_type

@pulumi.input_type
class CertificateCertificatePolicyLifetimeActionTriggerArgs:
    days_before_expiry: Optional[pulumi.Input[float]] = pulumi.input_property("daysBeforeExpiry")
    """
    The number of days before the Certificate expires that the action associated with this Trigger should run. Changing this forces a new resource to be created. Conflicts with `lifetime_percentage`.
    """
    lifetime_percentage: Optional[pulumi.Input[float]] = pulumi.input_property("lifetimePercentage")
    """
    The percentage at which during the Certificates Lifetime the action associated with this Trigger should run. Changing this forces a new resource to be created. Conflicts with `days_before_expiry`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, days_before_expiry: Optional[pulumi.Input[float]] = None, lifetime_percentage: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[float] days_before_expiry: The number of days before the Certificate expires that the action associated with this Trigger should run. Changing this forces a new resource to be created. Conflicts with `lifetime_percentage`.
        :param pulumi.Input[float] lifetime_percentage: The percentage at which during the Certificates Lifetime the action associated with this Trigger should run. Changing this forces a new resource to be created. Conflicts with `days_before_expiry`.
        """
        __self__.days_before_expiry = days_before_expiry
        __self__.lifetime_percentage = lifetime_percentage

@pulumi.input_type
class CertificateCertificatePolicySecretPropertiesArgs:
    content_type: pulumi.Input[str] = pulumi.input_property("contentType")
    """
    The Content-Type of the Certificate, such as `application/x-pkcs12` for a PFX or `application/x-pem-file` for a PEM. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, content_type: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] content_type: The Content-Type of the Certificate, such as `application/x-pkcs12` for a PFX or `application/x-pem-file` for a PEM. Changing this forces a new resource to be created.
        """
        __self__.content_type = content_type

@pulumi.input_type
class CertificateCertificatePolicyX509CertificatePropertiesArgs:
    key_usages: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("keyUsages")
    """
    A list of uses associated with this Key. Possible values include `cRLSign`, `dataEncipherment`, `decipherOnly`, `digitalSignature`, `encipherOnly`, `keyAgreement`, `keyCertSign`, `keyEncipherment` and `nonRepudiation` and are case-sensitive. Changing this forces a new resource to be created.
    """
    subject: pulumi.Input[str] = pulumi.input_property("subject")
    """
    The Certificate's Subject. Changing this forces a new resource to be created.
    """
    validity_in_months: pulumi.Input[float] = pulumi.input_property("validityInMonths")
    """
    The Certificates Validity Period in Months. Changing this forces a new resource to be created.
    """
    extended_key_usages: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("extendedKeyUsages")
    """
    A list of Extended/Enhanced Key Usages. Changing this forces a new resource to be created.
    """
    subject_alternative_names: Optional[pulumi.Input['CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesArgs']] = pulumi.input_property("subjectAlternativeNames")
    """
    A `subject_alternative_names` block as defined below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, key_usages: pulumi.Input[List[pulumi.Input[str]]], subject: pulumi.Input[str], validity_in_months: pulumi.Input[float], extended_key_usages: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, subject_alternative_names: Optional[pulumi.Input['CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesArgs']] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[str]]] key_usages: A list of uses associated with this Key. Possible values include `cRLSign`, `dataEncipherment`, `decipherOnly`, `digitalSignature`, `encipherOnly`, `keyAgreement`, `keyCertSign`, `keyEncipherment` and `nonRepudiation` and are case-sensitive. Changing this forces a new resource to be created.
        :param pulumi.Input[str] subject: The Certificate's Subject. Changing this forces a new resource to be created.
        :param pulumi.Input[float] validity_in_months: The Certificates Validity Period in Months. Changing this forces a new resource to be created.
        :param pulumi.Input[List[pulumi.Input[str]]] extended_key_usages: A list of Extended/Enhanced Key Usages. Changing this forces a new resource to be created.
        :param pulumi.Input['CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesArgs'] subject_alternative_names: A `subject_alternative_names` block as defined below.
        """
        __self__.key_usages = key_usages
        __self__.subject = subject
        __self__.validity_in_months = validity_in_months
        __self__.extended_key_usages = extended_key_usages
        __self__.subject_alternative_names = subject_alternative_names

@pulumi.input_type
class CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesArgs:
    dns_names: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("dnsNames")
    """
    A list of alternative DNS names (FQDNs) identified by the Certificate. Changing this forces a new resource to be created.
    """
    emails: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("emails")
    """
    A list of email addresses identified by this Certificate. Changing this forces a new resource to be created.
    """
    upns: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("upns")
    """
    A list of User Principal Names identified by the Certificate. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, dns_names: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, emails: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, upns: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[str]]] dns_names: A list of alternative DNS names (FQDNs) identified by the Certificate. Changing this forces a new resource to be created.
        :param pulumi.Input[List[pulumi.Input[str]]] emails: A list of email addresses identified by this Certificate. Changing this forces a new resource to be created.
        :param pulumi.Input[List[pulumi.Input[str]]] upns: A list of User Principal Names identified by the Certificate. Changing this forces a new resource to be created.
        """
        __self__.dns_names = dns_names
        __self__.emails = emails
        __self__.upns = upns

@pulumi.input_type
class CertificateIssuerAdminArgs:
    email_address: pulumi.Input[str] = pulumi.input_property("emailAddress")
    """
    E-mail address of the admin.
    """
    first_name: Optional[pulumi.Input[str]] = pulumi.input_property("firstName")
    """
    First name of the admin.
    """
    last_name: Optional[pulumi.Input[str]] = pulumi.input_property("lastName")
    """
    Last name of the admin.
    """
    phone: Optional[pulumi.Input[str]] = pulumi.input_property("phone")
    """
    Phone number of the admin.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, email_address: pulumi.Input[str], first_name: Optional[pulumi.Input[str]] = None, last_name: Optional[pulumi.Input[str]] = None, phone: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] email_address: E-mail address of the admin.
        :param pulumi.Input[str] first_name: First name of the admin.
        :param pulumi.Input[str] last_name: Last name of the admin.
        :param pulumi.Input[str] phone: Phone number of the admin.
        """
        __self__.email_address = email_address
        __self__.first_name = first_name
        __self__.last_name = last_name
        __self__.phone = phone

@pulumi.input_type
class KeyVaultAccessPolicyArgs:
    object_id: pulumi.Input[str] = pulumi.input_property("objectId")
    """
    The object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies.
    """
    tenant_id: pulumi.Input[str] = pulumi.input_property("tenantId")
    """
    The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault. Must match the `tenant_id` used above.
    """
    application_id: Optional[pulumi.Input[str]] = pulumi.input_property("applicationId")
    """
    The object ID of an Application in Azure Active Directory.
    """
    certificate_permissions: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("certificatePermissions")
    """
    List of certificate permissions, must be one or more from the following: `backup`, `create`, `delete`, `deleteissuers`, `get`, `getissuers`, `import`, `list`, `listissuers`, `managecontacts`, `manageissuers`, `purge`, `recover`, `restore`, `setissuers` and `update`.
    """
    key_permissions: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("keyPermissions")
    """
    List of key permissions, must be one or more from the following: `backup`, `create`, `decrypt`, `delete`, `encrypt`, `get`, `import`, `list`, `purge`, `recover`, `restore`, `sign`, `unwrapKey`, `update`, `verify` and `wrapKey`.
    """
    secret_permissions: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("secretPermissions")
    """
    List of secret permissions, must be one or more from the following: `backup`, `delete`, `get`, `list`, `purge`, `recover`, `restore` and `set`.
    """
    storage_permissions: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("storagePermissions")
    """
    List of storage permissions, must be one or more from the following: `backup`, `delete`, `deletesas`, `get`, `getsas`, `list`, `listsas`, `purge`, `recover`, `regeneratekey`, `restore`, `set`, `setsas` and `update`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, object_id: pulumi.Input[str], tenant_id: pulumi.Input[str], application_id: Optional[pulumi.Input[str]] = None, certificate_permissions: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, key_permissions: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, secret_permissions: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, storage_permissions: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[str] object_id: The object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies.
        :param pulumi.Input[str] tenant_id: The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault. Must match the `tenant_id` used above.
        :param pulumi.Input[str] application_id: The object ID of an Application in Azure Active Directory.
        :param pulumi.Input[List[pulumi.Input[str]]] certificate_permissions: List of certificate permissions, must be one or more from the following: `backup`, `create`, `delete`, `deleteissuers`, `get`, `getissuers`, `import`, `list`, `listissuers`, `managecontacts`, `manageissuers`, `purge`, `recover`, `restore`, `setissuers` and `update`.
        :param pulumi.Input[List[pulumi.Input[str]]] key_permissions: List of key permissions, must be one or more from the following: `backup`, `create`, `decrypt`, `delete`, `encrypt`, `get`, `import`, `list`, `purge`, `recover`, `restore`, `sign`, `unwrapKey`, `update`, `verify` and `wrapKey`.
        :param pulumi.Input[List[pulumi.Input[str]]] secret_permissions: List of secret permissions, must be one or more from the following: `backup`, `delete`, `get`, `list`, `purge`, `recover`, `restore` and `set`.
        :param pulumi.Input[List[pulumi.Input[str]]] storage_permissions: List of storage permissions, must be one or more from the following: `backup`, `delete`, `deletesas`, `get`, `getsas`, `list`, `listsas`, `purge`, `recover`, `regeneratekey`, `restore`, `set`, `setsas` and `update`.
        """
        __self__.object_id = object_id
        __self__.tenant_id = tenant_id
        __self__.application_id = application_id
        __self__.certificate_permissions = certificate_permissions
        __self__.key_permissions = key_permissions
        __self__.secret_permissions = secret_permissions
        __self__.storage_permissions = storage_permissions

@pulumi.input_type
class KeyVaultNetworkAclsArgs:
    bypass: pulumi.Input[str] = pulumi.input_property("bypass")
    """
    Specifies which traffic can bypass the network rules. Possible values are `AzureServices` and `None`.
    """
    default_action: pulumi.Input[str] = pulumi.input_property("defaultAction")
    """
    The Default Action to use when no rules match from `ip_rules` / `virtual_network_subnet_ids`. Possible values are `Allow` and `Deny`.
    """
    ip_rules: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("ipRules")
    """
    One or more IP Addresses, or CIDR Blocks which should be able to access the Key Vault.
    """
    virtual_network_subnet_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("virtualNetworkSubnetIds")
    """
    One or more Subnet ID's which should be able to access this Key Vault.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, bypass: pulumi.Input[str], default_action: pulumi.Input[str], ip_rules: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, virtual_network_subnet_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[str] bypass: Specifies which traffic can bypass the network rules. Possible values are `AzureServices` and `None`.
        :param pulumi.Input[str] default_action: The Default Action to use when no rules match from `ip_rules` / `virtual_network_subnet_ids`. Possible values are `Allow` and `Deny`.
        :param pulumi.Input[List[pulumi.Input[str]]] ip_rules: One or more IP Addresses, or CIDR Blocks which should be able to access the Key Vault.
        :param pulumi.Input[List[pulumi.Input[str]]] virtual_network_subnet_ids: One or more Subnet ID's which should be able to access this Key Vault.
        """
        __self__.bypass = bypass
        __self__.default_action = default_action
        __self__.ip_rules = ip_rules
        __self__.virtual_network_subnet_ids = virtual_network_subnet_ids

