# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

@pulumi.input_type
class AppServiceAuthSettingsArgs:
    enabled: pulumi.Input[bool] = pulumi.input_property("enabled")
    """
    Is Authentication enabled?
    """
    active_directory: Optional[pulumi.Input['AppServiceAuthSettingsActiveDirectoryArgs']] = pulumi.input_property("activeDirectory")
    """
    A `active_directory` block as defined below.
    """
    additional_login_params: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("additionalLoginParams")
    """
    Login parameters to send to the OpenID Connect authorization endpoint when a user logs in. Each parameter must be in the form "key=value".
    """
    allowed_external_redirect_urls: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("allowedExternalRedirectUrls")
    """
    External URLs that can be redirected to as part of logging in or logging out of the app.
    """
    default_provider: Optional[pulumi.Input[str]] = pulumi.input_property("defaultProvider")
    """
    The default provider to use when multiple providers have been set up. Possible values are `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount` and `Twitter`.
    """
    facebook: Optional[pulumi.Input['AppServiceAuthSettingsFacebookArgs']] = pulumi.input_property("facebook")
    """
    A `facebook` block as defined below.
    """
    google: Optional[pulumi.Input['AppServiceAuthSettingsGoogleArgs']] = pulumi.input_property("google")
    """
    A `google` block as defined below.
    """
    issuer: Optional[pulumi.Input[str]] = pulumi.input_property("issuer")
    """
    Issuer URI. When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.
    """
    microsoft: Optional[pulumi.Input['AppServiceAuthSettingsMicrosoftArgs']] = pulumi.input_property("microsoft")
    """
    A `microsoft` block as defined below.
    """
    runtime_version: Optional[pulumi.Input[str]] = pulumi.input_property("runtimeVersion")
    """
    The runtime version of the Authentication/Authorization module.
    """
    token_refresh_extension_hours: Optional[pulumi.Input[float]] = pulumi.input_property("tokenRefreshExtensionHours")
    """
    The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72.
    """
    token_store_enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("tokenStoreEnabled")
    """
    If enabled the module will durably store platform-specific security tokens that are obtained during login flows. Defaults to false.
    """
    twitter: Optional[pulumi.Input['AppServiceAuthSettingsTwitterArgs']] = pulumi.input_property("twitter")
    """
    A `twitter` block as defined below.
    """
    unauthenticated_client_action: Optional[pulumi.Input[str]] = pulumi.input_property("unauthenticatedClientAction")
    """
    The action to take when an unauthenticated client attempts to access the app. Possible values are `AllowAnonymous` and `RedirectToLoginPage`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, enabled: pulumi.Input[bool], active_directory: Optional[pulumi.Input['AppServiceAuthSettingsActiveDirectoryArgs']] = None, additional_login_params: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None, allowed_external_redirect_urls: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, default_provider: Optional[pulumi.Input[str]] = None, facebook: Optional[pulumi.Input['AppServiceAuthSettingsFacebookArgs']] = None, google: Optional[pulumi.Input['AppServiceAuthSettingsGoogleArgs']] = None, issuer: Optional[pulumi.Input[str]] = None, microsoft: Optional[pulumi.Input['AppServiceAuthSettingsMicrosoftArgs']] = None, runtime_version: Optional[pulumi.Input[str]] = None, token_refresh_extension_hours: Optional[pulumi.Input[float]] = None, token_store_enabled: Optional[pulumi.Input[bool]] = None, twitter: Optional[pulumi.Input['AppServiceAuthSettingsTwitterArgs']] = None, unauthenticated_client_action: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[bool] enabled: Is Authentication enabled?
        :param pulumi.Input['AppServiceAuthSettingsActiveDirectoryArgs'] active_directory: A `active_directory` block as defined below.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] additional_login_params: Login parameters to send to the OpenID Connect authorization endpoint when a user logs in. Each parameter must be in the form "key=value".
        :param pulumi.Input[List[pulumi.Input[str]]] allowed_external_redirect_urls: External URLs that can be redirected to as part of logging in or logging out of the app.
        :param pulumi.Input[str] default_provider: The default provider to use when multiple providers have been set up. Possible values are `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount` and `Twitter`.
        :param pulumi.Input['AppServiceAuthSettingsFacebookArgs'] facebook: A `facebook` block as defined below.
        :param pulumi.Input['AppServiceAuthSettingsGoogleArgs'] google: A `google` block as defined below.
        :param pulumi.Input[str] issuer: Issuer URI. When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.
        :param pulumi.Input['AppServiceAuthSettingsMicrosoftArgs'] microsoft: A `microsoft` block as defined below.
        :param pulumi.Input[str] runtime_version: The runtime version of the Authentication/Authorization module.
        :param pulumi.Input[float] token_refresh_extension_hours: The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72.
        :param pulumi.Input[bool] token_store_enabled: If enabled the module will durably store platform-specific security tokens that are obtained during login flows. Defaults to false.
        :param pulumi.Input['AppServiceAuthSettingsTwitterArgs'] twitter: A `twitter` block as defined below.
        :param pulumi.Input[str] unauthenticated_client_action: The action to take when an unauthenticated client attempts to access the app. Possible values are `AllowAnonymous` and `RedirectToLoginPage`.
        """
        __self__.enabled = enabled
        __self__.active_directory = active_directory
        __self__.additional_login_params = additional_login_params
        __self__.allowed_external_redirect_urls = allowed_external_redirect_urls
        __self__.default_provider = default_provider
        __self__.facebook = facebook
        __self__.google = google
        __self__.issuer = issuer
        __self__.microsoft = microsoft
        __self__.runtime_version = runtime_version
        __self__.token_refresh_extension_hours = token_refresh_extension_hours
        __self__.token_store_enabled = token_store_enabled
        __self__.twitter = twitter
        __self__.unauthenticated_client_action = unauthenticated_client_action

@pulumi.input_type
class AppServiceAuthSettingsActiveDirectoryArgs:
    client_id: pulumi.Input[str] = pulumi.input_property("clientId")
    """
    The Client ID of this relying party application. Enables OpenIDConnection authentication with Azure Active Directory.
    """
    allowed_audiences: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("allowedAudiences")
    """
    Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
    """
    client_secret: Optional[pulumi.Input[str]] = pulumi.input_property("clientSecret")
    """
    The Client Secret of this relying party application. If no secret is provided, implicit flow will be used.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, client_id: pulumi.Input[str], allowed_audiences: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, client_secret: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] client_id: The Client ID of this relying party application. Enables OpenIDConnection authentication with Azure Active Directory.
        :param pulumi.Input[List[pulumi.Input[str]]] allowed_audiences: Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
        :param pulumi.Input[str] client_secret: The Client Secret of this relying party application. If no secret is provided, implicit flow will be used.
        """
        __self__.client_id = client_id
        __self__.allowed_audiences = allowed_audiences
        __self__.client_secret = client_secret

@pulumi.input_type
class AppServiceAuthSettingsFacebookArgs:
    app_id: pulumi.Input[str] = pulumi.input_property("appId")
    """
    The App ID of the Facebook app used for login
    """
    app_secret: pulumi.Input[str] = pulumi.input_property("appSecret")
    """
    The App Secret of the Facebook app used for Facebook Login.
    """
    oauth_scopes: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("oauthScopes")
    """
    The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication. https://developers.facebook.com/docs/facebook-login
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, app_id: pulumi.Input[str], app_secret: pulumi.Input[str], oauth_scopes: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[str] app_id: The App ID of the Facebook app used for login
        :param pulumi.Input[str] app_secret: The App Secret of the Facebook app used for Facebook Login.
        :param pulumi.Input[List[pulumi.Input[str]]] oauth_scopes: The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication. https://developers.facebook.com/docs/facebook-login
        """
        __self__.app_id = app_id
        __self__.app_secret = app_secret
        __self__.oauth_scopes = oauth_scopes

@pulumi.input_type
class AppServiceAuthSettingsGoogleArgs:
    client_id: pulumi.Input[str] = pulumi.input_property("clientId")
    """
    The OpenID Connect Client ID for the Google web application.
    """
    client_secret: pulumi.Input[str] = pulumi.input_property("clientSecret")
    """
    The client secret associated with the Google web application.
    """
    oauth_scopes: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("oauthScopes")
    """
    The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. https://developers.google.com/identity/sign-in/web/
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, client_id: pulumi.Input[str], client_secret: pulumi.Input[str], oauth_scopes: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[str] client_id: The OpenID Connect Client ID for the Google web application.
        :param pulumi.Input[str] client_secret: The client secret associated with the Google web application.
        :param pulumi.Input[List[pulumi.Input[str]]] oauth_scopes: The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. https://developers.google.com/identity/sign-in/web/
        """
        __self__.client_id = client_id
        __self__.client_secret = client_secret
        __self__.oauth_scopes = oauth_scopes

@pulumi.input_type
class AppServiceAuthSettingsMicrosoftArgs:
    client_id: pulumi.Input[str] = pulumi.input_property("clientId")
    """
    The OAuth 2.0 client ID that was created for the app used for authentication.
    """
    client_secret: pulumi.Input[str] = pulumi.input_property("clientSecret")
    """
    The OAuth 2.0 client secret that was created for the app used for authentication.
    """
    oauth_scopes: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("oauthScopes")
    """
    The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. https://msdn.microsoft.com/en-us/library/dn631845.aspx
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, client_id: pulumi.Input[str], client_secret: pulumi.Input[str], oauth_scopes: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[str] client_id: The OAuth 2.0 client ID that was created for the app used for authentication.
        :param pulumi.Input[str] client_secret: The OAuth 2.0 client secret that was created for the app used for authentication.
        :param pulumi.Input[List[pulumi.Input[str]]] oauth_scopes: The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. https://msdn.microsoft.com/en-us/library/dn631845.aspx
        """
        __self__.client_id = client_id
        __self__.client_secret = client_secret
        __self__.oauth_scopes = oauth_scopes

@pulumi.input_type
class AppServiceAuthSettingsTwitterArgs:
    consumer_key: pulumi.Input[str] = pulumi.input_property("consumerKey")
    consumer_secret: pulumi.Input[str] = pulumi.input_property("consumerSecret")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, consumer_key: pulumi.Input[str], consumer_secret: pulumi.Input[str]) -> None:
        __self__.consumer_key = consumer_key
        __self__.consumer_secret = consumer_secret

@pulumi.input_type
class AppServiceBackupArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    Specifies the name for this Backup.
    """
    schedule: pulumi.Input['AppServiceBackupScheduleArgs'] = pulumi.input_property("schedule")
    """
    A `schedule` block as defined below.
    """
    storage_account_url: pulumi.Input[str] = pulumi.input_property("storageAccountUrl")
    """
    The SAS URL to a Storage Container where Backups should be saved.
    """
    enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("enabled")
    """
    Is this Backup enabled?
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], schedule: pulumi.Input['AppServiceBackupScheduleArgs'], storage_account_url: pulumi.Input[str], enabled: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[str] name: Specifies the name for this Backup.
        :param pulumi.Input['AppServiceBackupScheduleArgs'] schedule: A `schedule` block as defined below.
        :param pulumi.Input[str] storage_account_url: The SAS URL to a Storage Container where Backups should be saved.
        :param pulumi.Input[bool] enabled: Is this Backup enabled?
        """
        __self__.name = name
        __self__.schedule = schedule
        __self__.storage_account_url = storage_account_url
        __self__.enabled = enabled

@pulumi.input_type
class AppServiceBackupScheduleArgs:
    frequency_interval: pulumi.Input[float] = pulumi.input_property("frequencyInterval")
    """
    Sets how often the backup should be executed.
    """
    frequency_unit: pulumi.Input[str] = pulumi.input_property("frequencyUnit")
    """
    Sets the unit of time for how often the backup should be executed. Possible values are `Day` or `Hour`.
    """
    keep_at_least_one_backup: Optional[pulumi.Input[bool]] = pulumi.input_property("keepAtLeastOneBackup")
    """
    Should at least one backup always be kept in the Storage Account by the Retention Policy, regardless of how old it is?
    """
    retention_period_in_days: Optional[pulumi.Input[float]] = pulumi.input_property("retentionPeriodInDays")
    """
    Specifies the number of days after which Backups should be deleted.
    """
    start_time: Optional[pulumi.Input[str]] = pulumi.input_property("startTime")
    """
    Sets when the schedule should start working.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, frequency_interval: pulumi.Input[float], frequency_unit: pulumi.Input[str], keep_at_least_one_backup: Optional[pulumi.Input[bool]] = None, retention_period_in_days: Optional[pulumi.Input[float]] = None, start_time: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[float] frequency_interval: Sets how often the backup should be executed.
        :param pulumi.Input[str] frequency_unit: Sets the unit of time for how often the backup should be executed. Possible values are `Day` or `Hour`.
        :param pulumi.Input[bool] keep_at_least_one_backup: Should at least one backup always be kept in the Storage Account by the Retention Policy, regardless of how old it is?
        :param pulumi.Input[float] retention_period_in_days: Specifies the number of days after which Backups should be deleted.
        :param pulumi.Input[str] start_time: Sets when the schedule should start working.
        """
        __self__.frequency_interval = frequency_interval
        __self__.frequency_unit = frequency_unit
        __self__.keep_at_least_one_backup = keep_at_least_one_backup
        __self__.retention_period_in_days = retention_period_in_days
        __self__.start_time = start_time

@pulumi.input_type
class AppServiceConnectionStringArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The name of the Connection String.
    """
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure` and  `SQLServer`.
    """
    value: pulumi.Input[str] = pulumi.input_property("value")
    """
    The value for the Connection String.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], type: pulumi.Input[str], value: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] name: The name of the Connection String.
        :param pulumi.Input[str] type: The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure` and  `SQLServer`.
        :param pulumi.Input[str] value: The value for the Connection String.
        """
        __self__.name = name
        __self__.type = type
        __self__.value = value

@pulumi.input_type
class AppServiceIdentityArgs:
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    Specifies the identity type of the App Service. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identity_ids` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.
    """
    identity_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("identityIds")
    """
    Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`.
    """
    principal_id: Optional[pulumi.Input[str]] = pulumi.input_property("principalId")
    """
    The Principal ID for the Service Principal associated with the Managed Service Identity of this App Service.
    """
    tenant_id: Optional[pulumi.Input[str]] = pulumi.input_property("tenantId")
    """
    The Tenant ID for the Service Principal associated with the Managed Service Identity of this App Service.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, type: pulumi.Input[str], identity_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, principal_id: Optional[pulumi.Input[str]] = None, tenant_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] type: Specifies the identity type of the App Service. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identity_ids` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.
        :param pulumi.Input[List[pulumi.Input[str]]] identity_ids: Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`.
        :param pulumi.Input[str] principal_id: The Principal ID for the Service Principal associated with the Managed Service Identity of this App Service.
        :param pulumi.Input[str] tenant_id: The Tenant ID for the Service Principal associated with the Managed Service Identity of this App Service.
        """
        __self__.type = type
        __self__.identity_ids = identity_ids
        __self__.principal_id = principal_id
        __self__.tenant_id = tenant_id

@pulumi.input_type
class AppServiceLogsArgs:
    application_logs: Optional[pulumi.Input['AppServiceLogsApplicationLogsArgs']] = pulumi.input_property("applicationLogs")
    """
    An `application_logs` block as defined below.
    """
    http_logs: Optional[pulumi.Input['AppServiceLogsHttpLogsArgs']] = pulumi.input_property("httpLogs")
    """
    An `http_logs` block as defined below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, application_logs: Optional[pulumi.Input['AppServiceLogsApplicationLogsArgs']] = None, http_logs: Optional[pulumi.Input['AppServiceLogsHttpLogsArgs']] = None) -> None:
        """
        :param pulumi.Input['AppServiceLogsApplicationLogsArgs'] application_logs: An `application_logs` block as defined below.
        :param pulumi.Input['AppServiceLogsHttpLogsArgs'] http_logs: An `http_logs` block as defined below.
        """
        __self__.application_logs = application_logs
        __self__.http_logs = http_logs

@pulumi.input_type
class AppServiceLogsApplicationLogsArgs:
    azure_blob_storage: Optional[pulumi.Input['AppServiceLogsApplicationLogsAzureBlobStorageArgs']] = pulumi.input_property("azureBlobStorage")
    """
    An `azure_blob_storage` block as defined below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, azure_blob_storage: Optional[pulumi.Input['AppServiceLogsApplicationLogsAzureBlobStorageArgs']] = None) -> None:
        """
        :param pulumi.Input['AppServiceLogsApplicationLogsAzureBlobStorageArgs'] azure_blob_storage: An `azure_blob_storage` block as defined below.
        """
        __self__.azure_blob_storage = azure_blob_storage

@pulumi.input_type
class AppServiceLogsApplicationLogsAzureBlobStorageArgs:
    level: pulumi.Input[str] = pulumi.input_property("level")
    """
    The level at which to log. Possible values include `Error`, `Warning`, `Information`, `Verbose` and `Off`. **NOTE:** this field is not available for `http_logs`
    """
    retention_in_days: pulumi.Input[float] = pulumi.input_property("retentionInDays")
    """
    The number of days to retain logs for.
    """
    sas_url: pulumi.Input[str] = pulumi.input_property("sasUrl")
    """
    The URL to the storage container, with a Service SAS token appended. **NOTE:** there is currently no means of generating Service SAS tokens with the `azurerm` provider.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, level: pulumi.Input[str], retention_in_days: pulumi.Input[float], sas_url: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] level: The level at which to log. Possible values include `Error`, `Warning`, `Information`, `Verbose` and `Off`. **NOTE:** this field is not available for `http_logs`
        :param pulumi.Input[float] retention_in_days: The number of days to retain logs for.
        :param pulumi.Input[str] sas_url: The URL to the storage container, with a Service SAS token appended. **NOTE:** there is currently no means of generating Service SAS tokens with the `azurerm` provider.
        """
        __self__.level = level
        __self__.retention_in_days = retention_in_days
        __self__.sas_url = sas_url

@pulumi.input_type
class AppServiceLogsHttpLogsArgs:
    azure_blob_storage: Optional[pulumi.Input['AppServiceLogsHttpLogsAzureBlobStorageArgs']] = pulumi.input_property("azureBlobStorage")
    """
    An `azure_blob_storage` block as defined below.
    """
    file_system: Optional[pulumi.Input['AppServiceLogsHttpLogsFileSystemArgs']] = pulumi.input_property("fileSystem")
    """
    A `file_system` block as defined below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, azure_blob_storage: Optional[pulumi.Input['AppServiceLogsHttpLogsAzureBlobStorageArgs']] = None, file_system: Optional[pulumi.Input['AppServiceLogsHttpLogsFileSystemArgs']] = None) -> None:
        """
        :param pulumi.Input['AppServiceLogsHttpLogsAzureBlobStorageArgs'] azure_blob_storage: An `azure_blob_storage` block as defined below.
        :param pulumi.Input['AppServiceLogsHttpLogsFileSystemArgs'] file_system: A `file_system` block as defined below.
        """
        __self__.azure_blob_storage = azure_blob_storage
        __self__.file_system = file_system

@pulumi.input_type
class AppServiceLogsHttpLogsAzureBlobStorageArgs:
    retention_in_days: pulumi.Input[float] = pulumi.input_property("retentionInDays")
    """
    The number of days to retain logs for.
    """
    sas_url: pulumi.Input[str] = pulumi.input_property("sasUrl")
    """
    The URL to the storage container, with a Service SAS token appended. **NOTE:** there is currently no means of generating Service SAS tokens with the `azurerm` provider.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, retention_in_days: pulumi.Input[float], sas_url: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[float] retention_in_days: The number of days to retain logs for.
        :param pulumi.Input[str] sas_url: The URL to the storage container, with a Service SAS token appended. **NOTE:** there is currently no means of generating Service SAS tokens with the `azurerm` provider.
        """
        __self__.retention_in_days = retention_in_days
        __self__.sas_url = sas_url

@pulumi.input_type
class AppServiceLogsHttpLogsFileSystemArgs:
    retention_in_days: pulumi.Input[float] = pulumi.input_property("retentionInDays")
    """
    The number of days to retain logs for.
    """
    retention_in_mb: pulumi.Input[float] = pulumi.input_property("retentionInMb")
    """
    The maximum size in megabytes that http log files can use before being removed.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, retention_in_days: pulumi.Input[float], retention_in_mb: pulumi.Input[float]) -> None:
        """
        :param pulumi.Input[float] retention_in_days: The number of days to retain logs for.
        :param pulumi.Input[float] retention_in_mb: The maximum size in megabytes that http log files can use before being removed.
        """
        __self__.retention_in_days = retention_in_days
        __self__.retention_in_mb = retention_in_mb

@pulumi.input_type
class AppServiceSiteConfigArgs:
    always_on: Optional[pulumi.Input[bool]] = pulumi.input_property("alwaysOn")
    """
    Should the app be loaded at all times? Defaults to `false`.
    """
    app_command_line: Optional[pulumi.Input[str]] = pulumi.input_property("appCommandLine")
    """
    App command line to launch, e.g. `/sbin/myserver -b 0.0.0.0`.
    """
    auto_swap_slot_name: Optional[pulumi.Input[str]] = pulumi.input_property("autoSwapSlotName")
    cors: Optional[pulumi.Input['AppServiceSiteConfigCorsArgs']] = pulumi.input_property("cors")
    """
    A `cors` block as defined below.
    """
    default_documents: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("defaultDocuments")
    """
    The ordering of default documents to load, if an address isn't specified.
    """
    dotnet_framework_version: Optional[pulumi.Input[str]] = pulumi.input_property("dotnetFrameworkVersion")
    """
    The version of the .net framework's CLR used in this App Service. Possible values are `v2.0` (which will use the latest version of the .net framework for the .net CLR v2 - currently `.net 3.5`) and `v4.0` (which corresponds to the latest version of the .net CLR v4 - which at the time of writing is `.net 4.7.1`). [For more information on which .net CLR version to use based on the .net framework you're targeting - please see this table](https://en.wikipedia.org/wiki/.NET_Framework_version_history#Overview). Defaults to `v4.0`.
    """
    ftps_state: Optional[pulumi.Input[str]] = pulumi.input_property("ftpsState")
    """
    State of FTP / FTPS service for this App Service. Possible values include: `AllAllowed`, `FtpsOnly` and `Disabled`.
    """
    health_check_path: Optional[pulumi.Input[str]] = pulumi.input_property("healthCheckPath")
    """
    The health check path to be pinged by App Service. [For more information - please see the corresponding Kudu Wiki page](https://github.com/projectkudu/kudu/wiki/Health-Check-(Preview)).
    """
    http2_enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("http2Enabled")
    """
    Is HTTP2 Enabled on this App Service? Defaults to `false`.
    """
    ip_restrictions: Optional[pulumi.Input[List[pulumi.Input['AppServiceSiteConfigIpRestrictionArgs']]]] = pulumi.input_property("ipRestrictions")
    """
    A list of objects representing ip restrictions as defined below.
    """
    java_container: Optional[pulumi.Input[str]] = pulumi.input_property("javaContainer")
    """
    The Java Container to use. If specified `java_version` and `java_container_version` must also be specified. Possible values are `JAVA`, `JETTY`, and `TOMCAT`.
    """
    java_container_version: Optional[pulumi.Input[str]] = pulumi.input_property("javaContainerVersion")
    """
    The version of the Java Container to use. If specified `java_version` and `java_container` must also be specified.
    """
    java_version: Optional[pulumi.Input[str]] = pulumi.input_property("javaVersion")
    """
    The version of Java to use. If specified `java_container` and `java_container_version` must also be specified. Possible values are `1.7`, `1.8` and `11` and their specific versions - except for Java 11 (e.g. `1.7.0_80`, `1.8.0_181`, `11`)
    """
    linux_fx_version: Optional[pulumi.Input[str]] = pulumi.input_property("linuxFxVersion")
    """
    Linux App Framework and version for the App Service. Possible options are a Docker container (`DOCKER|<user/image:tag>`), a base-64 encoded Docker Compose file (`COMPOSE|${filebase64("compose.yml")}`) or a base-64 encoded Kubernetes Manifest (`KUBE|${filebase64("kubernetes.yml")}`).
    """
    local_mysql_enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("localMysqlEnabled")
    """
    Is "MySQL In App" Enabled? This runs a local MySQL instance with your app and shares resources from the App Service plan.
    """
    managed_pipeline_mode: Optional[pulumi.Input[str]] = pulumi.input_property("managedPipelineMode")
    """
    The Managed Pipeline Mode. Possible values are `Integrated` and `Classic`. Defaults to `Integrated`.
    """
    min_tls_version: Optional[pulumi.Input[str]] = pulumi.input_property("minTlsVersion")
    """
    The minimum supported TLS version for the app service. Possible values are `1.0`, `1.1`, and `1.2`. Defaults to `1.2` for new app services.
    """
    php_version: Optional[pulumi.Input[str]] = pulumi.input_property("phpVersion")
    """
    The version of PHP to use in this App Service. Possible values are `5.5`, `5.6`, `7.0`, `7.1`, `7.2`, and `7.3`.
    """
    python_version: Optional[pulumi.Input[str]] = pulumi.input_property("pythonVersion")
    """
    The version of Python to use in this App Service. Possible values are `2.7` and `3.4`.
    """
    remote_debugging_enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("remoteDebuggingEnabled")
    """
    Is Remote Debugging Enabled? Defaults to `false`.
    """
    remote_debugging_version: Optional[pulumi.Input[str]] = pulumi.input_property("remoteDebuggingVersion")
    """
    Which version of Visual Studio should the Remote Debugger be compatible with? Possible values are `VS2012`, `VS2013`, `VS2015` and `VS2017`.
    """
    scm_ip_restrictions: Optional[pulumi.Input[List[pulumi.Input['AppServiceSiteConfigScmIpRestrictionArgs']]]] = pulumi.input_property("scmIpRestrictions")
    """
    A [List of objects](https://www.terraform.io/docs/configuration/attr-as-blocks.html) representing ip restrictions as defined below.
    """
    scm_type: Optional[pulumi.Input[str]] = pulumi.input_property("scmType")
    """
    The type of Source Control enabled for this App Service. Defaults to `None`. Possible values are: `BitbucketGit`, `BitbucketHg`, `CodePlexGit`, `CodePlexHg`, `Dropbox`, `ExternalGit`, `ExternalHg`, `GitHub`, `LocalGit`, `None`, `OneDrive`, `Tfs`, `VSO`, and `VSTSRM`
    """
    scm_use_main_ip_restriction: Optional[pulumi.Input[bool]] = pulumi.input_property("scmUseMainIpRestriction")
    """
    IP security restrictions for scm to use main. Defaults to false.
    """
    use32_bit_worker_process: Optional[pulumi.Input[bool]] = pulumi.input_property("use32BitWorkerProcess")
    """
    Should the App Service run in 32 bit mode, rather than 64 bit mode?
    """
    websockets_enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("websocketsEnabled")
    """
    Should WebSockets be enabled?
    """
    windows_fx_version: Optional[pulumi.Input[str]] = pulumi.input_property("windowsFxVersion")
    """
    The Windows Docker container image (`DOCKER|<user/image:tag>`)
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, always_on: Optional[pulumi.Input[bool]] = None, app_command_line: Optional[pulumi.Input[str]] = None, auto_swap_slot_name: Optional[pulumi.Input[str]] = None, cors: Optional[pulumi.Input['AppServiceSiteConfigCorsArgs']] = None, default_documents: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, dotnet_framework_version: Optional[pulumi.Input[str]] = None, ftps_state: Optional[pulumi.Input[str]] = None, health_check_path: Optional[pulumi.Input[str]] = None, http2_enabled: Optional[pulumi.Input[bool]] = None, ip_restrictions: Optional[pulumi.Input[List[pulumi.Input['AppServiceSiteConfigIpRestrictionArgs']]]] = None, java_container: Optional[pulumi.Input[str]] = None, java_container_version: Optional[pulumi.Input[str]] = None, java_version: Optional[pulumi.Input[str]] = None, linux_fx_version: Optional[pulumi.Input[str]] = None, local_mysql_enabled: Optional[pulumi.Input[bool]] = None, managed_pipeline_mode: Optional[pulumi.Input[str]] = None, min_tls_version: Optional[pulumi.Input[str]] = None, php_version: Optional[pulumi.Input[str]] = None, python_version: Optional[pulumi.Input[str]] = None, remote_debugging_enabled: Optional[pulumi.Input[bool]] = None, remote_debugging_version: Optional[pulumi.Input[str]] = None, scm_ip_restrictions: Optional[pulumi.Input[List[pulumi.Input['AppServiceSiteConfigScmIpRestrictionArgs']]]] = None, scm_type: Optional[pulumi.Input[str]] = None, scm_use_main_ip_restriction: Optional[pulumi.Input[bool]] = None, use32_bit_worker_process: Optional[pulumi.Input[bool]] = None, websockets_enabled: Optional[pulumi.Input[bool]] = None, windows_fx_version: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[bool] always_on: Should the app be loaded at all times? Defaults to `false`.
        :param pulumi.Input[str] app_command_line: App command line to launch, e.g. `/sbin/myserver -b 0.0.0.0`.
        :param pulumi.Input['AppServiceSiteConfigCorsArgs'] cors: A `cors` block as defined below.
        :param pulumi.Input[List[pulumi.Input[str]]] default_documents: The ordering of default documents to load, if an address isn't specified.
        :param pulumi.Input[str] dotnet_framework_version: The version of the .net framework's CLR used in this App Service. Possible values are `v2.0` (which will use the latest version of the .net framework for the .net CLR v2 - currently `.net 3.5`) and `v4.0` (which corresponds to the latest version of the .net CLR v4 - which at the time of writing is `.net 4.7.1`). [For more information on which .net CLR version to use based on the .net framework you're targeting - please see this table](https://en.wikipedia.org/wiki/.NET_Framework_version_history#Overview). Defaults to `v4.0`.
        :param pulumi.Input[str] ftps_state: State of FTP / FTPS service for this App Service. Possible values include: `AllAllowed`, `FtpsOnly` and `Disabled`.
        :param pulumi.Input[str] health_check_path: The health check path to be pinged by App Service. [For more information - please see the corresponding Kudu Wiki page](https://github.com/projectkudu/kudu/wiki/Health-Check-(Preview)).
        :param pulumi.Input[bool] http2_enabled: Is HTTP2 Enabled on this App Service? Defaults to `false`.
        :param pulumi.Input[List[pulumi.Input['AppServiceSiteConfigIpRestrictionArgs']]] ip_restrictions: A list of objects representing ip restrictions as defined below.
        :param pulumi.Input[str] java_container: The Java Container to use. If specified `java_version` and `java_container_version` must also be specified. Possible values are `JAVA`, `JETTY`, and `TOMCAT`.
        :param pulumi.Input[str] java_container_version: The version of the Java Container to use. If specified `java_version` and `java_container` must also be specified.
        :param pulumi.Input[str] java_version: The version of Java to use. If specified `java_container` and `java_container_version` must also be specified. Possible values are `1.7`, `1.8` and `11` and their specific versions - except for Java 11 (e.g. `1.7.0_80`, `1.8.0_181`, `11`)
        :param pulumi.Input[str] linux_fx_version: Linux App Framework and version for the App Service. Possible options are a Docker container (`DOCKER|<user/image:tag>`), a base-64 encoded Docker Compose file (`COMPOSE|${filebase64("compose.yml")}`) or a base-64 encoded Kubernetes Manifest (`KUBE|${filebase64("kubernetes.yml")}`).
        :param pulumi.Input[bool] local_mysql_enabled: Is "MySQL In App" Enabled? This runs a local MySQL instance with your app and shares resources from the App Service plan.
        :param pulumi.Input[str] managed_pipeline_mode: The Managed Pipeline Mode. Possible values are `Integrated` and `Classic`. Defaults to `Integrated`.
        :param pulumi.Input[str] min_tls_version: The minimum supported TLS version for the app service. Possible values are `1.0`, `1.1`, and `1.2`. Defaults to `1.2` for new app services.
        :param pulumi.Input[str] php_version: The version of PHP to use in this App Service. Possible values are `5.5`, `5.6`, `7.0`, `7.1`, `7.2`, and `7.3`.
        :param pulumi.Input[str] python_version: The version of Python to use in this App Service. Possible values are `2.7` and `3.4`.
        :param pulumi.Input[bool] remote_debugging_enabled: Is Remote Debugging Enabled? Defaults to `false`.
        :param pulumi.Input[str] remote_debugging_version: Which version of Visual Studio should the Remote Debugger be compatible with? Possible values are `VS2012`, `VS2013`, `VS2015` and `VS2017`.
        :param pulumi.Input[List[pulumi.Input['AppServiceSiteConfigScmIpRestrictionArgs']]] scm_ip_restrictions: A [List of objects](https://www.terraform.io/docs/configuration/attr-as-blocks.html) representing ip restrictions as defined below.
        :param pulumi.Input[str] scm_type: The type of Source Control enabled for this App Service. Defaults to `None`. Possible values are: `BitbucketGit`, `BitbucketHg`, `CodePlexGit`, `CodePlexHg`, `Dropbox`, `ExternalGit`, `ExternalHg`, `GitHub`, `LocalGit`, `None`, `OneDrive`, `Tfs`, `VSO`, and `VSTSRM`
        :param pulumi.Input[bool] scm_use_main_ip_restriction: IP security restrictions for scm to use main. Defaults to false.
        :param pulumi.Input[bool] use32_bit_worker_process: Should the App Service run in 32 bit mode, rather than 64 bit mode?
        :param pulumi.Input[bool] websockets_enabled: Should WebSockets be enabled?
        :param pulumi.Input[str] windows_fx_version: The Windows Docker container image (`DOCKER|<user/image:tag>`)
        """
        __self__.always_on = always_on
        __self__.app_command_line = app_command_line
        __self__.auto_swap_slot_name = auto_swap_slot_name
        __self__.cors = cors
        __self__.default_documents = default_documents
        __self__.dotnet_framework_version = dotnet_framework_version
        __self__.ftps_state = ftps_state
        __self__.health_check_path = health_check_path
        __self__.http2_enabled = http2_enabled
        __self__.ip_restrictions = ip_restrictions
        __self__.java_container = java_container
        __self__.java_container_version = java_container_version
        __self__.java_version = java_version
        __self__.linux_fx_version = linux_fx_version
        __self__.local_mysql_enabled = local_mysql_enabled
        __self__.managed_pipeline_mode = managed_pipeline_mode
        __self__.min_tls_version = min_tls_version
        __self__.php_version = php_version
        __self__.python_version = python_version
        __self__.remote_debugging_enabled = remote_debugging_enabled
        __self__.remote_debugging_version = remote_debugging_version
        __self__.scm_ip_restrictions = scm_ip_restrictions
        __self__.scm_type = scm_type
        __self__.scm_use_main_ip_restriction = scm_use_main_ip_restriction
        __self__.use32_bit_worker_process = use32_bit_worker_process
        __self__.websockets_enabled = websockets_enabled
        __self__.windows_fx_version = windows_fx_version

@pulumi.input_type
class AppServiceSiteConfigCorsArgs:
    allowed_origins: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("allowedOrigins")
    """
    A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
    """
    support_credentials: Optional[pulumi.Input[bool]] = pulumi.input_property("supportCredentials")
    """
    Are credentials supported?
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, allowed_origins: pulumi.Input[List[pulumi.Input[str]]], support_credentials: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[str]]] allowed_origins: A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
        :param pulumi.Input[bool] support_credentials: Are credentials supported?
        """
        __self__.allowed_origins = allowed_origins
        __self__.support_credentials = support_credentials

@pulumi.input_type
class AppServiceSiteConfigIpRestrictionArgs:
    action: Optional[pulumi.Input[str]] = pulumi.input_property("action")
    """
    Does this restriction `Allow` or `Deny` access for this IP range. Defaults to `Allow`.
    """
    ip_address: Optional[pulumi.Input[str]] = pulumi.input_property("ipAddress")
    """
    The IP Address used for this IP Restriction in CIDR notation.
    """
    name: Optional[pulumi.Input[str]] = pulumi.input_property("name")
    """
    The name for this IP Restriction.
    """
    priority: Optional[pulumi.Input[float]] = pulumi.input_property("priority")
    """
    The priority for this IP Restriction. Restrictions are enforced in priority order. By default, priority is set to 65000 if not specified.
    """
    virtual_network_subnet_id: Optional[pulumi.Input[str]] = pulumi.input_property("virtualNetworkSubnetId")
    """
    The Virtual Network Subnet ID used for this IP Restriction.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, action: Optional[pulumi.Input[str]] = None, ip_address: Optional[pulumi.Input[str]] = None, name: Optional[pulumi.Input[str]] = None, priority: Optional[pulumi.Input[float]] = None, virtual_network_subnet_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] action: Does this restriction `Allow` or `Deny` access for this IP range. Defaults to `Allow`.
        :param pulumi.Input[str] ip_address: The IP Address used for this IP Restriction in CIDR notation.
        :param pulumi.Input[str] name: The name for this IP Restriction.
        :param pulumi.Input[float] priority: The priority for this IP Restriction. Restrictions are enforced in priority order. By default, priority is set to 65000 if not specified.
        :param pulumi.Input[str] virtual_network_subnet_id: The Virtual Network Subnet ID used for this IP Restriction.
        """
        __self__.action = action
        __self__.ip_address = ip_address
        __self__.name = name
        __self__.priority = priority
        __self__.virtual_network_subnet_id = virtual_network_subnet_id

@pulumi.input_type
class AppServiceSiteConfigScmIpRestrictionArgs:
    action: Optional[pulumi.Input[str]] = pulumi.input_property("action")
    """
    Allow or Deny access for this IP range. Defaults to Allow.
    """
    ip_address: Optional[pulumi.Input[str]] = pulumi.input_property("ipAddress")
    """
    The IP Address used for this IP Restriction in CIDR notation.
    """
    name: Optional[pulumi.Input[str]] = pulumi.input_property("name")
    """
    The name for this IP Restriction.
    """
    priority: Optional[pulumi.Input[float]] = pulumi.input_property("priority")
    """
    The priority for this IP Restriction. Restrictions are enforced in priority order. By default, priority is set to 65000 if not specified.
    """
    virtual_network_subnet_id: Optional[pulumi.Input[str]] = pulumi.input_property("virtualNetworkSubnetId")
    """
    The Virtual Network Subnet ID used for this IP Restriction.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, action: Optional[pulumi.Input[str]] = None, ip_address: Optional[pulumi.Input[str]] = None, name: Optional[pulumi.Input[str]] = None, priority: Optional[pulumi.Input[float]] = None, virtual_network_subnet_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] action: Allow or Deny access for this IP range. Defaults to Allow.
        :param pulumi.Input[str] ip_address: The IP Address used for this IP Restriction in CIDR notation.
        :param pulumi.Input[str] name: The name for this IP Restriction.
        :param pulumi.Input[float] priority: The priority for this IP Restriction. Restrictions are enforced in priority order. By default, priority is set to 65000 if not specified.
        :param pulumi.Input[str] virtual_network_subnet_id: The Virtual Network Subnet ID used for this IP Restriction.
        """
        __self__.action = action
        __self__.ip_address = ip_address
        __self__.name = name
        __self__.priority = priority
        __self__.virtual_network_subnet_id = virtual_network_subnet_id

@pulumi.input_type
class AppServiceSiteCredentialArgs:
    password: Optional[pulumi.Input[str]] = pulumi.input_property("password")
    """
    The password associated with the username, which can be used to publish to this App Service.
    """
    username: Optional[pulumi.Input[str]] = pulumi.input_property("username")
    """
    The username which can be used to publish to this App Service
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, password: Optional[pulumi.Input[str]] = None, username: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] password: The password associated with the username, which can be used to publish to this App Service.
        :param pulumi.Input[str] username: The username which can be used to publish to this App Service
        """
        __self__.password = password
        __self__.username = username

@pulumi.input_type
class AppServiceSourceControlArgs:
    branch: Optional[pulumi.Input[str]] = pulumi.input_property("branch")
    """
    Branch name of the Git repository for this App Service.
    """
    repo_url: Optional[pulumi.Input[str]] = pulumi.input_property("repoUrl")
    """
    URL of the Git repository for this App Service.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, branch: Optional[pulumi.Input[str]] = None, repo_url: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] branch: Branch name of the Git repository for this App Service.
        :param pulumi.Input[str] repo_url: URL of the Git repository for this App Service.
        """
        __self__.branch = branch
        __self__.repo_url = repo_url

@pulumi.input_type
class AppServiceStorageAccountArgs:
    access_key: pulumi.Input[str] = pulumi.input_property("accessKey")
    """
    The access key for the storage account.
    """
    account_name: pulumi.Input[str] = pulumi.input_property("accountName")
    """
    The name of the storage account.
    """
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The name of the storage account identifier.
    """
    share_name: pulumi.Input[str] = pulumi.input_property("shareName")
    """
    The name of the file share (container name, for Blob storage).
    """
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    The type of storage. Possible values are `AzureBlob` and `AzureFiles`.
    """
    mount_path: Optional[pulumi.Input[str]] = pulumi.input_property("mountPath")
    """
    The path to mount the storage within the site's runtime environment.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, access_key: pulumi.Input[str], account_name: pulumi.Input[str], name: pulumi.Input[str], share_name: pulumi.Input[str], type: pulumi.Input[str], mount_path: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] access_key: The access key for the storage account.
        :param pulumi.Input[str] account_name: The name of the storage account.
        :param pulumi.Input[str] name: The name of the storage account identifier.
        :param pulumi.Input[str] share_name: The name of the file share (container name, for Blob storage).
        :param pulumi.Input[str] type: The type of storage. Possible values are `AzureBlob` and `AzureFiles`.
        :param pulumi.Input[str] mount_path: The path to mount the storage within the site's runtime environment.
        """
        __self__.access_key = access_key
        __self__.account_name = account_name
        __self__.name = name
        __self__.share_name = share_name
        __self__.type = type
        __self__.mount_path = mount_path

@pulumi.input_type
class CertificateOrderCertificateArgs:
    certificate_name: Optional[pulumi.Input[str]] = pulumi.input_property("certificateName")
    """
    The name of the App Service Certificate.
    """
    key_vault_id: Optional[pulumi.Input[str]] = pulumi.input_property("keyVaultId")
    """
    Key Vault resource Id.
    """
    key_vault_secret_name: Optional[pulumi.Input[str]] = pulumi.input_property("keyVaultSecretName")
    """
    Key Vault secret name.
    """
    provisioning_state: Optional[pulumi.Input[str]] = pulumi.input_property("provisioningState")
    """
    Status of the Key Vault secret.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, certificate_name: Optional[pulumi.Input[str]] = None, key_vault_id: Optional[pulumi.Input[str]] = None, key_vault_secret_name: Optional[pulumi.Input[str]] = None, provisioning_state: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] certificate_name: The name of the App Service Certificate.
        :param pulumi.Input[str] key_vault_id: Key Vault resource Id.
        :param pulumi.Input[str] key_vault_secret_name: Key Vault secret name.
        :param pulumi.Input[str] provisioning_state: Status of the Key Vault secret.
        """
        __self__.certificate_name = certificate_name
        __self__.key_vault_id = key_vault_id
        __self__.key_vault_secret_name = key_vault_secret_name
        __self__.provisioning_state = provisioning_state

@pulumi.input_type
class FunctionAppAuthSettingsArgs:
    enabled: pulumi.Input[bool] = pulumi.input_property("enabled")
    """
    Is Authentication enabled?
    """
    active_directory: Optional[pulumi.Input['FunctionAppAuthSettingsActiveDirectoryArgs']] = pulumi.input_property("activeDirectory")
    """
    A `active_directory` block as defined below.
    """
    additional_login_params: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("additionalLoginParams")
    """
    Login parameters to send to the OpenID Connect authorization endpoint when a user logs in. Each parameter must be in the form "key=value".
    """
    allowed_external_redirect_urls: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("allowedExternalRedirectUrls")
    """
    External URLs that can be redirected to as part of logging in or logging out of the app.
    """
    default_provider: Optional[pulumi.Input[str]] = pulumi.input_property("defaultProvider")
    """
    The default provider to use when multiple providers have been set up. Possible values are `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount` and `Twitter`.
    """
    facebook: Optional[pulumi.Input['FunctionAppAuthSettingsFacebookArgs']] = pulumi.input_property("facebook")
    """
    A `facebook` block as defined below.
    """
    google: Optional[pulumi.Input['FunctionAppAuthSettingsGoogleArgs']] = pulumi.input_property("google")
    """
    A `google` block as defined below.
    """
    issuer: Optional[pulumi.Input[str]] = pulumi.input_property("issuer")
    """
    Issuer URI. When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.
    """
    microsoft: Optional[pulumi.Input['FunctionAppAuthSettingsMicrosoftArgs']] = pulumi.input_property("microsoft")
    """
    A `microsoft` block as defined below.
    """
    runtime_version: Optional[pulumi.Input[str]] = pulumi.input_property("runtimeVersion")
    """
    The runtime version of the Authentication/Authorization module.
    """
    token_refresh_extension_hours: Optional[pulumi.Input[float]] = pulumi.input_property("tokenRefreshExtensionHours")
    """
    The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72.
    """
    token_store_enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("tokenStoreEnabled")
    """
    If enabled the module will durably store platform-specific security tokens that are obtained during login flows. Defaults to false.
    """
    twitter: Optional[pulumi.Input['FunctionAppAuthSettingsTwitterArgs']] = pulumi.input_property("twitter")
    """
    A `twitter` block as defined below.
    """
    unauthenticated_client_action: Optional[pulumi.Input[str]] = pulumi.input_property("unauthenticatedClientAction")
    """
    The action to take when an unauthenticated client attempts to access the app. Possible values are `AllowAnonymous` and `RedirectToLoginPage`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, enabled: pulumi.Input[bool], active_directory: Optional[pulumi.Input['FunctionAppAuthSettingsActiveDirectoryArgs']] = None, additional_login_params: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None, allowed_external_redirect_urls: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, default_provider: Optional[pulumi.Input[str]] = None, facebook: Optional[pulumi.Input['FunctionAppAuthSettingsFacebookArgs']] = None, google: Optional[pulumi.Input['FunctionAppAuthSettingsGoogleArgs']] = None, issuer: Optional[pulumi.Input[str]] = None, microsoft: Optional[pulumi.Input['FunctionAppAuthSettingsMicrosoftArgs']] = None, runtime_version: Optional[pulumi.Input[str]] = None, token_refresh_extension_hours: Optional[pulumi.Input[float]] = None, token_store_enabled: Optional[pulumi.Input[bool]] = None, twitter: Optional[pulumi.Input['FunctionAppAuthSettingsTwitterArgs']] = None, unauthenticated_client_action: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[bool] enabled: Is Authentication enabled?
        :param pulumi.Input['FunctionAppAuthSettingsActiveDirectoryArgs'] active_directory: A `active_directory` block as defined below.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] additional_login_params: Login parameters to send to the OpenID Connect authorization endpoint when a user logs in. Each parameter must be in the form "key=value".
        :param pulumi.Input[List[pulumi.Input[str]]] allowed_external_redirect_urls: External URLs that can be redirected to as part of logging in or logging out of the app.
        :param pulumi.Input[str] default_provider: The default provider to use when multiple providers have been set up. Possible values are `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount` and `Twitter`.
        :param pulumi.Input['FunctionAppAuthSettingsFacebookArgs'] facebook: A `facebook` block as defined below.
        :param pulumi.Input['FunctionAppAuthSettingsGoogleArgs'] google: A `google` block as defined below.
        :param pulumi.Input[str] issuer: Issuer URI. When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.
        :param pulumi.Input['FunctionAppAuthSettingsMicrosoftArgs'] microsoft: A `microsoft` block as defined below.
        :param pulumi.Input[str] runtime_version: The runtime version of the Authentication/Authorization module.
        :param pulumi.Input[float] token_refresh_extension_hours: The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72.
        :param pulumi.Input[bool] token_store_enabled: If enabled the module will durably store platform-specific security tokens that are obtained during login flows. Defaults to false.
        :param pulumi.Input['FunctionAppAuthSettingsTwitterArgs'] twitter: A `twitter` block as defined below.
        :param pulumi.Input[str] unauthenticated_client_action: The action to take when an unauthenticated client attempts to access the app. Possible values are `AllowAnonymous` and `RedirectToLoginPage`.
        """
        __self__.enabled = enabled
        __self__.active_directory = active_directory
        __self__.additional_login_params = additional_login_params
        __self__.allowed_external_redirect_urls = allowed_external_redirect_urls
        __self__.default_provider = default_provider
        __self__.facebook = facebook
        __self__.google = google
        __self__.issuer = issuer
        __self__.microsoft = microsoft
        __self__.runtime_version = runtime_version
        __self__.token_refresh_extension_hours = token_refresh_extension_hours
        __self__.token_store_enabled = token_store_enabled
        __self__.twitter = twitter
        __self__.unauthenticated_client_action = unauthenticated_client_action

@pulumi.input_type
class FunctionAppAuthSettingsActiveDirectoryArgs:
    client_id: pulumi.Input[str] = pulumi.input_property("clientId")
    """
    The Client ID of this relying party application. Enables OpenIDConnection authentication with Azure Active Directory.
    """
    allowed_audiences: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("allowedAudiences")
    """
    Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
    """
    client_secret: Optional[pulumi.Input[str]] = pulumi.input_property("clientSecret")
    """
    The Client Secret of this relying party application. If no secret is provided, implicit flow will be used.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, client_id: pulumi.Input[str], allowed_audiences: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, client_secret: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] client_id: The Client ID of this relying party application. Enables OpenIDConnection authentication with Azure Active Directory.
        :param pulumi.Input[List[pulumi.Input[str]]] allowed_audiences: Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
        :param pulumi.Input[str] client_secret: The Client Secret of this relying party application. If no secret is provided, implicit flow will be used.
        """
        __self__.client_id = client_id
        __self__.allowed_audiences = allowed_audiences
        __self__.client_secret = client_secret

@pulumi.input_type
class FunctionAppAuthSettingsFacebookArgs:
    app_id: pulumi.Input[str] = pulumi.input_property("appId")
    """
    The App ID of the Facebook app used for login
    """
    app_secret: pulumi.Input[str] = pulumi.input_property("appSecret")
    """
    The App Secret of the Facebook app used for Facebook Login.
    """
    oauth_scopes: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("oauthScopes")
    """
    The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication. https://developers.facebook.com/docs/facebook-login
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, app_id: pulumi.Input[str], app_secret: pulumi.Input[str], oauth_scopes: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[str] app_id: The App ID of the Facebook app used for login
        :param pulumi.Input[str] app_secret: The App Secret of the Facebook app used for Facebook Login.
        :param pulumi.Input[List[pulumi.Input[str]]] oauth_scopes: The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication. https://developers.facebook.com/docs/facebook-login
        """
        __self__.app_id = app_id
        __self__.app_secret = app_secret
        __self__.oauth_scopes = oauth_scopes

@pulumi.input_type
class FunctionAppAuthSettingsGoogleArgs:
    client_id: pulumi.Input[str] = pulumi.input_property("clientId")
    """
    The OpenID Connect Client ID for the Google web application.
    """
    client_secret: pulumi.Input[str] = pulumi.input_property("clientSecret")
    """
    The client secret associated with the Google web application.
    """
    oauth_scopes: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("oauthScopes")
    """
    The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. https://developers.google.com/identity/sign-in/web/
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, client_id: pulumi.Input[str], client_secret: pulumi.Input[str], oauth_scopes: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[str] client_id: The OpenID Connect Client ID for the Google web application.
        :param pulumi.Input[str] client_secret: The client secret associated with the Google web application.
        :param pulumi.Input[List[pulumi.Input[str]]] oauth_scopes: The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. https://developers.google.com/identity/sign-in/web/
        """
        __self__.client_id = client_id
        __self__.client_secret = client_secret
        __self__.oauth_scopes = oauth_scopes

@pulumi.input_type
class FunctionAppAuthSettingsMicrosoftArgs:
    client_id: pulumi.Input[str] = pulumi.input_property("clientId")
    """
    The OAuth 2.0 client ID that was created for the app used for authentication.
    """
    client_secret: pulumi.Input[str] = pulumi.input_property("clientSecret")
    """
    The OAuth 2.0 client secret that was created for the app used for authentication.
    """
    oauth_scopes: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("oauthScopes")
    """
    The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. https://msdn.microsoft.com/en-us/library/dn631845.aspx
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, client_id: pulumi.Input[str], client_secret: pulumi.Input[str], oauth_scopes: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[str] client_id: The OAuth 2.0 client ID that was created for the app used for authentication.
        :param pulumi.Input[str] client_secret: The OAuth 2.0 client secret that was created for the app used for authentication.
        :param pulumi.Input[List[pulumi.Input[str]]] oauth_scopes: The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. https://msdn.microsoft.com/en-us/library/dn631845.aspx
        """
        __self__.client_id = client_id
        __self__.client_secret = client_secret
        __self__.oauth_scopes = oauth_scopes

@pulumi.input_type
class FunctionAppAuthSettingsTwitterArgs:
    consumer_key: pulumi.Input[str] = pulumi.input_property("consumerKey")
    consumer_secret: pulumi.Input[str] = pulumi.input_property("consumerSecret")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, consumer_key: pulumi.Input[str], consumer_secret: pulumi.Input[str]) -> None:
        __self__.consumer_key = consumer_key
        __self__.consumer_secret = consumer_secret

@pulumi.input_type
class FunctionAppConnectionStringArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The name of the Connection String.
    """
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure` and  `SQLServer`.
    """
    value: pulumi.Input[str] = pulumi.input_property("value")
    """
    The value for the Connection String.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], type: pulumi.Input[str], value: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] name: The name of the Connection String.
        :param pulumi.Input[str] type: The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure` and  `SQLServer`.
        :param pulumi.Input[str] value: The value for the Connection String.
        """
        __self__.name = name
        __self__.type = type
        __self__.value = value

@pulumi.input_type
class FunctionAppIdentityArgs:
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    Specifies the identity type of the Function App. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identity_ids` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.
    """
    identity_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("identityIds")
    """
    Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`.
    """
    principal_id: Optional[pulumi.Input[str]] = pulumi.input_property("principalId")
    """
    The Principal ID for the Service Principal associated with the Managed Service Identity of this App Service.
    """
    tenant_id: Optional[pulumi.Input[str]] = pulumi.input_property("tenantId")
    """
    The Tenant ID for the Service Principal associated with the Managed Service Identity of this App Service.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, type: pulumi.Input[str], identity_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, principal_id: Optional[pulumi.Input[str]] = None, tenant_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] type: Specifies the identity type of the Function App. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identity_ids` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.
        :param pulumi.Input[List[pulumi.Input[str]]] identity_ids: Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`.
        :param pulumi.Input[str] principal_id: The Principal ID for the Service Principal associated with the Managed Service Identity of this App Service.
        :param pulumi.Input[str] tenant_id: The Tenant ID for the Service Principal associated with the Managed Service Identity of this App Service.
        """
        __self__.type = type
        __self__.identity_ids = identity_ids
        __self__.principal_id = principal_id
        __self__.tenant_id = tenant_id

@pulumi.input_type
class FunctionAppSiteConfigArgs:
    always_on: Optional[pulumi.Input[bool]] = pulumi.input_property("alwaysOn")
    """
    Should the Function App be loaded at all times? Defaults to `false`.
    """
    cors: Optional[pulumi.Input['FunctionAppSiteConfigCorsArgs']] = pulumi.input_property("cors")
    """
    A `cors` block as defined below.
    """
    ftps_state: Optional[pulumi.Input[str]] = pulumi.input_property("ftpsState")
    """
    State of FTP / FTPS service for this function app. Possible values include: `AllAllowed`, `FtpsOnly` and `Disabled`.
    """
    http2_enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("http2Enabled")
    """
    Specifies whether or not the http2 protocol should be enabled. Defaults to `false`.
    """
    ip_restrictions: Optional[pulumi.Input[List[pulumi.Input['FunctionAppSiteConfigIpRestrictionArgs']]]] = pulumi.input_property("ipRestrictions")
    """
    A list of objects representing ip restrictions as defined below.
    """
    linux_fx_version: Optional[pulumi.Input[str]] = pulumi.input_property("linuxFxVersion")
    """
    Linux App Framework and version for the AppService, e.g. `DOCKER|(golang:latest)`.
    """
    min_tls_version: Optional[pulumi.Input[str]] = pulumi.input_property("minTlsVersion")
    """
    The minimum supported TLS version for the function app. Possible values are `1.0`, `1.1`, and `1.2`. Defaults to `1.2` for new function apps.
    """
    pre_warmed_instance_count: Optional[pulumi.Input[float]] = pulumi.input_property("preWarmedInstanceCount")
    """
    The number of pre-warmed instances for this function app. Only affects apps on the Premium plan.
    """
    use32_bit_worker_process: Optional[pulumi.Input[bool]] = pulumi.input_property("use32BitWorkerProcess")
    """
    Should the Function App run in 32 bit mode, rather than 64 bit mode? Defaults to `true`.
    """
    websockets_enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("websocketsEnabled")
    """
    Should WebSockets be enabled?
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, always_on: Optional[pulumi.Input[bool]] = None, cors: Optional[pulumi.Input['FunctionAppSiteConfigCorsArgs']] = None, ftps_state: Optional[pulumi.Input[str]] = None, http2_enabled: Optional[pulumi.Input[bool]] = None, ip_restrictions: Optional[pulumi.Input[List[pulumi.Input['FunctionAppSiteConfigIpRestrictionArgs']]]] = None, linux_fx_version: Optional[pulumi.Input[str]] = None, min_tls_version: Optional[pulumi.Input[str]] = None, pre_warmed_instance_count: Optional[pulumi.Input[float]] = None, use32_bit_worker_process: Optional[pulumi.Input[bool]] = None, websockets_enabled: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[bool] always_on: Should the Function App be loaded at all times? Defaults to `false`.
        :param pulumi.Input['FunctionAppSiteConfigCorsArgs'] cors: A `cors` block as defined below.
        :param pulumi.Input[str] ftps_state: State of FTP / FTPS service for this function app. Possible values include: `AllAllowed`, `FtpsOnly` and `Disabled`.
        :param pulumi.Input[bool] http2_enabled: Specifies whether or not the http2 protocol should be enabled. Defaults to `false`.
        :param pulumi.Input[List[pulumi.Input['FunctionAppSiteConfigIpRestrictionArgs']]] ip_restrictions: A list of objects representing ip restrictions as defined below.
        :param pulumi.Input[str] linux_fx_version: Linux App Framework and version for the AppService, e.g. `DOCKER|(golang:latest)`.
        :param pulumi.Input[str] min_tls_version: The minimum supported TLS version for the function app. Possible values are `1.0`, `1.1`, and `1.2`. Defaults to `1.2` for new function apps.
        :param pulumi.Input[float] pre_warmed_instance_count: The number of pre-warmed instances for this function app. Only affects apps on the Premium plan.
        :param pulumi.Input[bool] use32_bit_worker_process: Should the Function App run in 32 bit mode, rather than 64 bit mode? Defaults to `true`.
        :param pulumi.Input[bool] websockets_enabled: Should WebSockets be enabled?
        """
        __self__.always_on = always_on
        __self__.cors = cors
        __self__.ftps_state = ftps_state
        __self__.http2_enabled = http2_enabled
        __self__.ip_restrictions = ip_restrictions
        __self__.linux_fx_version = linux_fx_version
        __self__.min_tls_version = min_tls_version
        __self__.pre_warmed_instance_count = pre_warmed_instance_count
        __self__.use32_bit_worker_process = use32_bit_worker_process
        __self__.websockets_enabled = websockets_enabled

@pulumi.input_type
class FunctionAppSiteConfigCorsArgs:
    allowed_origins: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("allowedOrigins")
    """
    A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
    """
    support_credentials: Optional[pulumi.Input[bool]] = pulumi.input_property("supportCredentials")
    """
    Are credentials supported?
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, allowed_origins: pulumi.Input[List[pulumi.Input[str]]], support_credentials: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[str]]] allowed_origins: A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
        :param pulumi.Input[bool] support_credentials: Are credentials supported?
        """
        __self__.allowed_origins = allowed_origins
        __self__.support_credentials = support_credentials

@pulumi.input_type
class FunctionAppSiteConfigIpRestrictionArgs:
    ip_address: Optional[pulumi.Input[str]] = pulumi.input_property("ipAddress")
    """
    The IP Address CIDR notation used for this IP Restriction.
    """
    subnet_id: Optional[pulumi.Input[str]] = pulumi.input_property("subnetId")
    """
    The Subnet ID used for this IP Restriction.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, ip_address: Optional[pulumi.Input[str]] = None, subnet_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] ip_address: The IP Address CIDR notation used for this IP Restriction.
        :param pulumi.Input[str] subnet_id: The Subnet ID used for this IP Restriction.
        """
        __self__.ip_address = ip_address
        __self__.subnet_id = subnet_id

@pulumi.input_type
class FunctionAppSiteCredentialArgs:
    password: Optional[pulumi.Input[str]] = pulumi.input_property("password")
    """
    The password associated with the username, which can be used to publish to this App Service.
    """
    username: Optional[pulumi.Input[str]] = pulumi.input_property("username")
    """
    The username which can be used to publish to this App Service
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, password: Optional[pulumi.Input[str]] = None, username: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] password: The password associated with the username, which can be used to publish to this App Service.
        :param pulumi.Input[str] username: The username which can be used to publish to this App Service
        """
        __self__.password = password
        __self__.username = username

@pulumi.input_type
class FunctionAppSlotAuthSettingsArgs:
    enabled: pulumi.Input[bool] = pulumi.input_property("enabled")
    """
    Is Authentication enabled?
    """
    active_directory: Optional[pulumi.Input['FunctionAppSlotAuthSettingsActiveDirectoryArgs']] = pulumi.input_property("activeDirectory")
    """
    An `active_directory` block as defined below.
    """
    additional_login_params: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("additionalLoginParams")
    """
    Login parameters to send to the OpenID Connect authorization endpoint when a user logs in. Each parameter must be in the form "key=value".
    """
    allowed_external_redirect_urls: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("allowedExternalRedirectUrls")
    """
    External URLs that can be redirected to as part of logging in or logging out of the app.
    """
    default_provider: Optional[pulumi.Input[str]] = pulumi.input_property("defaultProvider")
    """
    The default provider to use when multiple providers have been set up. Possible values are `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount` and `Twitter`.
    """
    facebook: Optional[pulumi.Input['FunctionAppSlotAuthSettingsFacebookArgs']] = pulumi.input_property("facebook")
    """
    A `facebook` block as defined below.
    """
    google: Optional[pulumi.Input['FunctionAppSlotAuthSettingsGoogleArgs']] = pulumi.input_property("google")
    """
    A `google` block as defined below.
    """
    issuer: Optional[pulumi.Input[str]] = pulumi.input_property("issuer")
    """
    Issuer URI. When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.
    """
    microsoft: Optional[pulumi.Input['FunctionAppSlotAuthSettingsMicrosoftArgs']] = pulumi.input_property("microsoft")
    """
    A `microsoft` block as defined below.
    """
    runtime_version: Optional[pulumi.Input[str]] = pulumi.input_property("runtimeVersion")
    """
    The runtime version of the Authentication/Authorization module.
    """
    token_refresh_extension_hours: Optional[pulumi.Input[float]] = pulumi.input_property("tokenRefreshExtensionHours")
    """
    The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72.
    """
    token_store_enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("tokenStoreEnabled")
    """
    If enabled the module will durably store platform-specific security tokens that are obtained during login flows. Defaults to false.
    """
    twitter: Optional[pulumi.Input['FunctionAppSlotAuthSettingsTwitterArgs']] = pulumi.input_property("twitter")
    """
    A `twitter` block as defined below.
    """
    unauthenticated_client_action: Optional[pulumi.Input[str]] = pulumi.input_property("unauthenticatedClientAction")
    """
    The action to take when an unauthenticated client attempts to access the app. Possible values are `AllowAnonymous` and `RedirectToLoginPage`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, enabled: pulumi.Input[bool], active_directory: Optional[pulumi.Input['FunctionAppSlotAuthSettingsActiveDirectoryArgs']] = None, additional_login_params: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None, allowed_external_redirect_urls: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, default_provider: Optional[pulumi.Input[str]] = None, facebook: Optional[pulumi.Input['FunctionAppSlotAuthSettingsFacebookArgs']] = None, google: Optional[pulumi.Input['FunctionAppSlotAuthSettingsGoogleArgs']] = None, issuer: Optional[pulumi.Input[str]] = None, microsoft: Optional[pulumi.Input['FunctionAppSlotAuthSettingsMicrosoftArgs']] = None, runtime_version: Optional[pulumi.Input[str]] = None, token_refresh_extension_hours: Optional[pulumi.Input[float]] = None, token_store_enabled: Optional[pulumi.Input[bool]] = None, twitter: Optional[pulumi.Input['FunctionAppSlotAuthSettingsTwitterArgs']] = None, unauthenticated_client_action: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[bool] enabled: Is Authentication enabled?
        :param pulumi.Input['FunctionAppSlotAuthSettingsActiveDirectoryArgs'] active_directory: An `active_directory` block as defined below.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] additional_login_params: Login parameters to send to the OpenID Connect authorization endpoint when a user logs in. Each parameter must be in the form "key=value".
        :param pulumi.Input[List[pulumi.Input[str]]] allowed_external_redirect_urls: External URLs that can be redirected to as part of logging in or logging out of the app.
        :param pulumi.Input[str] default_provider: The default provider to use when multiple providers have been set up. Possible values are `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount` and `Twitter`.
        :param pulumi.Input['FunctionAppSlotAuthSettingsFacebookArgs'] facebook: A `facebook` block as defined below.
        :param pulumi.Input['FunctionAppSlotAuthSettingsGoogleArgs'] google: A `google` block as defined below.
        :param pulumi.Input[str] issuer: Issuer URI. When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.
        :param pulumi.Input['FunctionAppSlotAuthSettingsMicrosoftArgs'] microsoft: A `microsoft` block as defined below.
        :param pulumi.Input[str] runtime_version: The runtime version of the Authentication/Authorization module.
        :param pulumi.Input[float] token_refresh_extension_hours: The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72.
        :param pulumi.Input[bool] token_store_enabled: If enabled the module will durably store platform-specific security tokens that are obtained during login flows. Defaults to false.
        :param pulumi.Input['FunctionAppSlotAuthSettingsTwitterArgs'] twitter: A `twitter` block as defined below.
        :param pulumi.Input[str] unauthenticated_client_action: The action to take when an unauthenticated client attempts to access the app. Possible values are `AllowAnonymous` and `RedirectToLoginPage`.
        """
        __self__.enabled = enabled
        __self__.active_directory = active_directory
        __self__.additional_login_params = additional_login_params
        __self__.allowed_external_redirect_urls = allowed_external_redirect_urls
        __self__.default_provider = default_provider
        __self__.facebook = facebook
        __self__.google = google
        __self__.issuer = issuer
        __self__.microsoft = microsoft
        __self__.runtime_version = runtime_version
        __self__.token_refresh_extension_hours = token_refresh_extension_hours
        __self__.token_store_enabled = token_store_enabled
        __self__.twitter = twitter
        __self__.unauthenticated_client_action = unauthenticated_client_action

@pulumi.input_type
class FunctionAppSlotAuthSettingsActiveDirectoryArgs:
    client_id: pulumi.Input[str] = pulumi.input_property("clientId")
    """
    The Client ID of this relying party application. Enables OpenIDConnection authentication with Azure Active Directory.
    """
    allowed_audiences: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("allowedAudiences")
    """
    Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
    """
    client_secret: Optional[pulumi.Input[str]] = pulumi.input_property("clientSecret")
    """
    The Client Secret of this relying party application. If no secret is provided, implicit flow will be used.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, client_id: pulumi.Input[str], allowed_audiences: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, client_secret: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] client_id: The Client ID of this relying party application. Enables OpenIDConnection authentication with Azure Active Directory.
        :param pulumi.Input[List[pulumi.Input[str]]] allowed_audiences: Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
        :param pulumi.Input[str] client_secret: The Client Secret of this relying party application. If no secret is provided, implicit flow will be used.
        """
        __self__.client_id = client_id
        __self__.allowed_audiences = allowed_audiences
        __self__.client_secret = client_secret

@pulumi.input_type
class FunctionAppSlotAuthSettingsFacebookArgs:
    app_id: pulumi.Input[str] = pulumi.input_property("appId")
    """
    The App ID of the Facebook app used for login
    """
    app_secret: pulumi.Input[str] = pulumi.input_property("appSecret")
    """
    The App Secret of the Facebook app used for Facebook Login.
    """
    oauth_scopes: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("oauthScopes")
    """
    The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication. https://developers.facebook.com/docs/facebook-login
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, app_id: pulumi.Input[str], app_secret: pulumi.Input[str], oauth_scopes: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[str] app_id: The App ID of the Facebook app used for login
        :param pulumi.Input[str] app_secret: The App Secret of the Facebook app used for Facebook Login.
        :param pulumi.Input[List[pulumi.Input[str]]] oauth_scopes: The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication. https://developers.facebook.com/docs/facebook-login
        """
        __self__.app_id = app_id
        __self__.app_secret = app_secret
        __self__.oauth_scopes = oauth_scopes

@pulumi.input_type
class FunctionAppSlotAuthSettingsGoogleArgs:
    client_id: pulumi.Input[str] = pulumi.input_property("clientId")
    """
    The OpenID Connect Client ID for the Google web application.
    """
    client_secret: pulumi.Input[str] = pulumi.input_property("clientSecret")
    """
    The client secret associated with the Google web application.
    """
    oauth_scopes: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("oauthScopes")
    """
    The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. https://developers.google.com/identity/sign-in/web/
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, client_id: pulumi.Input[str], client_secret: pulumi.Input[str], oauth_scopes: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[str] client_id: The OpenID Connect Client ID for the Google web application.
        :param pulumi.Input[str] client_secret: The client secret associated with the Google web application.
        :param pulumi.Input[List[pulumi.Input[str]]] oauth_scopes: The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. https://developers.google.com/identity/sign-in/web/
        """
        __self__.client_id = client_id
        __self__.client_secret = client_secret
        __self__.oauth_scopes = oauth_scopes

@pulumi.input_type
class FunctionAppSlotAuthSettingsMicrosoftArgs:
    client_id: pulumi.Input[str] = pulumi.input_property("clientId")
    """
    The OAuth 2.0 client ID that was created for the app used for authentication.
    """
    client_secret: pulumi.Input[str] = pulumi.input_property("clientSecret")
    """
    The OAuth 2.0 client secret that was created for the app used for authentication.
    """
    oauth_scopes: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("oauthScopes")
    """
    The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. https://msdn.microsoft.com/en-us/library/dn631845.aspx
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, client_id: pulumi.Input[str], client_secret: pulumi.Input[str], oauth_scopes: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[str] client_id: The OAuth 2.0 client ID that was created for the app used for authentication.
        :param pulumi.Input[str] client_secret: The OAuth 2.0 client secret that was created for the app used for authentication.
        :param pulumi.Input[List[pulumi.Input[str]]] oauth_scopes: The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. https://msdn.microsoft.com/en-us/library/dn631845.aspx
        """
        __self__.client_id = client_id
        __self__.client_secret = client_secret
        __self__.oauth_scopes = oauth_scopes

@pulumi.input_type
class FunctionAppSlotAuthSettingsTwitterArgs:
    consumer_key: pulumi.Input[str] = pulumi.input_property("consumerKey")
    consumer_secret: pulumi.Input[str] = pulumi.input_property("consumerSecret")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, consumer_key: pulumi.Input[str], consumer_secret: pulumi.Input[str]) -> None:
        __self__.consumer_key = consumer_key
        __self__.consumer_secret = consumer_secret

@pulumi.input_type
class FunctionAppSlotConnectionStringArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The name of the Connection String.
    """
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure` and  `SQLServer`.
    """
    value: pulumi.Input[str] = pulumi.input_property("value")
    """
    The value for the Connection String.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], type: pulumi.Input[str], value: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] name: The name of the Connection String.
        :param pulumi.Input[str] type: The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure` and  `SQLServer`.
        :param pulumi.Input[str] value: The value for the Connection String.
        """
        __self__.name = name
        __self__.type = type
        __self__.value = value

@pulumi.input_type
class FunctionAppSlotIdentityArgs:
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    Specifies the identity type of the Function App. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identity_ids` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.
    """
    identity_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("identityIds")
    """
    Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`.
    """
    principal_id: Optional[pulumi.Input[str]] = pulumi.input_property("principalId")
    """
    The Principal ID for the Service Principal associated with the Managed Service Identity of this App Service.
    """
    tenant_id: Optional[pulumi.Input[str]] = pulumi.input_property("tenantId")
    """
    The Tenant ID for the Service Principal associated with the Managed Service Identity of this App Service.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, type: pulumi.Input[str], identity_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, principal_id: Optional[pulumi.Input[str]] = None, tenant_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] type: Specifies the identity type of the Function App. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identity_ids` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.
        :param pulumi.Input[List[pulumi.Input[str]]] identity_ids: Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`.
        :param pulumi.Input[str] principal_id: The Principal ID for the Service Principal associated with the Managed Service Identity of this App Service.
        :param pulumi.Input[str] tenant_id: The Tenant ID for the Service Principal associated with the Managed Service Identity of this App Service.
        """
        __self__.type = type
        __self__.identity_ids = identity_ids
        __self__.principal_id = principal_id
        __self__.tenant_id = tenant_id

@pulumi.input_type
class FunctionAppSlotSiteConfigArgs:
    always_on: Optional[pulumi.Input[bool]] = pulumi.input_property("alwaysOn")
    """
    Should the Function App be loaded at all times? Defaults to `false`.
    """
    cors: Optional[pulumi.Input['FunctionAppSlotSiteConfigCorsArgs']] = pulumi.input_property("cors")
    """
    A `cors` block as defined below.
    """
    ftps_state: Optional[pulumi.Input[str]] = pulumi.input_property("ftpsState")
    """
    State of FTP / FTPS service for this function app. Possible values include: `AllAllowed`, `FtpsOnly` and `Disabled`.
    """
    http2_enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("http2Enabled")
    """
    Specifies whether or not the http2 protocol should be enabled. Defaults to `false`.
    """
    ip_restrictions: Optional[pulumi.Input[List[pulumi.Input['FunctionAppSlotSiteConfigIpRestrictionArgs']]]] = pulumi.input_property("ipRestrictions")
    """
    A [List of objects](https://www.terraform.io/docs/configuration/attr-as-blocks.html) representing ip restrictions as defined below.
    """
    linux_fx_version: Optional[pulumi.Input[str]] = pulumi.input_property("linuxFxVersion")
    """
    Linux App Framework and version for the AppService, e.g. `DOCKER|(golang:latest)`.
    """
    min_tls_version: Optional[pulumi.Input[str]] = pulumi.input_property("minTlsVersion")
    """
    The minimum supported TLS version for the function app. Possible values are `1.0`, `1.1`, and `1.2`. Defaults to `1.2` for new function apps.
    """
    pre_warmed_instance_count: Optional[pulumi.Input[float]] = pulumi.input_property("preWarmedInstanceCount")
    """
    The number of pre-warmed instances for this function app. Only affects apps on the Premium plan.
    """
    use32_bit_worker_process: Optional[pulumi.Input[bool]] = pulumi.input_property("use32BitWorkerProcess")
    """
    Should the Function App run in 32 bit mode, rather than 64 bit mode? Defaults to `true`.
    """
    websockets_enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("websocketsEnabled")
    """
    Should WebSockets be enabled?
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, always_on: Optional[pulumi.Input[bool]] = None, cors: Optional[pulumi.Input['FunctionAppSlotSiteConfigCorsArgs']] = None, ftps_state: Optional[pulumi.Input[str]] = None, http2_enabled: Optional[pulumi.Input[bool]] = None, ip_restrictions: Optional[pulumi.Input[List[pulumi.Input['FunctionAppSlotSiteConfigIpRestrictionArgs']]]] = None, linux_fx_version: Optional[pulumi.Input[str]] = None, min_tls_version: Optional[pulumi.Input[str]] = None, pre_warmed_instance_count: Optional[pulumi.Input[float]] = None, use32_bit_worker_process: Optional[pulumi.Input[bool]] = None, websockets_enabled: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[bool] always_on: Should the Function App be loaded at all times? Defaults to `false`.
        :param pulumi.Input['FunctionAppSlotSiteConfigCorsArgs'] cors: A `cors` block as defined below.
        :param pulumi.Input[str] ftps_state: State of FTP / FTPS service for this function app. Possible values include: `AllAllowed`, `FtpsOnly` and `Disabled`.
        :param pulumi.Input[bool] http2_enabled: Specifies whether or not the http2 protocol should be enabled. Defaults to `false`.
        :param pulumi.Input[List[pulumi.Input['FunctionAppSlotSiteConfigIpRestrictionArgs']]] ip_restrictions: A [List of objects](https://www.terraform.io/docs/configuration/attr-as-blocks.html) representing ip restrictions as defined below.
        :param pulumi.Input[str] linux_fx_version: Linux App Framework and version for the AppService, e.g. `DOCKER|(golang:latest)`.
        :param pulumi.Input[str] min_tls_version: The minimum supported TLS version for the function app. Possible values are `1.0`, `1.1`, and `1.2`. Defaults to `1.2` for new function apps.
        :param pulumi.Input[float] pre_warmed_instance_count: The number of pre-warmed instances for this function app. Only affects apps on the Premium plan.
        :param pulumi.Input[bool] use32_bit_worker_process: Should the Function App run in 32 bit mode, rather than 64 bit mode? Defaults to `true`.
        :param pulumi.Input[bool] websockets_enabled: Should WebSockets be enabled?
        """
        __self__.always_on = always_on
        __self__.cors = cors
        __self__.ftps_state = ftps_state
        __self__.http2_enabled = http2_enabled
        __self__.ip_restrictions = ip_restrictions
        __self__.linux_fx_version = linux_fx_version
        __self__.min_tls_version = min_tls_version
        __self__.pre_warmed_instance_count = pre_warmed_instance_count
        __self__.use32_bit_worker_process = use32_bit_worker_process
        __self__.websockets_enabled = websockets_enabled

@pulumi.input_type
class FunctionAppSlotSiteConfigCorsArgs:
    allowed_origins: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("allowedOrigins")
    """
    A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
    """
    support_credentials: Optional[pulumi.Input[bool]] = pulumi.input_property("supportCredentials")
    """
    Are credentials supported?
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, allowed_origins: pulumi.Input[List[pulumi.Input[str]]], support_credentials: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[str]]] allowed_origins: A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
        :param pulumi.Input[bool] support_credentials: Are credentials supported?
        """
        __self__.allowed_origins = allowed_origins
        __self__.support_credentials = support_credentials

@pulumi.input_type
class FunctionAppSlotSiteConfigIpRestrictionArgs:
    ip_address: Optional[pulumi.Input[str]] = pulumi.input_property("ipAddress")
    """
    The IP Address CIDR notation used for this IP Restriction.
    """
    subnet_id: Optional[pulumi.Input[str]] = pulumi.input_property("subnetId")
    """
    The Subnet ID used for this IP Restriction.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, ip_address: Optional[pulumi.Input[str]] = None, subnet_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] ip_address: The IP Address CIDR notation used for this IP Restriction.
        :param pulumi.Input[str] subnet_id: The Subnet ID used for this IP Restriction.
        """
        __self__.ip_address = ip_address
        __self__.subnet_id = subnet_id

@pulumi.input_type
class FunctionAppSlotSiteCredentialArgs:
    password: Optional[pulumi.Input[str]] = pulumi.input_property("password")
    """
    The password associated with the username, which can be used to publish to this App Service.
    """
    username: Optional[pulumi.Input[str]] = pulumi.input_property("username")
    """
    The username which can be used to publish to this App Service
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, password: Optional[pulumi.Input[str]] = None, username: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] password: The password associated with the username, which can be used to publish to this App Service.
        :param pulumi.Input[str] username: The username which can be used to publish to this App Service
        """
        __self__.password = password
        __self__.username = username

@pulumi.input_type
class PlanSkuArgs:
    size: pulumi.Input[str] = pulumi.input_property("size")
    """
    Specifies the plan's instance size.
    """
    tier: pulumi.Input[str] = pulumi.input_property("tier")
    """
    Specifies the plan's pricing tier.
    """
    capacity: Optional[pulumi.Input[float]] = pulumi.input_property("capacity")
    """
    Specifies the number of workers associated with this App Service Plan.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, size: pulumi.Input[str], tier: pulumi.Input[str], capacity: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[str] size: Specifies the plan's instance size.
        :param pulumi.Input[str] tier: Specifies the plan's pricing tier.
        :param pulumi.Input[float] capacity: Specifies the number of workers associated with this App Service Plan.
        """
        __self__.size = size
        __self__.tier = tier
        __self__.capacity = capacity

@pulumi.input_type
class SlotAuthSettingsArgs:
    enabled: pulumi.Input[bool] = pulumi.input_property("enabled")
    """
    Is Authentication enabled?
    """
    active_directory: Optional[pulumi.Input['SlotAuthSettingsActiveDirectoryArgs']] = pulumi.input_property("activeDirectory")
    """
    A `active_directory` block as defined below.
    """
    additional_login_params: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("additionalLoginParams")
    """
    Login parameters to send to the OpenID Connect authorization endpoint when a user logs in. Each parameter must be in the form "key=value".
    """
    allowed_external_redirect_urls: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("allowedExternalRedirectUrls")
    """
    External URLs that can be redirected to as part of logging in or logging out of the app.
    """
    default_provider: Optional[pulumi.Input[str]] = pulumi.input_property("defaultProvider")
    """
    The default provider to use when multiple providers have been set up. Possible values are `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount` and `Twitter`.
    """
    facebook: Optional[pulumi.Input['SlotAuthSettingsFacebookArgs']] = pulumi.input_property("facebook")
    """
    A `facebook` block as defined below.
    """
    google: Optional[pulumi.Input['SlotAuthSettingsGoogleArgs']] = pulumi.input_property("google")
    """
    A `google` block as defined below.
    """
    issuer: Optional[pulumi.Input[str]] = pulumi.input_property("issuer")
    """
    Issuer URI. When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.
    """
    microsoft: Optional[pulumi.Input['SlotAuthSettingsMicrosoftArgs']] = pulumi.input_property("microsoft")
    """
    A `microsoft` block as defined below.
    """
    runtime_version: Optional[pulumi.Input[str]] = pulumi.input_property("runtimeVersion")
    """
    The runtime version of the Authentication/Authorization module.
    """
    token_refresh_extension_hours: Optional[pulumi.Input[float]] = pulumi.input_property("tokenRefreshExtensionHours")
    """
    The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72.
    """
    token_store_enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("tokenStoreEnabled")
    """
    If enabled the module will durably store platform-specific security tokens that are obtained during login flows. Defaults to false.
    """
    twitter: Optional[pulumi.Input['SlotAuthSettingsTwitterArgs']] = pulumi.input_property("twitter")
    """
    A `twitter` block as defined below.
    """
    unauthenticated_client_action: Optional[pulumi.Input[str]] = pulumi.input_property("unauthenticatedClientAction")
    """
    The action to take when an unauthenticated client attempts to access the app. Possible values are `AllowAnonymous` and `RedirectToLoginPage`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, enabled: pulumi.Input[bool], active_directory: Optional[pulumi.Input['SlotAuthSettingsActiveDirectoryArgs']] = None, additional_login_params: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None, allowed_external_redirect_urls: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, default_provider: Optional[pulumi.Input[str]] = None, facebook: Optional[pulumi.Input['SlotAuthSettingsFacebookArgs']] = None, google: Optional[pulumi.Input['SlotAuthSettingsGoogleArgs']] = None, issuer: Optional[pulumi.Input[str]] = None, microsoft: Optional[pulumi.Input['SlotAuthSettingsMicrosoftArgs']] = None, runtime_version: Optional[pulumi.Input[str]] = None, token_refresh_extension_hours: Optional[pulumi.Input[float]] = None, token_store_enabled: Optional[pulumi.Input[bool]] = None, twitter: Optional[pulumi.Input['SlotAuthSettingsTwitterArgs']] = None, unauthenticated_client_action: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[bool] enabled: Is Authentication enabled?
        :param pulumi.Input['SlotAuthSettingsActiveDirectoryArgs'] active_directory: A `active_directory` block as defined below.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] additional_login_params: Login parameters to send to the OpenID Connect authorization endpoint when a user logs in. Each parameter must be in the form "key=value".
        :param pulumi.Input[List[pulumi.Input[str]]] allowed_external_redirect_urls: External URLs that can be redirected to as part of logging in or logging out of the app.
        :param pulumi.Input[str] default_provider: The default provider to use when multiple providers have been set up. Possible values are `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount` and `Twitter`.
        :param pulumi.Input['SlotAuthSettingsFacebookArgs'] facebook: A `facebook` block as defined below.
        :param pulumi.Input['SlotAuthSettingsGoogleArgs'] google: A `google` block as defined below.
        :param pulumi.Input[str] issuer: Issuer URI. When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.
        :param pulumi.Input['SlotAuthSettingsMicrosoftArgs'] microsoft: A `microsoft` block as defined below.
        :param pulumi.Input[str] runtime_version: The runtime version of the Authentication/Authorization module.
        :param pulumi.Input[float] token_refresh_extension_hours: The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72.
        :param pulumi.Input[bool] token_store_enabled: If enabled the module will durably store platform-specific security tokens that are obtained during login flows. Defaults to false.
        :param pulumi.Input['SlotAuthSettingsTwitterArgs'] twitter: A `twitter` block as defined below.
        :param pulumi.Input[str] unauthenticated_client_action: The action to take when an unauthenticated client attempts to access the app. Possible values are `AllowAnonymous` and `RedirectToLoginPage`.
        """
        __self__.enabled = enabled
        __self__.active_directory = active_directory
        __self__.additional_login_params = additional_login_params
        __self__.allowed_external_redirect_urls = allowed_external_redirect_urls
        __self__.default_provider = default_provider
        __self__.facebook = facebook
        __self__.google = google
        __self__.issuer = issuer
        __self__.microsoft = microsoft
        __self__.runtime_version = runtime_version
        __self__.token_refresh_extension_hours = token_refresh_extension_hours
        __self__.token_store_enabled = token_store_enabled
        __self__.twitter = twitter
        __self__.unauthenticated_client_action = unauthenticated_client_action

@pulumi.input_type
class SlotAuthSettingsActiveDirectoryArgs:
    client_id: pulumi.Input[str] = pulumi.input_property("clientId")
    """
    The Client ID of this relying party application. Enables OpenIDConnection authentication with Azure Active Directory.
    """
    allowed_audiences: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("allowedAudiences")
    """
    Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
    """
    client_secret: Optional[pulumi.Input[str]] = pulumi.input_property("clientSecret")
    """
    The Client Secret of this relying party application. If no secret is provided, implicit flow will be used.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, client_id: pulumi.Input[str], allowed_audiences: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, client_secret: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] client_id: The Client ID of this relying party application. Enables OpenIDConnection authentication with Azure Active Directory.
        :param pulumi.Input[List[pulumi.Input[str]]] allowed_audiences: Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
        :param pulumi.Input[str] client_secret: The Client Secret of this relying party application. If no secret is provided, implicit flow will be used.
        """
        __self__.client_id = client_id
        __self__.allowed_audiences = allowed_audiences
        __self__.client_secret = client_secret

@pulumi.input_type
class SlotAuthSettingsFacebookArgs:
    app_id: pulumi.Input[str] = pulumi.input_property("appId")
    """
    The App ID of the Facebook app used for login
    """
    app_secret: pulumi.Input[str] = pulumi.input_property("appSecret")
    """
    The App Secret of the Facebook app used for Facebook Login.
    """
    oauth_scopes: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("oauthScopes")
    """
    The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication. https://developers.facebook.com/docs/facebook-login
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, app_id: pulumi.Input[str], app_secret: pulumi.Input[str], oauth_scopes: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[str] app_id: The App ID of the Facebook app used for login
        :param pulumi.Input[str] app_secret: The App Secret of the Facebook app used for Facebook Login.
        :param pulumi.Input[List[pulumi.Input[str]]] oauth_scopes: The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication. https://developers.facebook.com/docs/facebook-login
        """
        __self__.app_id = app_id
        __self__.app_secret = app_secret
        __self__.oauth_scopes = oauth_scopes

@pulumi.input_type
class SlotAuthSettingsGoogleArgs:
    client_id: pulumi.Input[str] = pulumi.input_property("clientId")
    """
    The OpenID Connect Client ID for the Google web application.
    """
    client_secret: pulumi.Input[str] = pulumi.input_property("clientSecret")
    """
    The client secret associated with the Google web application.
    """
    oauth_scopes: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("oauthScopes")
    """
    The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. https://developers.google.com/identity/sign-in/web/
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, client_id: pulumi.Input[str], client_secret: pulumi.Input[str], oauth_scopes: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[str] client_id: The OpenID Connect Client ID for the Google web application.
        :param pulumi.Input[str] client_secret: The client secret associated with the Google web application.
        :param pulumi.Input[List[pulumi.Input[str]]] oauth_scopes: The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. https://developers.google.com/identity/sign-in/web/
        """
        __self__.client_id = client_id
        __self__.client_secret = client_secret
        __self__.oauth_scopes = oauth_scopes

@pulumi.input_type
class SlotAuthSettingsMicrosoftArgs:
    client_id: pulumi.Input[str] = pulumi.input_property("clientId")
    """
    The OAuth 2.0 client ID that was created for the app used for authentication.
    """
    client_secret: pulumi.Input[str] = pulumi.input_property("clientSecret")
    """
    The OAuth 2.0 client secret that was created for the app used for authentication.
    """
    oauth_scopes: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("oauthScopes")
    """
    The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. https://msdn.microsoft.com/en-us/library/dn631845.aspx
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, client_id: pulumi.Input[str], client_secret: pulumi.Input[str], oauth_scopes: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[str] client_id: The OAuth 2.0 client ID that was created for the app used for authentication.
        :param pulumi.Input[str] client_secret: The OAuth 2.0 client secret that was created for the app used for authentication.
        :param pulumi.Input[List[pulumi.Input[str]]] oauth_scopes: The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. https://msdn.microsoft.com/en-us/library/dn631845.aspx
        """
        __self__.client_id = client_id
        __self__.client_secret = client_secret
        __self__.oauth_scopes = oauth_scopes

@pulumi.input_type
class SlotAuthSettingsTwitterArgs:
    consumer_key: pulumi.Input[str] = pulumi.input_property("consumerKey")
    consumer_secret: pulumi.Input[str] = pulumi.input_property("consumerSecret")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, consumer_key: pulumi.Input[str], consumer_secret: pulumi.Input[str]) -> None:
        __self__.consumer_key = consumer_key
        __self__.consumer_secret = consumer_secret

@pulumi.input_type
class SlotConnectionStringArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The name of the Connection String.
    """
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure`, and  `SQLServer`.
    """
    value: pulumi.Input[str] = pulumi.input_property("value")
    """
    The value for the Connection String.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], type: pulumi.Input[str], value: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] name: The name of the Connection String.
        :param pulumi.Input[str] type: The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure`, and  `SQLServer`.
        :param pulumi.Input[str] value: The value for the Connection String.
        """
        __self__.name = name
        __self__.type = type
        __self__.value = value

@pulumi.input_type
class SlotIdentityArgs:
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    Specifies the identity type of the App Service. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identity_ids` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.
    """
    identity_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("identityIds")
    """
    Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`.
    """
    principal_id: Optional[pulumi.Input[str]] = pulumi.input_property("principalId")
    tenant_id: Optional[pulumi.Input[str]] = pulumi.input_property("tenantId")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, type: pulumi.Input[str], identity_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, principal_id: Optional[pulumi.Input[str]] = None, tenant_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] type: Specifies the identity type of the App Service. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identity_ids` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.
        :param pulumi.Input[List[pulumi.Input[str]]] identity_ids: Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`.
        """
        __self__.type = type
        __self__.identity_ids = identity_ids
        __self__.principal_id = principal_id
        __self__.tenant_id = tenant_id

@pulumi.input_type
class SlotLogsArgs:
    application_logs: Optional[pulumi.Input['SlotLogsApplicationLogsArgs']] = pulumi.input_property("applicationLogs")
    """
    An `application_logs` block as defined below.
    """
    http_logs: Optional[pulumi.Input['SlotLogsHttpLogsArgs']] = pulumi.input_property("httpLogs")
    """
    An `http_logs` block as defined below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, application_logs: Optional[pulumi.Input['SlotLogsApplicationLogsArgs']] = None, http_logs: Optional[pulumi.Input['SlotLogsHttpLogsArgs']] = None) -> None:
        """
        :param pulumi.Input['SlotLogsApplicationLogsArgs'] application_logs: An `application_logs` block as defined below.
        :param pulumi.Input['SlotLogsHttpLogsArgs'] http_logs: An `http_logs` block as defined below.
        """
        __self__.application_logs = application_logs
        __self__.http_logs = http_logs

@pulumi.input_type
class SlotLogsApplicationLogsArgs:
    azure_blob_storage: Optional[pulumi.Input['SlotLogsApplicationLogsAzureBlobStorageArgs']] = pulumi.input_property("azureBlobStorage")
    """
    An `azure_blob_storage` block as defined below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, azure_blob_storage: Optional[pulumi.Input['SlotLogsApplicationLogsAzureBlobStorageArgs']] = None) -> None:
        """
        :param pulumi.Input['SlotLogsApplicationLogsAzureBlobStorageArgs'] azure_blob_storage: An `azure_blob_storage` block as defined below.
        """
        __self__.azure_blob_storage = azure_blob_storage

@pulumi.input_type
class SlotLogsApplicationLogsAzureBlobStorageArgs:
    level: pulumi.Input[str] = pulumi.input_property("level")
    """
    The level at which to log. Possible values include `Error`, `Warning`, `Information`, `Verbose` and `Off`. **NOTE:** this field is not available for `http_logs`
    """
    retention_in_days: pulumi.Input[float] = pulumi.input_property("retentionInDays")
    """
    The number of days to retain logs for.
    """
    sas_url: pulumi.Input[str] = pulumi.input_property("sasUrl")
    """
    The URL to the storage container, with a Service SAS token appended. **NOTE:** there is currently no means of generating Service SAS tokens with the `azurerm` provider.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, level: pulumi.Input[str], retention_in_days: pulumi.Input[float], sas_url: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] level: The level at which to log. Possible values include `Error`, `Warning`, `Information`, `Verbose` and `Off`. **NOTE:** this field is not available for `http_logs`
        :param pulumi.Input[float] retention_in_days: The number of days to retain logs for.
        :param pulumi.Input[str] sas_url: The URL to the storage container, with a Service SAS token appended. **NOTE:** there is currently no means of generating Service SAS tokens with the `azurerm` provider.
        """
        __self__.level = level
        __self__.retention_in_days = retention_in_days
        __self__.sas_url = sas_url

@pulumi.input_type
class SlotLogsHttpLogsArgs:
    azure_blob_storage: Optional[pulumi.Input['SlotLogsHttpLogsAzureBlobStorageArgs']] = pulumi.input_property("azureBlobStorage")
    """
    An `azure_blob_storage` block as defined below.
    """
    file_system: Optional[pulumi.Input['SlotLogsHttpLogsFileSystemArgs']] = pulumi.input_property("fileSystem")
    """
    A `file_system` block as defined below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, azure_blob_storage: Optional[pulumi.Input['SlotLogsHttpLogsAzureBlobStorageArgs']] = None, file_system: Optional[pulumi.Input['SlotLogsHttpLogsFileSystemArgs']] = None) -> None:
        """
        :param pulumi.Input['SlotLogsHttpLogsAzureBlobStorageArgs'] azure_blob_storage: An `azure_blob_storage` block as defined below.
        :param pulumi.Input['SlotLogsHttpLogsFileSystemArgs'] file_system: A `file_system` block as defined below.
        """
        __self__.azure_blob_storage = azure_blob_storage
        __self__.file_system = file_system

@pulumi.input_type
class SlotLogsHttpLogsAzureBlobStorageArgs:
    retention_in_days: pulumi.Input[float] = pulumi.input_property("retentionInDays")
    """
    The number of days to retain logs for.
    """
    sas_url: pulumi.Input[str] = pulumi.input_property("sasUrl")
    """
    The URL to the storage container, with a Service SAS token appended. **NOTE:** there is currently no means of generating Service SAS tokens with the `azurerm` provider.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, retention_in_days: pulumi.Input[float], sas_url: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[float] retention_in_days: The number of days to retain logs for.
        :param pulumi.Input[str] sas_url: The URL to the storage container, with a Service SAS token appended. **NOTE:** there is currently no means of generating Service SAS tokens with the `azurerm` provider.
        """
        __self__.retention_in_days = retention_in_days
        __self__.sas_url = sas_url

@pulumi.input_type
class SlotLogsHttpLogsFileSystemArgs:
    retention_in_days: pulumi.Input[float] = pulumi.input_property("retentionInDays")
    """
    The number of days to retain logs for.
    """
    retention_in_mb: pulumi.Input[float] = pulumi.input_property("retentionInMb")
    """
    The maximum size in megabytes that http log files can use before being removed.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, retention_in_days: pulumi.Input[float], retention_in_mb: pulumi.Input[float]) -> None:
        """
        :param pulumi.Input[float] retention_in_days: The number of days to retain logs for.
        :param pulumi.Input[float] retention_in_mb: The maximum size in megabytes that http log files can use before being removed.
        """
        __self__.retention_in_days = retention_in_days
        __self__.retention_in_mb = retention_in_mb

@pulumi.input_type
class SlotSiteConfigArgs:
    always_on: Optional[pulumi.Input[bool]] = pulumi.input_property("alwaysOn")
    """
    Should the app be loaded at all times? Defaults to `false`.
    """
    app_command_line: Optional[pulumi.Input[str]] = pulumi.input_property("appCommandLine")
    """
    App command line to launch, e.g. `/sbin/myserver -b 0.0.0.0`.
    """
    auto_swap_slot_name: Optional[pulumi.Input[str]] = pulumi.input_property("autoSwapSlotName")
    """
    The name of the swap to automatically swap to during deployment
    """
    cors: Optional[pulumi.Input['SlotSiteConfigCorsArgs']] = pulumi.input_property("cors")
    """
    A `cors` block as defined below.
    """
    default_documents: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("defaultDocuments")
    """
    The ordering of default documents to load, if an address isn't specified.
    """
    dotnet_framework_version: Optional[pulumi.Input[str]] = pulumi.input_property("dotnetFrameworkVersion")
    """
    The version of the .net framework's CLR used in this App Service Slot. Possible values are `v2.0` (which will use the latest version of the .net framework for the .net CLR v2 - currently `.net 3.5`) and `v4.0` (which corresponds to the latest version of the .net CLR v4 - which at the time of writing is `.net 4.7.1`). [For more information on which .net CLR version to use based on the .net framework you're targeting - please see this table](https://en.wikipedia.org/wiki/.NET_Framework_version_history#Overview). Defaults to `v4.0`.
    """
    ftps_state: Optional[pulumi.Input[str]] = pulumi.input_property("ftpsState")
    health_check_path: Optional[pulumi.Input[str]] = pulumi.input_property("healthCheckPath")
    http2_enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("http2Enabled")
    """
    Is HTTP2 Enabled on this App Service? Defaults to `false`.
    """
    ip_restrictions: Optional[pulumi.Input[List[pulumi.Input['SlotSiteConfigIpRestrictionArgs']]]] = pulumi.input_property("ipRestrictions")
    """
    A list of objects representing ip restrictions as defined below.
    """
    java_container: Optional[pulumi.Input[str]] = pulumi.input_property("javaContainer")
    """
    The Java Container to use. If specified `java_version` and `java_container_version` must also be specified. Possible values are `JETTY` and `TOMCAT`.
    """
    java_container_version: Optional[pulumi.Input[str]] = pulumi.input_property("javaContainerVersion")
    """
    The version of the Java Container to use. If specified `java_version` and `java_container` must also be specified.
    """
    java_version: Optional[pulumi.Input[str]] = pulumi.input_property("javaVersion")
    """
    The version of Java to use. If specified `java_container` and `java_container_version` must also be specified. Possible values are `1.7`, `1.8`, and `11` and their specific versions - except for Java 11 (e.g. `1.7.0_80`, `1.8.0_181`, `11`)
    """
    linux_fx_version: Optional[pulumi.Input[str]] = pulumi.input_property("linuxFxVersion")
    local_mysql_enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("localMysqlEnabled")
    """
    Is "MySQL In App" Enabled? This runs a local MySQL instance with your app and shares resources from the App Service plan.
    """
    managed_pipeline_mode: Optional[pulumi.Input[str]] = pulumi.input_property("managedPipelineMode")
    """
    The Managed Pipeline Mode. Possible values are `Integrated` and `Classic`. Defaults to `Integrated`.
    """
    min_tls_version: Optional[pulumi.Input[str]] = pulumi.input_property("minTlsVersion")
    """
    The minimum supported TLS version for the app service. Possible values are `1.0`, `1.1`, and `1.2`. Defaults to `1.2` for new app services.
    """
    php_version: Optional[pulumi.Input[str]] = pulumi.input_property("phpVersion")
    """
    The version of PHP to use in this App Service Slot. Possible values are `5.5`, `5.6`, `7.0`, `7.1`, `7.2`, and `7.3`.
    """
    python_version: Optional[pulumi.Input[str]] = pulumi.input_property("pythonVersion")
    """
    The version of Python to use in this App Service Slot. Possible values are `2.7` and `3.4`.
    """
    remote_debugging_enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("remoteDebuggingEnabled")
    """
    Is Remote Debugging Enabled? Defaults to `false`.
    """
    remote_debugging_version: Optional[pulumi.Input[str]] = pulumi.input_property("remoteDebuggingVersion")
    """
    Which version of Visual Studio should the Remote Debugger be compatible with? Possible values are `VS2012`, `VS2013`, `VS2015`, and `VS2017`.
    """
    scm_ip_restrictions: Optional[pulumi.Input[List[pulumi.Input['SlotSiteConfigScmIpRestrictionArgs']]]] = pulumi.input_property("scmIpRestrictions")
    scm_type: Optional[pulumi.Input[str]] = pulumi.input_property("scmType")
    """
    The type of Source Control enabled for this App Service Slot. Defaults to `None`. Possible values are: `BitbucketGit`, `BitbucketHg`, `CodePlexGit`, `CodePlexHg`, `Dropbox`, `ExternalGit`, `ExternalHg`, `GitHub`, `LocalGit`, `None`, `OneDrive`, `Tfs`, `VSO`, and `VSTSRM`
    """
    scm_use_main_ip_restriction: Optional[pulumi.Input[bool]] = pulumi.input_property("scmUseMainIpRestriction")
    use32_bit_worker_process: Optional[pulumi.Input[bool]] = pulumi.input_property("use32BitWorkerProcess")
    """
    Should the App Service Slot run in 32 bit mode, rather than 64 bit mode?
    """
    websockets_enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("websocketsEnabled")
    """
    Should WebSockets be enabled?
    """
    windows_fx_version: Optional[pulumi.Input[str]] = pulumi.input_property("windowsFxVersion")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, always_on: Optional[pulumi.Input[bool]] = None, app_command_line: Optional[pulumi.Input[str]] = None, auto_swap_slot_name: Optional[pulumi.Input[str]] = None, cors: Optional[pulumi.Input['SlotSiteConfigCorsArgs']] = None, default_documents: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, dotnet_framework_version: Optional[pulumi.Input[str]] = None, ftps_state: Optional[pulumi.Input[str]] = None, health_check_path: Optional[pulumi.Input[str]] = None, http2_enabled: Optional[pulumi.Input[bool]] = None, ip_restrictions: Optional[pulumi.Input[List[pulumi.Input['SlotSiteConfigIpRestrictionArgs']]]] = None, java_container: Optional[pulumi.Input[str]] = None, java_container_version: Optional[pulumi.Input[str]] = None, java_version: Optional[pulumi.Input[str]] = None, linux_fx_version: Optional[pulumi.Input[str]] = None, local_mysql_enabled: Optional[pulumi.Input[bool]] = None, managed_pipeline_mode: Optional[pulumi.Input[str]] = None, min_tls_version: Optional[pulumi.Input[str]] = None, php_version: Optional[pulumi.Input[str]] = None, python_version: Optional[pulumi.Input[str]] = None, remote_debugging_enabled: Optional[pulumi.Input[bool]] = None, remote_debugging_version: Optional[pulumi.Input[str]] = None, scm_ip_restrictions: Optional[pulumi.Input[List[pulumi.Input['SlotSiteConfigScmIpRestrictionArgs']]]] = None, scm_type: Optional[pulumi.Input[str]] = None, scm_use_main_ip_restriction: Optional[pulumi.Input[bool]] = None, use32_bit_worker_process: Optional[pulumi.Input[bool]] = None, websockets_enabled: Optional[pulumi.Input[bool]] = None, windows_fx_version: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[bool] always_on: Should the app be loaded at all times? Defaults to `false`.
        :param pulumi.Input[str] app_command_line: App command line to launch, e.g. `/sbin/myserver -b 0.0.0.0`.
        :param pulumi.Input[str] auto_swap_slot_name: The name of the swap to automatically swap to during deployment
        :param pulumi.Input['SlotSiteConfigCorsArgs'] cors: A `cors` block as defined below.
        :param pulumi.Input[List[pulumi.Input[str]]] default_documents: The ordering of default documents to load, if an address isn't specified.
        :param pulumi.Input[str] dotnet_framework_version: The version of the .net framework's CLR used in this App Service Slot. Possible values are `v2.0` (which will use the latest version of the .net framework for the .net CLR v2 - currently `.net 3.5`) and `v4.0` (which corresponds to the latest version of the .net CLR v4 - which at the time of writing is `.net 4.7.1`). [For more information on which .net CLR version to use based on the .net framework you're targeting - please see this table](https://en.wikipedia.org/wiki/.NET_Framework_version_history#Overview). Defaults to `v4.0`.
        :param pulumi.Input[bool] http2_enabled: Is HTTP2 Enabled on this App Service? Defaults to `false`.
        :param pulumi.Input[List[pulumi.Input['SlotSiteConfigIpRestrictionArgs']]] ip_restrictions: A list of objects representing ip restrictions as defined below.
        :param pulumi.Input[str] java_container: The Java Container to use. If specified `java_version` and `java_container_version` must also be specified. Possible values are `JETTY` and `TOMCAT`.
        :param pulumi.Input[str] java_container_version: The version of the Java Container to use. If specified `java_version` and `java_container` must also be specified.
        :param pulumi.Input[str] java_version: The version of Java to use. If specified `java_container` and `java_container_version` must also be specified. Possible values are `1.7`, `1.8`, and `11` and their specific versions - except for Java 11 (e.g. `1.7.0_80`, `1.8.0_181`, `11`)
        :param pulumi.Input[bool] local_mysql_enabled: Is "MySQL In App" Enabled? This runs a local MySQL instance with your app and shares resources from the App Service plan.
        :param pulumi.Input[str] managed_pipeline_mode: The Managed Pipeline Mode. Possible values are `Integrated` and `Classic`. Defaults to `Integrated`.
        :param pulumi.Input[str] min_tls_version: The minimum supported TLS version for the app service. Possible values are `1.0`, `1.1`, and `1.2`. Defaults to `1.2` for new app services.
        :param pulumi.Input[str] php_version: The version of PHP to use in this App Service Slot. Possible values are `5.5`, `5.6`, `7.0`, `7.1`, `7.2`, and `7.3`.
        :param pulumi.Input[str] python_version: The version of Python to use in this App Service Slot. Possible values are `2.7` and `3.4`.
        :param pulumi.Input[bool] remote_debugging_enabled: Is Remote Debugging Enabled? Defaults to `false`.
        :param pulumi.Input[str] remote_debugging_version: Which version of Visual Studio should the Remote Debugger be compatible with? Possible values are `VS2012`, `VS2013`, `VS2015`, and `VS2017`.
        :param pulumi.Input[str] scm_type: The type of Source Control enabled for this App Service Slot. Defaults to `None`. Possible values are: `BitbucketGit`, `BitbucketHg`, `CodePlexGit`, `CodePlexHg`, `Dropbox`, `ExternalGit`, `ExternalHg`, `GitHub`, `LocalGit`, `None`, `OneDrive`, `Tfs`, `VSO`, and `VSTSRM`
        :param pulumi.Input[bool] use32_bit_worker_process: Should the App Service Slot run in 32 bit mode, rather than 64 bit mode?
        :param pulumi.Input[bool] websockets_enabled: Should WebSockets be enabled?
        """
        __self__.always_on = always_on
        __self__.app_command_line = app_command_line
        __self__.auto_swap_slot_name = auto_swap_slot_name
        __self__.cors = cors
        __self__.default_documents = default_documents
        __self__.dotnet_framework_version = dotnet_framework_version
        __self__.ftps_state = ftps_state
        __self__.health_check_path = health_check_path
        __self__.http2_enabled = http2_enabled
        __self__.ip_restrictions = ip_restrictions
        __self__.java_container = java_container
        __self__.java_container_version = java_container_version
        __self__.java_version = java_version
        __self__.linux_fx_version = linux_fx_version
        __self__.local_mysql_enabled = local_mysql_enabled
        __self__.managed_pipeline_mode = managed_pipeline_mode
        __self__.min_tls_version = min_tls_version
        __self__.php_version = php_version
        __self__.python_version = python_version
        __self__.remote_debugging_enabled = remote_debugging_enabled
        __self__.remote_debugging_version = remote_debugging_version
        __self__.scm_ip_restrictions = scm_ip_restrictions
        __self__.scm_type = scm_type
        __self__.scm_use_main_ip_restriction = scm_use_main_ip_restriction
        __self__.use32_bit_worker_process = use32_bit_worker_process
        __self__.websockets_enabled = websockets_enabled
        __self__.windows_fx_version = windows_fx_version

@pulumi.input_type
class SlotSiteConfigCorsArgs:
    allowed_origins: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("allowedOrigins")
    """
    A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
    """
    support_credentials: Optional[pulumi.Input[bool]] = pulumi.input_property("supportCredentials")
    """
    Are credentials supported?
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, allowed_origins: pulumi.Input[List[pulumi.Input[str]]], support_credentials: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[str]]] allowed_origins: A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
        :param pulumi.Input[bool] support_credentials: Are credentials supported?
        """
        __self__.allowed_origins = allowed_origins
        __self__.support_credentials = support_credentials

@pulumi.input_type
class SlotSiteConfigIpRestrictionArgs:
    action: Optional[pulumi.Input[str]] = pulumi.input_property("action")
    ip_address: Optional[pulumi.Input[str]] = pulumi.input_property("ipAddress")
    """
    The IP Address used for this IP Restriction.
    """
    name: Optional[pulumi.Input[str]] = pulumi.input_property("name")
    """
    Specifies the name of the App Service Slot component. Changing this forces a new resource to be created.
    """
    priority: Optional[pulumi.Input[float]] = pulumi.input_property("priority")
    virtual_network_subnet_id: Optional[pulumi.Input[str]] = pulumi.input_property("virtualNetworkSubnetId")
    """
    (Optional.The Virtual Network Subnet ID used for this IP Restriction.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, action: Optional[pulumi.Input[str]] = None, ip_address: Optional[pulumi.Input[str]] = None, name: Optional[pulumi.Input[str]] = None, priority: Optional[pulumi.Input[float]] = None, virtual_network_subnet_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] ip_address: The IP Address used for this IP Restriction.
        :param pulumi.Input[str] name: Specifies the name of the App Service Slot component. Changing this forces a new resource to be created.
        :param pulumi.Input[str] virtual_network_subnet_id: (Optional.The Virtual Network Subnet ID used for this IP Restriction.
        """
        __self__.action = action
        __self__.ip_address = ip_address
        __self__.name = name
        __self__.priority = priority
        __self__.virtual_network_subnet_id = virtual_network_subnet_id

@pulumi.input_type
class SlotSiteConfigScmIpRestrictionArgs:
    action: Optional[pulumi.Input[str]] = pulumi.input_property("action")
    ip_address: Optional[pulumi.Input[str]] = pulumi.input_property("ipAddress")
    """
    The IP Address used for this IP Restriction.
    """
    name: Optional[pulumi.Input[str]] = pulumi.input_property("name")
    """
    Specifies the name of the App Service Slot component. Changing this forces a new resource to be created.
    """
    priority: Optional[pulumi.Input[float]] = pulumi.input_property("priority")
    virtual_network_subnet_id: Optional[pulumi.Input[str]] = pulumi.input_property("virtualNetworkSubnetId")
    """
    (Optional.The Virtual Network Subnet ID used for this IP Restriction.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, action: Optional[pulumi.Input[str]] = None, ip_address: Optional[pulumi.Input[str]] = None, name: Optional[pulumi.Input[str]] = None, priority: Optional[pulumi.Input[float]] = None, virtual_network_subnet_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] ip_address: The IP Address used for this IP Restriction.
        :param pulumi.Input[str] name: Specifies the name of the App Service Slot component. Changing this forces a new resource to be created.
        :param pulumi.Input[str] virtual_network_subnet_id: (Optional.The Virtual Network Subnet ID used for this IP Restriction.
        """
        __self__.action = action
        __self__.ip_address = ip_address
        __self__.name = name
        __self__.priority = priority
        __self__.virtual_network_subnet_id = virtual_network_subnet_id

@pulumi.input_type
class SlotSiteCredentialArgs:
    password: Optional[pulumi.Input[str]] = pulumi.input_property("password")
    """
    The password associated with the username, which can be used to publish to this App Service.
    """
    username: Optional[pulumi.Input[str]] = pulumi.input_property("username")
    """
    The username which can be used to publish to this App Service
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, password: Optional[pulumi.Input[str]] = None, username: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] password: The password associated with the username, which can be used to publish to this App Service.
        :param pulumi.Input[str] username: The username which can be used to publish to this App Service
        """
        __self__.password = password
        __self__.username = username

