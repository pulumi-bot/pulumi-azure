# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Mapping, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'ServerStorageProfileArgs',
    'ServerThreatDetectionPolicyArgs',
]

@pulumi.input_type
class ServerStorageProfileArgs:
    def __init__(__self__, *,
                 auto_grow: Optional[pulumi.Input[str]] = None,
                 backup_retention_days: Optional[pulumi.Input[float]] = None,
                 geo_redundant_backup: Optional[pulumi.Input[str]] = None,
                 storage_mb: Optional[pulumi.Input[float]] = None):
        """
        :param pulumi.Input[float] backup_retention_days: Backup retention days for the server, supported values are between `7` and `35` days.
        :param pulumi.Input[float] storage_mb: Max storage allowed for a server. Possible values are between `5120` MB(5GB) and `1048576` MB(1TB) for the Basic SKU and between `5120` MB(5GB) and `4194304` MB(4TB) for General Purpose/Memory Optimized SKUs. For more information see the [product documentation](https://docs.microsoft.com/en-us/rest/api/postgresql/servers/create#StorageProfile).
        """
        if auto_grow is not None:
            warnings.warn("this has been moved to the top level and will be removed in version 3.0 of the provider.", DeprecationWarning)
            pulumi.log.warn("auto_grow is deprecated: this has been moved to the top level and will be removed in version 3.0 of the provider.")
        pulumi.set(__self__, "autoGrow", auto_grow)
        if backup_retention_days is not None:
            warnings.warn("this has been moved to the top level and will be removed in version 3.0 of the provider.", DeprecationWarning)
            pulumi.log.warn("backup_retention_days is deprecated: this has been moved to the top level and will be removed in version 3.0 of the provider.")
        pulumi.set(__self__, "backupRetentionDays", backup_retention_days)
        if geo_redundant_backup is not None:
            warnings.warn("this has been moved to the top level and will be removed in version 3.0 of the provider.", DeprecationWarning)
            pulumi.log.warn("geo_redundant_backup is deprecated: this has been moved to the top level and will be removed in version 3.0 of the provider.")
        pulumi.set(__self__, "geoRedundantBackup", geo_redundant_backup)
        if storage_mb is not None:
            warnings.warn("this has been moved to the top level and will be removed in version 3.0 of the provider.", DeprecationWarning)
            pulumi.log.warn("storage_mb is deprecated: this has been moved to the top level and will be removed in version 3.0 of the provider.")
        pulumi.set(__self__, "storageMb", storage_mb)

    @property
    @pulumi.getter(name="autoGrow")
    def auto_grow(self) -> Optional[pulumi.Input[str]]:
        ...

    @auto_grow.setter
    def auto_grow(self, value: Optional[pulumi.Input[str]]):
        ...

    @property
    @pulumi.getter(name="backupRetentionDays")
    def backup_retention_days(self) -> Optional[pulumi.Input[float]]:
        """
        Backup retention days for the server, supported values are between `7` and `35` days.
        """
        ...

    @backup_retention_days.setter
    def backup_retention_days(self, value: Optional[pulumi.Input[float]]):
        ...

    @property
    @pulumi.getter(name="geoRedundantBackup")
    def geo_redundant_backup(self) -> Optional[pulumi.Input[str]]:
        ...

    @geo_redundant_backup.setter
    def geo_redundant_backup(self, value: Optional[pulumi.Input[str]]):
        ...

    @property
    @pulumi.getter(name="storageMb")
    def storage_mb(self) -> Optional[pulumi.Input[float]]:
        """
        Max storage allowed for a server. Possible values are between `5120` MB(5GB) and `1048576` MB(1TB) for the Basic SKU and between `5120` MB(5GB) and `4194304` MB(4TB) for General Purpose/Memory Optimized SKUs. For more information see the [product documentation](https://docs.microsoft.com/en-us/rest/api/postgresql/servers/create#StorageProfile).
        """
        ...

    @storage_mb.setter
    def storage_mb(self, value: Optional[pulumi.Input[float]]):
        ...


@pulumi.input_type
class ServerThreatDetectionPolicyArgs:
    def __init__(__self__, *,
                 disabled_alerts: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None,
                 email_account_admins: Optional[pulumi.Input[bool]] = None,
                 email_addresses: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None,
                 enabled: Optional[pulumi.Input[bool]] = None,
                 retention_days: Optional[pulumi.Input[float]] = None,
                 storage_account_access_key: Optional[pulumi.Input[str]] = None,
                 storage_endpoint: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[List[pulumi.Input[str]]] disabled_alerts: Specifies a list of alerts which should be disabled. Possible values include `Access_Anomaly`, `Sql_Injection` and `Sql_Injection_Vulnerability`.
        :param pulumi.Input[bool] email_account_admins: Should the account administrators be emailed when this alert is triggered?
        :param pulumi.Input[List[pulumi.Input[str]]] email_addresses: A list of email addresses which alerts should be sent to.
        :param pulumi.Input[bool] enabled: Is the policy enabled?
        :param pulumi.Input[float] retention_days: Specifies the number of days to keep in the Threat Detection audit logs.
        :param pulumi.Input[str] storage_account_access_key: Specifies the identifier key of the Threat Detection audit storage account.
        :param pulumi.Input[str] storage_endpoint: Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.
        """
        pulumi.set(__self__, "disabledAlerts", disabled_alerts)
        pulumi.set(__self__, "emailAccountAdmins", email_account_admins)
        pulumi.set(__self__, "emailAddresses", email_addresses)
        pulumi.set(__self__, "enabled", enabled)
        pulumi.set(__self__, "retentionDays", retention_days)
        pulumi.set(__self__, "storageAccountAccessKey", storage_account_access_key)
        pulumi.set(__self__, "storageEndpoint", storage_endpoint)

    @property
    @pulumi.getter(name="disabledAlerts")
    def disabled_alerts(self) -> Optional[pulumi.Input[List[pulumi.Input[str]]]]:
        """
        Specifies a list of alerts which should be disabled. Possible values include `Access_Anomaly`, `Sql_Injection` and `Sql_Injection_Vulnerability`.
        """
        ...

    @disabled_alerts.setter
    def disabled_alerts(self, value: Optional[pulumi.Input[List[pulumi.Input[str]]]]):
        ...

    @property
    @pulumi.getter(name="emailAccountAdmins")
    def email_account_admins(self) -> Optional[pulumi.Input[bool]]:
        """
        Should the account administrators be emailed when this alert is triggered?
        """
        ...

    @email_account_admins.setter
    def email_account_admins(self, value: Optional[pulumi.Input[bool]]):
        ...

    @property
    @pulumi.getter(name="emailAddresses")
    def email_addresses(self) -> Optional[pulumi.Input[List[pulumi.Input[str]]]]:
        """
        A list of email addresses which alerts should be sent to.
        """
        ...

    @email_addresses.setter
    def email_addresses(self, value: Optional[pulumi.Input[List[pulumi.Input[str]]]]):
        ...

    @property
    @pulumi.getter
    def enabled(self) -> Optional[pulumi.Input[bool]]:
        """
        Is the policy enabled?
        """
        ...

    @enabled.setter
    def enabled(self, value: Optional[pulumi.Input[bool]]):
        ...

    @property
    @pulumi.getter(name="retentionDays")
    def retention_days(self) -> Optional[pulumi.Input[float]]:
        """
        Specifies the number of days to keep in the Threat Detection audit logs.
        """
        ...

    @retention_days.setter
    def retention_days(self, value: Optional[pulumi.Input[float]]):
        ...

    @property
    @pulumi.getter(name="storageAccountAccessKey")
    def storage_account_access_key(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the identifier key of the Threat Detection audit storage account.
        """
        ...

    @storage_account_access_key.setter
    def storage_account_access_key(self, value: Optional[pulumi.Input[str]]):
        ...

    @property
    @pulumi.getter(name="storageEndpoint")
    def storage_endpoint(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.
        """
        ...

    @storage_endpoint.setter
    def storage_endpoint(self, value: Optional[pulumi.Input[str]]):
        ...


