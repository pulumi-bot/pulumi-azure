# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Mapping, Optional, Tuple, Union
from .. import _utilities, _tables
from . import outputs
from ._inputs import *

__all__ = ['ActionRuleSuppression']


class ActionRuleSuppression(pulumi.CustomResource):
    condition: pulumi.Output[Optional['outputs.ActionRuleSuppressionCondition']] = pulumi.property("condition")
    """
    A `condition` block as defined below.
    """

    description: pulumi.Output[Optional[str]] = pulumi.property("description")
    """
    Specifies a description for the Action Rule.
    """

    enabled: pulumi.Output[Optional[bool]] = pulumi.property("enabled")
    """
    Is the Action Rule enabled? Defaults to `true`.
    """

    name: pulumi.Output[str] = pulumi.property("name")
    """
    Specifies the name of the Monitor Action Rule. Changing this forces a new resource to be created.
    """

    resource_group_name: pulumi.Output[str] = pulumi.property("resourceGroupName")
    """
    Specifies the name of the resource group in which the Monitor Action Rule should exist. Changing this forces a new resource to be created.
    """

    scope: pulumi.Output[Optional['outputs.ActionRuleSuppressionScope']] = pulumi.property("scope")
    """
    A `scope` block as defined below.
    """

    suppression: pulumi.Output['outputs.ActionRuleSuppressionSuppression'] = pulumi.property("suppression")
    """
    A `suppression` block as defined below.
    """

    tags: pulumi.Output[Optional[Mapping[str, str]]] = pulumi.property("tags")
    """
    A mapping of tags to assign to the resource.
    """

    def __init__(__self__,
                 resource_name,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 condition: Optional[pulumi.Input[pulumi.InputType['ActionRuleSuppressionConditionArgs']]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 enabled: Optional[pulumi.Input[bool]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 resource_group_name: Optional[pulumi.Input[str]] = None,
                 scope: Optional[pulumi.Input[pulumi.InputType['ActionRuleSuppressionScopeArgs']]] = None,
                 suppression: Optional[pulumi.Input[pulumi.InputType['ActionRuleSuppressionSuppressionArgs']]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 __props__=None,
                 __name__=None,
                 __opts__=None):
        """
        Manages an Monitor Action Rule which type is suppression.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_azure as azure

        example_resource_group = azure.core.ResourceGroup("exampleResourceGroup", location="West Europe")
        example_action_rule_suppression = azure.monitoring.ActionRuleSuppression("exampleActionRuleSuppression",
            resource_group_name=example_resource_group.name,
            scope={
                "type": "ResourceGroup",
                "resourceIds": [example_resource_group.id],
            },
            suppression={
                "recurrence_type": "Weekly",
                "schedule": {
                    "startDateUtc": "2019-01-01T01:02:03Z",
                    "endDateUtc": "2019-01-03T15:02:07Z",
                    "recurrenceWeeklies": [
                        "Sunday",
                        "Monday",
                        "Friday",
                        "Saturday",
                    ],
                },
            },
            tags={
                "foo": "bar",
            })
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[pulumi.InputType['ActionRuleSuppressionConditionArgs']] condition: A `condition` block as defined below.
        :param pulumi.Input[str] description: Specifies a description for the Action Rule.
        :param pulumi.Input[bool] enabled: Is the Action Rule enabled? Defaults to `true`.
        :param pulumi.Input[str] name: Specifies the name of the Monitor Action Rule. Changing this forces a new resource to be created.
        :param pulumi.Input[str] resource_group_name: Specifies the name of the resource group in which the Monitor Action Rule should exist. Changing this forces a new resource to be created.
        :param pulumi.Input[pulumi.InputType['ActionRuleSuppressionScopeArgs']] scope: A `scope` block as defined below.
        :param pulumi.Input[pulumi.InputType['ActionRuleSuppressionSuppressionArgs']] suppression: A `suppression` block as defined below.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] tags: A mapping of tags to assign to the resource.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['condition'] = condition
            __props__['description'] = description
            __props__['enabled'] = enabled
            __props__['name'] = name
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            __props__['scope'] = scope
            if suppression is None:
                raise TypeError("Missing required property 'suppression'")
            __props__['suppression'] = suppression
            __props__['tags'] = tags
        super(ActionRuleSuppression, __self__).__init__(
            'azure:monitoring/actionRuleSuppression:ActionRuleSuppression',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: str,
            opts: Optional[pulumi.ResourceOptions] = None,
            condition: Optional[pulumi.Input[pulumi.InputType['ActionRuleSuppressionConditionArgs']]] = None,
            description: Optional[pulumi.Input[str]] = None,
            enabled: Optional[pulumi.Input[bool]] = None,
            name: Optional[pulumi.Input[str]] = None,
            resource_group_name: Optional[pulumi.Input[str]] = None,
            scope: Optional[pulumi.Input[pulumi.InputType['ActionRuleSuppressionScopeArgs']]] = None,
            suppression: Optional[pulumi.Input[pulumi.InputType['ActionRuleSuppressionSuppressionArgs']]] = None,
            tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None) -> 'ActionRuleSuppression':
        """
        Get an existing ActionRuleSuppression resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[pulumi.InputType['ActionRuleSuppressionConditionArgs']] condition: A `condition` block as defined below.
        :param pulumi.Input[str] description: Specifies a description for the Action Rule.
        :param pulumi.Input[bool] enabled: Is the Action Rule enabled? Defaults to `true`.
        :param pulumi.Input[str] name: Specifies the name of the Monitor Action Rule. Changing this forces a new resource to be created.
        :param pulumi.Input[str] resource_group_name: Specifies the name of the resource group in which the Monitor Action Rule should exist. Changing this forces a new resource to be created.
        :param pulumi.Input[pulumi.InputType['ActionRuleSuppressionScopeArgs']] scope: A `scope` block as defined below.
        :param pulumi.Input[pulumi.InputType['ActionRuleSuppressionSuppressionArgs']] suppression: A `suppression` block as defined below.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] tags: A mapping of tags to assign to the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["condition"] = condition
        __props__["description"] = description
        __props__["enabled"] = enabled
        __props__["name"] = name
        __props__["resource_group_name"] = resource_group_name
        __props__["scope"] = scope
        __props__["suppression"] = suppression
        __props__["tags"] = tags
        return ActionRuleSuppression(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

