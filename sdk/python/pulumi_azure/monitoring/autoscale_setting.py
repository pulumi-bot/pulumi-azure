# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables
from . import outputs
from ._inputs import *

__all__ = ['AutoscaleSetting']


class AutoscaleSetting(pulumi.CustomResource):
    enabled: pulumi.Output[Optional[bool]] = pulumi.output_property("enabled")
    """
    Specifies whether automatic scaling is enabled for the target resource. Defaults to `true`.
    """
    location: pulumi.Output[str] = pulumi.output_property("location")
    """
    Specifies the supported Azure location where the AutoScale Setting should exist. Changing this forces a new resource to be created.
    """
    name: pulumi.Output[str] = pulumi.output_property("name")
    """
    The name of the AutoScale Setting. Changing this forces a new resource to be created.
    """
    notification: pulumi.Output[Optional['outputs.AutoscaleSettingNotification']] = pulumi.output_property("notification")
    """
    Specifies a `notification` block as defined below.
    """
    profiles: pulumi.Output[List['outputs.AutoscaleSettingProfile']] = pulumi.output_property("profiles")
    """
    Specifies one or more (up to 20) `profile` blocks as defined below.
    """
    resource_group_name: pulumi.Output[str] = pulumi.output_property("resourceGroupName")
    """
    The name of the Resource Group in the AutoScale Setting should be created. Changing this forces a new resource to be created.
    """
    tags: pulumi.Output[Optional[Dict[str, str]]] = pulumi.output_property("tags")
    """
    A mapping of tags to assign to the resource.
    """
    target_resource_id: pulumi.Output[str] = pulumi.output_property("targetResourceId")
    """
    Specifies the resource ID of the resource that the autoscale setting should be added to.
    """
    # pylint: disable=no-self-argument
    def __init__(__self__, resource_name, opts: Optional[pulumi.ResourceOptions] = None, enabled: Optional[pulumi.Input[bool]] = None, location: Optional[pulumi.Input[str]] = None, name: Optional[pulumi.Input[str]] = None, notification: Optional[pulumi.Input[pulumi.InputType['AutoscaleSettingNotificationArgs']]] = None, profiles: Optional[pulumi.Input[List[pulumi.Input[pulumi.InputType['AutoscaleSettingProfileArgs']]]]] = None, resource_group_name: Optional[pulumi.Input[str]] = None, tags: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None, target_resource_id: Optional[pulumi.Input[str]] = None, __props__=None, __name__=None, __opts__=None) -> None:
        """
        Manages a AutoScale Setting which can be applied to Virtual Machine Scale Sets, App Services and other scalable resources.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_azure as azure

        example_resource_group = azure.core.ResourceGroup("exampleResourceGroup", location="West US")
        example_scale_set = azure.compute.ScaleSet("exampleScaleSet")
        # ...
        example_autoscale_setting = azure.monitoring.AutoscaleSetting("exampleAutoscaleSetting",
            resource_group_name=example_resource_group.name,
            location=example_resource_group.location,
            target_resource_id=example_scale_set.id,
            profiles=[{
                "name": "defaultProfile",
                "capacity": {
                    "default": 1,
                    "minimum": 1,
                    "maximum": 10,
                },
                "rules": [
                    {
                        "metricTrigger": {
                            "metricName": "Percentage CPU",
                            "metricResourceId": example_scale_set.id,
                            "timeGrain": "PT1M",
                            "statistic": "Average",
                            "time_window": "PT5M",
                            "timeAggregation": "Average",
                            "operator": "GreaterThan",
                            "threshold": 75,
                        },
                        "scaleAction": {
                            "direction": "Increase",
                            "type": "ChangeCount",
                            "value": "1",
                            "cooldown": "PT1M",
                        },
                    },
                    {
                        "metricTrigger": {
                            "metricName": "Percentage CPU",
                            "metricResourceId": example_scale_set.id,
                            "timeGrain": "PT1M",
                            "statistic": "Average",
                            "time_window": "PT5M",
                            "timeAggregation": "Average",
                            "operator": "LessThan",
                            "threshold": 25,
                        },
                        "scaleAction": {
                            "direction": "Decrease",
                            "type": "ChangeCount",
                            "value": "1",
                            "cooldown": "PT1M",
                        },
                    },
                ],
            }],
            notification={
                "email": {
                    "sendToSubscriptionAdministrator": True,
                    "sendToSubscriptionCoAdministrator": True,
                    "customEmails": ["admin@contoso.com"],
                },
            })
        ```
        ### Repeating On Weekends)

        ```python
        import pulumi
        import pulumi_azure as azure

        example_resource_group = azure.core.ResourceGroup("exampleResourceGroup", location="West US")
        example_scale_set = azure.compute.ScaleSet("exampleScaleSet")
        # ...
        example_autoscale_setting = azure.monitoring.AutoscaleSetting("exampleAutoscaleSetting",
            resource_group_name=example_resource_group.name,
            location=example_resource_group.location,
            target_resource_id=example_scale_set.id,
            profiles=[{
                "name": "Weekends",
                "capacity": {
                    "default": 1,
                    "minimum": 1,
                    "maximum": 10,
                },
                "rules": [
                    {
                        "metricTrigger": {
                            "metricName": "Percentage CPU",
                            "metricResourceId": example_scale_set.id,
                            "timeGrain": "PT1M",
                            "statistic": "Average",
                            "time_window": "PT5M",
                            "timeAggregation": "Average",
                            "operator": "GreaterThan",
                            "threshold": 90,
                        },
                        "scaleAction": {
                            "direction": "Increase",
                            "type": "ChangeCount",
                            "value": "2",
                            "cooldown": "PT1M",
                        },
                    },
                    {
                        "metricTrigger": {
                            "metricName": "Percentage CPU",
                            "metricResourceId": example_scale_set.id,
                            "timeGrain": "PT1M",
                            "statistic": "Average",
                            "time_window": "PT5M",
                            "timeAggregation": "Average",
                            "operator": "LessThan",
                            "threshold": 10,
                        },
                        "scaleAction": {
                            "direction": "Decrease",
                            "type": "ChangeCount",
                            "value": "2",
                            "cooldown": "PT1M",
                        },
                    },
                ],
                "recurrence": {
                    "frequency": "Week",
                    "timezone": "Pacific Standard Time",
                    "days": [
                        "Saturday",
                        "Sunday",
                    ],
                    "hours": [12],
                    "minutes": [0],
                },
            }],
            notification={
                "email": {
                    "sendToSubscriptionAdministrator": True,
                    "sendToSubscriptionCoAdministrator": True,
                    "customEmails": ["admin@contoso.com"],
                },
            })
        ```
        ### For Fixed Dates)

        ```python
        import pulumi
        import pulumi_azure as azure

        example_resource_group = azure.core.ResourceGroup("exampleResourceGroup", location="West US")
        example_scale_set = azure.compute.ScaleSet("exampleScaleSet")
        # ...
        example_autoscale_setting = azure.monitoring.AutoscaleSetting("exampleAutoscaleSetting",
            enabled=True,
            resource_group_name=example_resource_group.name,
            location=example_resource_group.location,
            target_resource_id=example_scale_set.id,
            profiles=[{
                "name": "forJuly",
                "capacity": {
                    "default": 1,
                    "minimum": 1,
                    "maximum": 10,
                },
                "rules": [
                    {
                        "metricTrigger": {
                            "metricName": "Percentage CPU",
                            "metricResourceId": example_scale_set.id,
                            "timeGrain": "PT1M",
                            "statistic": "Average",
                            "time_window": "PT5M",
                            "timeAggregation": "Average",
                            "operator": "GreaterThan",
                            "threshold": 90,
                        },
                        "scaleAction": {
                            "direction": "Increase",
                            "type": "ChangeCount",
                            "value": "2",
                            "cooldown": "PT1M",
                        },
                    },
                    {
                        "metricTrigger": {
                            "metricName": "Percentage CPU",
                            "metricResourceId": example_scale_set.id,
                            "timeGrain": "PT1M",
                            "statistic": "Average",
                            "time_window": "PT5M",
                            "timeAggregation": "Average",
                            "operator": "LessThan",
                            "threshold": 10,
                        },
                        "scaleAction": {
                            "direction": "Decrease",
                            "type": "ChangeCount",
                            "value": "2",
                            "cooldown": "PT1M",
                        },
                    },
                ],
                "fixedDate": {
                    "timezone": "Pacific Standard Time",
                    "start": "2020-07-01T00:00:00Z",
                    "end": "2020-07-31T23:59:59Z",
                },
            }],
            notification={
                "email": {
                    "sendToSubscriptionAdministrator": True,
                    "sendToSubscriptionCoAdministrator": True,
                    "customEmails": ["admin@contoso.com"],
                },
            })
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] enabled: Specifies whether automatic scaling is enabled for the target resource. Defaults to `true`.
        :param pulumi.Input[str] location: Specifies the supported Azure location where the AutoScale Setting should exist. Changing this forces a new resource to be created.
        :param pulumi.Input[str] name: The name of the AutoScale Setting. Changing this forces a new resource to be created.
        :param pulumi.Input[pulumi.InputType['AutoscaleSettingNotificationArgs']] notification: Specifies a `notification` block as defined below.
        :param pulumi.Input[List[pulumi.Input[pulumi.InputType['AutoscaleSettingProfileArgs']]]] profiles: Specifies one or more (up to 20) `profile` blocks as defined below.
        :param pulumi.Input[str] resource_group_name: The name of the Resource Group in the AutoScale Setting should be created. Changing this forces a new resource to be created.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] tags: A mapping of tags to assign to the resource.
        :param pulumi.Input[str] target_resource_id: Specifies the resource ID of the resource that the autoscale setting should be added to.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['enabled'] = enabled
            __props__['location'] = location
            __props__['name'] = name
            __props__['notification'] = notification
            if profiles is None:
                raise TypeError("Missing required property 'profiles'")
            __props__['profiles'] = profiles
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            __props__['tags'] = tags
            if target_resource_id is None:
                raise TypeError("Missing required property 'target_resource_id'")
            __props__['target_resource_id'] = target_resource_id
        super(AutoscaleSetting, __self__).__init__(
            'azure:monitoring/autoscaleSetting:AutoscaleSetting',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str, id: str, opts: Optional[pulumi.ResourceOptions] = None, enabled: Optional[pulumi.Input[bool]] = None, location: Optional[pulumi.Input[str]] = None, name: Optional[pulumi.Input[str]] = None, notification: Optional[pulumi.Input[pulumi.InputType['AutoscaleSettingNotificationArgs']]] = None, profiles: Optional[pulumi.Input[List[pulumi.Input[pulumi.InputType['AutoscaleSettingProfileArgs']]]]] = None, resource_group_name: Optional[pulumi.Input[str]] = None, tags: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None, target_resource_id: Optional[pulumi.Input[str]] = None) -> 'AutoscaleSetting':
        """
        Get an existing AutoscaleSetting resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] enabled: Specifies whether automatic scaling is enabled for the target resource. Defaults to `true`.
        :param pulumi.Input[str] location: Specifies the supported Azure location where the AutoScale Setting should exist. Changing this forces a new resource to be created.
        :param pulumi.Input[str] name: The name of the AutoScale Setting. Changing this forces a new resource to be created.
        :param pulumi.Input[pulumi.InputType['AutoscaleSettingNotificationArgs']] notification: Specifies a `notification` block as defined below.
        :param pulumi.Input[List[pulumi.Input[pulumi.InputType['AutoscaleSettingProfileArgs']]]] profiles: Specifies one or more (up to 20) `profile` blocks as defined below.
        :param pulumi.Input[str] resource_group_name: The name of the Resource Group in the AutoScale Setting should be created. Changing this forces a new resource to be created.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] tags: A mapping of tags to assign to the resource.
        :param pulumi.Input[str] target_resource_id: Specifies the resource ID of the resource that the autoscale setting should be added to.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["enabled"] = enabled
        __props__["location"] = location
        __props__["name"] = name
        __props__["notification"] = notification
        __props__["profiles"] = profiles
        __props__["resource_group_name"] = resource_group_name
        __props__["tags"] = tags
        __props__["target_resource_id"] = target_resource_id
        return AutoscaleSetting(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

