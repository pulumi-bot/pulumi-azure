# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'ActionGroupArmRoleReceiverArgs',
    'ActionGroupAutomationRunbookReceiverArgs',
    'ActionGroupAzureAppPushReceiverArgs',
    'ActionGroupAzureFunctionReceiverArgs',
    'ActionGroupEmailReceiverArgs',
    'ActionGroupItsmReceiverArgs',
    'ActionGroupLogicAppReceiverArgs',
    'ActionGroupSmsReceiverArgs',
    'ActionGroupVoiceReceiverArgs',
    'ActionGroupWebhookReceiverArgs',
    'ActionRuleActionGroupConditionArgs',
    'ActionRuleActionGroupConditionAlertContextArgs',
    'ActionRuleActionGroupConditionAlertRuleIdArgs',
    'ActionRuleActionGroupConditionDescriptionArgs',
    'ActionRuleActionGroupConditionMonitorArgs',
    'ActionRuleActionGroupConditionMonitorServiceArgs',
    'ActionRuleActionGroupConditionSeverityArgs',
    'ActionRuleActionGroupConditionTargetResourceTypeArgs',
    'ActionRuleActionGroupScopeArgs',
    'ActionRuleSuppressionConditionArgs',
    'ActionRuleSuppressionConditionAlertContextArgs',
    'ActionRuleSuppressionConditionAlertRuleIdArgs',
    'ActionRuleSuppressionConditionDescriptionArgs',
    'ActionRuleSuppressionConditionMonitorArgs',
    'ActionRuleSuppressionConditionMonitorServiceArgs',
    'ActionRuleSuppressionConditionSeverityArgs',
    'ActionRuleSuppressionConditionTargetResourceTypeArgs',
    'ActionRuleSuppressionScopeArgs',
    'ActionRuleSuppressionSuppressionArgs',
    'ActionRuleSuppressionSuppressionScheduleArgs',
    'ActivityLogAlertActionArgs',
    'ActivityLogAlertCriteriaArgs',
    'AutoscaleSettingNotificationArgs',
    'AutoscaleSettingNotificationEmailArgs',
    'AutoscaleSettingNotificationWebhookArgs',
    'AutoscaleSettingProfileArgs',
    'AutoscaleSettingProfileCapacityArgs',
    'AutoscaleSettingProfileFixedDateArgs',
    'AutoscaleSettingProfileRecurrenceArgs',
    'AutoscaleSettingProfileRuleArgs',
    'AutoscaleSettingProfileRuleMetricTriggerArgs',
    'AutoscaleSettingProfileRuleScaleActionArgs',
    'DiagnosticSettingLogArgs',
    'DiagnosticSettingLogRetentionPolicyArgs',
    'DiagnosticSettingMetricArgs',
    'DiagnosticSettingMetricRetentionPolicyArgs',
    'LogProfileRetentionPolicyArgs',
    'MetricAlertActionArgs',
    'MetricAlertApplicationInsightsWebTestLocationAvailabilityCriteriaArgs',
    'MetricAlertCriteriaArgs',
    'MetricAlertCriteriaDimensionArgs',
    'MetricAlertDynamicCriteriaArgs',
    'MetricAlertDynamicCriteriaDimensionArgs',
    'ScheduledQueryRulesAlertActionArgs',
    'ScheduledQueryRulesAlertTriggerArgs',
    'ScheduledQueryRulesAlertTriggerMetricTriggerArgs',
    'ScheduledQueryRulesLogCriteriaArgs',
    'ScheduledQueryRulesLogCriteriaDimensionArgs',
]

@pulumi.input_type
class ActionGroupArmRoleReceiverArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The name of the ARM role receiver.
    """
    role_id: pulumi.Input[str] = pulumi.input_property("roleId")
    """
    The arm role id.
    """
    use_common_alert_schema: Optional[pulumi.Input[bool]] = pulumi.input_property("useCommonAlertSchema")
    """
    Enables or disables the common alert schema.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], role_id: pulumi.Input[str], use_common_alert_schema: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[str] name: The name of the ARM role receiver.
        :param pulumi.Input[str] role_id: The arm role id.
        :param pulumi.Input[bool] use_common_alert_schema: Enables or disables the common alert schema.
        """
        __self__.name = name
        __self__.role_id = role_id
        __self__.use_common_alert_schema = use_common_alert_schema

@pulumi.input_type
class ActionGroupAutomationRunbookReceiverArgs:
    automation_account_id: pulumi.Input[str] = pulumi.input_property("automationAccountId")
    """
    The automation account ID which holds this runbook and authenticates to Azure resources.
    """
    is_global_runbook: pulumi.Input[bool] = pulumi.input_property("isGlobalRunbook")
    """
    Indicates whether this instance is global runbook.
    """
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The name of the automation runbook receiver.
    """
    runbook_name: pulumi.Input[str] = pulumi.input_property("runbookName")
    """
    The name for this runbook.
    """
    service_uri: pulumi.Input[str] = pulumi.input_property("serviceUri")
    """
    The URI where webhooks should be sent.
    """
    webhook_resource_id: pulumi.Input[str] = pulumi.input_property("webhookResourceId")
    """
    The resource id for webhook linked to this runbook.
    """
    use_common_alert_schema: Optional[pulumi.Input[bool]] = pulumi.input_property("useCommonAlertSchema")
    """
    Enables or disables the common alert schema.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, automation_account_id: pulumi.Input[str], is_global_runbook: pulumi.Input[bool], name: pulumi.Input[str], runbook_name: pulumi.Input[str], service_uri: pulumi.Input[str], webhook_resource_id: pulumi.Input[str], use_common_alert_schema: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[str] automation_account_id: The automation account ID which holds this runbook and authenticates to Azure resources.
        :param pulumi.Input[bool] is_global_runbook: Indicates whether this instance is global runbook.
        :param pulumi.Input[str] name: The name of the automation runbook receiver.
        :param pulumi.Input[str] runbook_name: The name for this runbook.
        :param pulumi.Input[str] service_uri: The URI where webhooks should be sent.
        :param pulumi.Input[str] webhook_resource_id: The resource id for webhook linked to this runbook.
        :param pulumi.Input[bool] use_common_alert_schema: Enables or disables the common alert schema.
        """
        __self__.automation_account_id = automation_account_id
        __self__.is_global_runbook = is_global_runbook
        __self__.name = name
        __self__.runbook_name = runbook_name
        __self__.service_uri = service_uri
        __self__.webhook_resource_id = webhook_resource_id
        __self__.use_common_alert_schema = use_common_alert_schema

@pulumi.input_type
class ActionGroupAzureAppPushReceiverArgs:
    email_address: pulumi.Input[str] = pulumi.input_property("emailAddress")
    """
    The email address of the user signed into the mobile app who will receive push notifications from this receiver.
    """
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The name of the Azure app push receiver.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, email_address: pulumi.Input[str], name: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] email_address: The email address of the user signed into the mobile app who will receive push notifications from this receiver.
        :param pulumi.Input[str] name: The name of the Azure app push receiver.
        """
        __self__.email_address = email_address
        __self__.name = name

@pulumi.input_type
class ActionGroupAzureFunctionReceiverArgs:
    function_app_resource_id: pulumi.Input[str] = pulumi.input_property("functionAppResourceId")
    """
    The Azure resource ID of the function app.
    """
    function_name: pulumi.Input[str] = pulumi.input_property("functionName")
    """
    The function name in the function app.
    """
    http_trigger_url: pulumi.Input[str] = pulumi.input_property("httpTriggerUrl")
    """
    The http trigger url where http request sent to.
    """
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The name of the Azure Function receiver.
    """
    use_common_alert_schema: Optional[pulumi.Input[bool]] = pulumi.input_property("useCommonAlertSchema")
    """
    Enables or disables the common alert schema.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, function_app_resource_id: pulumi.Input[str], function_name: pulumi.Input[str], http_trigger_url: pulumi.Input[str], name: pulumi.Input[str], use_common_alert_schema: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[str] function_app_resource_id: The Azure resource ID of the function app.
        :param pulumi.Input[str] function_name: The function name in the function app.
        :param pulumi.Input[str] http_trigger_url: The http trigger url where http request sent to.
        :param pulumi.Input[str] name: The name of the Azure Function receiver.
        :param pulumi.Input[bool] use_common_alert_schema: Enables or disables the common alert schema.
        """
        __self__.function_app_resource_id = function_app_resource_id
        __self__.function_name = function_name
        __self__.http_trigger_url = http_trigger_url
        __self__.name = name
        __self__.use_common_alert_schema = use_common_alert_schema

@pulumi.input_type
class ActionGroupEmailReceiverArgs:
    email_address: pulumi.Input[str] = pulumi.input_property("emailAddress")
    """
    The email address of this receiver.
    """
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The name of the email receiver. Names must be unique (case-insensitive) across all receivers within an action group.
    """
    use_common_alert_schema: Optional[pulumi.Input[bool]] = pulumi.input_property("useCommonAlertSchema")
    """
    Enables or disables the common alert schema.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, email_address: pulumi.Input[str], name: pulumi.Input[str], use_common_alert_schema: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[str] email_address: The email address of this receiver.
        :param pulumi.Input[str] name: The name of the email receiver. Names must be unique (case-insensitive) across all receivers within an action group.
        :param pulumi.Input[bool] use_common_alert_schema: Enables or disables the common alert schema.
        """
        __self__.email_address = email_address
        __self__.name = name
        __self__.use_common_alert_schema = use_common_alert_schema

@pulumi.input_type
class ActionGroupItsmReceiverArgs:
    connection_id: pulumi.Input[str] = pulumi.input_property("connectionId")
    """
    The unique connection identifier of the ITSM connection.
    """
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The name of the ITSM receiver.
    """
    region: pulumi.Input[str] = pulumi.input_property("region")
    """
    The region of the workspace.
    """
    ticket_configuration: pulumi.Input[str] = pulumi.input_property("ticketConfiguration")
    """
    A JSON blob for the configurations of the ITSM action. CreateMultipleWorkItems option will be part of this blob as well.
    """
    workspace_id: pulumi.Input[str] = pulumi.input_property("workspaceId")
    """
    The Azure Log Analytics workspace ID where this connection is defined.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, connection_id: pulumi.Input[str], name: pulumi.Input[str], region: pulumi.Input[str], ticket_configuration: pulumi.Input[str], workspace_id: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] connection_id: The unique connection identifier of the ITSM connection.
        :param pulumi.Input[str] name: The name of the ITSM receiver.
        :param pulumi.Input[str] region: The region of the workspace.
        :param pulumi.Input[str] ticket_configuration: A JSON blob for the configurations of the ITSM action. CreateMultipleWorkItems option will be part of this blob as well.
        :param pulumi.Input[str] workspace_id: The Azure Log Analytics workspace ID where this connection is defined.
        """
        __self__.connection_id = connection_id
        __self__.name = name
        __self__.region = region
        __self__.ticket_configuration = ticket_configuration
        __self__.workspace_id = workspace_id

@pulumi.input_type
class ActionGroupLogicAppReceiverArgs:
    callback_url: pulumi.Input[str] = pulumi.input_property("callbackUrl")
    """
    The callback url where http request sent to.
    """
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The name of the logic app receiver.
    """
    resource_id: pulumi.Input[str] = pulumi.input_property("resourceId")
    """
    The Azure resource ID of the logic app.
    """
    use_common_alert_schema: Optional[pulumi.Input[bool]] = pulumi.input_property("useCommonAlertSchema")
    """
    Enables or disables the common alert schema.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, callback_url: pulumi.Input[str], name: pulumi.Input[str], resource_id: pulumi.Input[str], use_common_alert_schema: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[str] callback_url: The callback url where http request sent to.
        :param pulumi.Input[str] name: The name of the logic app receiver.
        :param pulumi.Input[str] resource_id: The Azure resource ID of the logic app.
        :param pulumi.Input[bool] use_common_alert_schema: Enables or disables the common alert schema.
        """
        __self__.callback_url = callback_url
        __self__.name = name
        __self__.resource_id = resource_id
        __self__.use_common_alert_schema = use_common_alert_schema

@pulumi.input_type
class ActionGroupSmsReceiverArgs:
    country_code: pulumi.Input[str] = pulumi.input_property("countryCode")
    """
    The country code of the SMS receiver.
    """
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The name of the SMS receiver. Names must be unique (case-insensitive) across all receivers within an action group.
    """
    phone_number: pulumi.Input[str] = pulumi.input_property("phoneNumber")
    """
    The phone number of the SMS receiver.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, country_code: pulumi.Input[str], name: pulumi.Input[str], phone_number: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] country_code: The country code of the SMS receiver.
        :param pulumi.Input[str] name: The name of the SMS receiver. Names must be unique (case-insensitive) across all receivers within an action group.
        :param pulumi.Input[str] phone_number: The phone number of the SMS receiver.
        """
        __self__.country_code = country_code
        __self__.name = name
        __self__.phone_number = phone_number

@pulumi.input_type
class ActionGroupVoiceReceiverArgs:
    country_code: pulumi.Input[str] = pulumi.input_property("countryCode")
    """
    The country code of the voice receiver.
    """
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The name of the voice receiver.
    """
    phone_number: pulumi.Input[str] = pulumi.input_property("phoneNumber")
    """
    The phone number of the voice receiver.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, country_code: pulumi.Input[str], name: pulumi.Input[str], phone_number: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] country_code: The country code of the voice receiver.
        :param pulumi.Input[str] name: The name of the voice receiver.
        :param pulumi.Input[str] phone_number: The phone number of the voice receiver.
        """
        __self__.country_code = country_code
        __self__.name = name
        __self__.phone_number = phone_number

@pulumi.input_type
class ActionGroupWebhookReceiverArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The name of the webhook receiver. Names must be unique (case-insensitive) across all receivers within an action group.
    """
    service_uri: pulumi.Input[str] = pulumi.input_property("serviceUri")
    """
    The URI where webhooks should be sent.
    """
    use_common_alert_schema: Optional[pulumi.Input[bool]] = pulumi.input_property("useCommonAlertSchema")
    """
    Enables or disables the common alert schema.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], service_uri: pulumi.Input[str], use_common_alert_schema: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[str] name: The name of the webhook receiver. Names must be unique (case-insensitive) across all receivers within an action group.
        :param pulumi.Input[str] service_uri: The URI where webhooks should be sent.
        :param pulumi.Input[bool] use_common_alert_schema: Enables or disables the common alert schema.
        """
        __self__.name = name
        __self__.service_uri = service_uri
        __self__.use_common_alert_schema = use_common_alert_schema

@pulumi.input_type
class ActionRuleActionGroupConditionArgs:
    alert_context: Optional[pulumi.Input['ActionRuleActionGroupConditionAlertContextArgs']] = pulumi.input_property("alertContext")
    """
    A `alert_context` block as defined below.
    """
    alert_rule_id: Optional[pulumi.Input['ActionRuleActionGroupConditionAlertRuleIdArgs']] = pulumi.input_property("alertRuleId")
    """
    A `alert_rule_id` block as defined below.
    """
    description: Optional[pulumi.Input['ActionRuleActionGroupConditionDescriptionArgs']] = pulumi.input_property("description")
    """
    A `description` block as defined below.
    """
    monitor: Optional[pulumi.Input['ActionRuleActionGroupConditionMonitorArgs']] = pulumi.input_property("monitor")
    """
    A `monitor` block as defined below.
    """
    monitor_service: Optional[pulumi.Input['ActionRuleActionGroupConditionMonitorServiceArgs']] = pulumi.input_property("monitorService")
    """
    A `monitor_service` as block defined below.
    """
    severity: Optional[pulumi.Input['ActionRuleActionGroupConditionSeverityArgs']] = pulumi.input_property("severity")
    """
    A `severity` block as defined below.
    """
    target_resource_type: Optional[pulumi.Input['ActionRuleActionGroupConditionTargetResourceTypeArgs']] = pulumi.input_property("targetResourceType")
    """
    A `target_resource_type` block as defined below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, alert_context: Optional[pulumi.Input['ActionRuleActionGroupConditionAlertContextArgs']] = None, alert_rule_id: Optional[pulumi.Input['ActionRuleActionGroupConditionAlertRuleIdArgs']] = None, description: Optional[pulumi.Input['ActionRuleActionGroupConditionDescriptionArgs']] = None, monitor: Optional[pulumi.Input['ActionRuleActionGroupConditionMonitorArgs']] = None, monitor_service: Optional[pulumi.Input['ActionRuleActionGroupConditionMonitorServiceArgs']] = None, severity: Optional[pulumi.Input['ActionRuleActionGroupConditionSeverityArgs']] = None, target_resource_type: Optional[pulumi.Input['ActionRuleActionGroupConditionTargetResourceTypeArgs']] = None) -> None:
        """
        :param pulumi.Input['ActionRuleActionGroupConditionAlertContextArgs'] alert_context: A `alert_context` block as defined below.
        :param pulumi.Input['ActionRuleActionGroupConditionAlertRuleIdArgs'] alert_rule_id: A `alert_rule_id` block as defined below.
        :param pulumi.Input['ActionRuleActionGroupConditionDescriptionArgs'] description: A `description` block as defined below.
        :param pulumi.Input['ActionRuleActionGroupConditionMonitorArgs'] monitor: A `monitor` block as defined below.
        :param pulumi.Input['ActionRuleActionGroupConditionMonitorServiceArgs'] monitor_service: A `monitor_service` as block defined below.
        :param pulumi.Input['ActionRuleActionGroupConditionSeverityArgs'] severity: A `severity` block as defined below.
        :param pulumi.Input['ActionRuleActionGroupConditionTargetResourceTypeArgs'] target_resource_type: A `target_resource_type` block as defined below.
        """
        __self__.alert_context = alert_context
        __self__.alert_rule_id = alert_rule_id
        __self__.description = description
        __self__.monitor = monitor
        __self__.monitor_service = monitor_service
        __self__.severity = severity
        __self__.target_resource_type = target_resource_type

@pulumi.input_type
class ActionRuleActionGroupConditionAlertContextArgs:
    operator: pulumi.Input[str] = pulumi.input_property("operator")
    """
    The operator for a given condition. Possible values are `Equals`, `NotEquals`, `Contains`, and `DoesNotContain`.
    """
    values: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("values")
    """
    A list of values to match for a given condition.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, operator: pulumi.Input[str], values: pulumi.Input[List[pulumi.Input[str]]]) -> None:
        """
        :param pulumi.Input[str] operator: The operator for a given condition. Possible values are `Equals`, `NotEquals`, `Contains`, and `DoesNotContain`.
        :param pulumi.Input[List[pulumi.Input[str]]] values: A list of values to match for a given condition.
        """
        __self__.operator = operator
        __self__.values = values

@pulumi.input_type
class ActionRuleActionGroupConditionAlertRuleIdArgs:
    operator: pulumi.Input[str] = pulumi.input_property("operator")
    """
    The operator for a given condition. Possible values are `Equals`, `NotEquals`, `Contains`, and `DoesNotContain`.
    """
    values: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("values")
    """
    A list of values to match for a given condition.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, operator: pulumi.Input[str], values: pulumi.Input[List[pulumi.Input[str]]]) -> None:
        """
        :param pulumi.Input[str] operator: The operator for a given condition. Possible values are `Equals`, `NotEquals`, `Contains`, and `DoesNotContain`.
        :param pulumi.Input[List[pulumi.Input[str]]] values: A list of values to match for a given condition.
        """
        __self__.operator = operator
        __self__.values = values

@pulumi.input_type
class ActionRuleActionGroupConditionDescriptionArgs:
    operator: pulumi.Input[str] = pulumi.input_property("operator")
    """
    The operator for a given condition. Possible values are `Equals`, `NotEquals`, `Contains`, and `DoesNotContain`.
    """
    values: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("values")
    """
    A list of values to match for a given condition.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, operator: pulumi.Input[str], values: pulumi.Input[List[pulumi.Input[str]]]) -> None:
        """
        :param pulumi.Input[str] operator: The operator for a given condition. Possible values are `Equals`, `NotEquals`, `Contains`, and `DoesNotContain`.
        :param pulumi.Input[List[pulumi.Input[str]]] values: A list of values to match for a given condition.
        """
        __self__.operator = operator
        __self__.values = values

@pulumi.input_type
class ActionRuleActionGroupConditionMonitorArgs:
    operator: pulumi.Input[str] = pulumi.input_property("operator")
    """
    The operator for a given condition. Possible values are `Equals` and `NotEquals`.
    """
    values: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("values")
    """
    A list of values to match for a given condition. Possible values are `Fired` and `Resolved`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, operator: pulumi.Input[str], values: pulumi.Input[List[pulumi.Input[str]]]) -> None:
        """
        :param pulumi.Input[str] operator: The operator for a given condition. Possible values are `Equals` and `NotEquals`.
        :param pulumi.Input[List[pulumi.Input[str]]] values: A list of values to match for a given condition. Possible values are `Fired` and `Resolved`.
        """
        __self__.operator = operator
        __self__.values = values

@pulumi.input_type
class ActionRuleActionGroupConditionMonitorServiceArgs:
    operator: pulumi.Input[str] = pulumi.input_property("operator")
    """
    The operator for a given condition. Possible values are `Equals` and `NotEquals`.
    """
    values: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("values")
    """
    A list of values to match for a given condition. Possible values are `ActivityLog Administrative`, `ActivityLog Autoscale`, `ActivityLog Policy`, `ActivityLog Recommendation`, `ActivityLog Security`, `Application Insights`, `Azure Backup`, `Data Box Edge`, `Data Box Gateway`, `Health Platform`, `Log Analytics`, `Platform`, and `Resource Health`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, operator: pulumi.Input[str], values: pulumi.Input[List[pulumi.Input[str]]]) -> None:
        """
        :param pulumi.Input[str] operator: The operator for a given condition. Possible values are `Equals` and `NotEquals`.
        :param pulumi.Input[List[pulumi.Input[str]]] values: A list of values to match for a given condition. Possible values are `ActivityLog Administrative`, `ActivityLog Autoscale`, `ActivityLog Policy`, `ActivityLog Recommendation`, `ActivityLog Security`, `Application Insights`, `Azure Backup`, `Data Box Edge`, `Data Box Gateway`, `Health Platform`, `Log Analytics`, `Platform`, and `Resource Health`.
        """
        __self__.operator = operator
        __self__.values = values

@pulumi.input_type
class ActionRuleActionGroupConditionSeverityArgs:
    operator: pulumi.Input[str] = pulumi.input_property("operator")
    """
    The operator for a given condition. Possible values are `Equals`and `NotEquals`.
    """
    values: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("values")
    """
    A list of values to match for a given condition. Possible values are `Sev0`, `Sev1`, `Sev2`, `Sev3`, and `Sev4`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, operator: pulumi.Input[str], values: pulumi.Input[List[pulumi.Input[str]]]) -> None:
        """
        :param pulumi.Input[str] operator: The operator for a given condition. Possible values are `Equals`and `NotEquals`.
        :param pulumi.Input[List[pulumi.Input[str]]] values: A list of values to match for a given condition. Possible values are `Sev0`, `Sev1`, `Sev2`, `Sev3`, and `Sev4`.
        """
        __self__.operator = operator
        __self__.values = values

@pulumi.input_type
class ActionRuleActionGroupConditionTargetResourceTypeArgs:
    operator: pulumi.Input[str] = pulumi.input_property("operator")
    """
    The operator for a given condition. Possible values are `Equals` and `NotEquals`.
    """
    values: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("values")
    """
    A list of values to match for a given condition. The values should be valid resource types.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, operator: pulumi.Input[str], values: pulumi.Input[List[pulumi.Input[str]]]) -> None:
        """
        :param pulumi.Input[str] operator: The operator for a given condition. Possible values are `Equals` and `NotEquals`.
        :param pulumi.Input[List[pulumi.Input[str]]] values: A list of values to match for a given condition. The values should be valid resource types.
        """
        __self__.operator = operator
        __self__.values = values

@pulumi.input_type
class ActionRuleActionGroupScopeArgs:
    resource_ids: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("resourceIds")
    """
    A list of resource IDs of the given scope type which will be the target of action rule.
    """
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    Specifies the type of target scope. Possible values are `ResourceGroup` and `Resource`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, resource_ids: pulumi.Input[List[pulumi.Input[str]]], type: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[str]]] resource_ids: A list of resource IDs of the given scope type which will be the target of action rule.
        :param pulumi.Input[str] type: Specifies the type of target scope. Possible values are `ResourceGroup` and `Resource`.
        """
        __self__.resource_ids = resource_ids
        __self__.type = type

@pulumi.input_type
class ActionRuleSuppressionConditionArgs:
    alert_context: Optional[pulumi.Input['ActionRuleSuppressionConditionAlertContextArgs']] = pulumi.input_property("alertContext")
    """
    A `alert_context` block as defined below.
    """
    alert_rule_id: Optional[pulumi.Input['ActionRuleSuppressionConditionAlertRuleIdArgs']] = pulumi.input_property("alertRuleId")
    """
    A `alert_rule_id` block as defined below.
    """
    description: Optional[pulumi.Input['ActionRuleSuppressionConditionDescriptionArgs']] = pulumi.input_property("description")
    """
    A `description` block as defined below.
    """
    monitor: Optional[pulumi.Input['ActionRuleSuppressionConditionMonitorArgs']] = pulumi.input_property("monitor")
    """
    A `monitor` block as defined below.
    """
    monitor_service: Optional[pulumi.Input['ActionRuleSuppressionConditionMonitorServiceArgs']] = pulumi.input_property("monitorService")
    """
    A `monitor_service` as block defined below.
    """
    severity: Optional[pulumi.Input['ActionRuleSuppressionConditionSeverityArgs']] = pulumi.input_property("severity")
    """
    A `severity` block as defined below.
    """
    target_resource_type: Optional[pulumi.Input['ActionRuleSuppressionConditionTargetResourceTypeArgs']] = pulumi.input_property("targetResourceType")
    """
    A `target_resource_type` block as defined below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, alert_context: Optional[pulumi.Input['ActionRuleSuppressionConditionAlertContextArgs']] = None, alert_rule_id: Optional[pulumi.Input['ActionRuleSuppressionConditionAlertRuleIdArgs']] = None, description: Optional[pulumi.Input['ActionRuleSuppressionConditionDescriptionArgs']] = None, monitor: Optional[pulumi.Input['ActionRuleSuppressionConditionMonitorArgs']] = None, monitor_service: Optional[pulumi.Input['ActionRuleSuppressionConditionMonitorServiceArgs']] = None, severity: Optional[pulumi.Input['ActionRuleSuppressionConditionSeverityArgs']] = None, target_resource_type: Optional[pulumi.Input['ActionRuleSuppressionConditionTargetResourceTypeArgs']] = None) -> None:
        """
        :param pulumi.Input['ActionRuleSuppressionConditionAlertContextArgs'] alert_context: A `alert_context` block as defined below.
        :param pulumi.Input['ActionRuleSuppressionConditionAlertRuleIdArgs'] alert_rule_id: A `alert_rule_id` block as defined below.
        :param pulumi.Input['ActionRuleSuppressionConditionDescriptionArgs'] description: A `description` block as defined below.
        :param pulumi.Input['ActionRuleSuppressionConditionMonitorArgs'] monitor: A `monitor` block as defined below.
        :param pulumi.Input['ActionRuleSuppressionConditionMonitorServiceArgs'] monitor_service: A `monitor_service` as block defined below.
        :param pulumi.Input['ActionRuleSuppressionConditionSeverityArgs'] severity: A `severity` block as defined below.
        :param pulumi.Input['ActionRuleSuppressionConditionTargetResourceTypeArgs'] target_resource_type: A `target_resource_type` block as defined below.
        """
        __self__.alert_context = alert_context
        __self__.alert_rule_id = alert_rule_id
        __self__.description = description
        __self__.monitor = monitor
        __self__.monitor_service = monitor_service
        __self__.severity = severity
        __self__.target_resource_type = target_resource_type

@pulumi.input_type
class ActionRuleSuppressionConditionAlertContextArgs:
    operator: pulumi.Input[str] = pulumi.input_property("operator")
    """
    The operator for a given condition. Possible values are `Equals`, `NotEquals`, `Contains`, and `DoesNotContain`.
    """
    values: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("values")
    """
    A list of values to match for a given condition.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, operator: pulumi.Input[str], values: pulumi.Input[List[pulumi.Input[str]]]) -> None:
        """
        :param pulumi.Input[str] operator: The operator for a given condition. Possible values are `Equals`, `NotEquals`, `Contains`, and `DoesNotContain`.
        :param pulumi.Input[List[pulumi.Input[str]]] values: A list of values to match for a given condition.
        """
        __self__.operator = operator
        __self__.values = values

@pulumi.input_type
class ActionRuleSuppressionConditionAlertRuleIdArgs:
    operator: pulumi.Input[str] = pulumi.input_property("operator")
    """
    The operator for a given condition. Possible values are `Equals`, `NotEquals`, `Contains`, and `DoesNotContain`.
    """
    values: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("values")
    """
    A list of values to match for a given condition.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, operator: pulumi.Input[str], values: pulumi.Input[List[pulumi.Input[str]]]) -> None:
        """
        :param pulumi.Input[str] operator: The operator for a given condition. Possible values are `Equals`, `NotEquals`, `Contains`, and `DoesNotContain`.
        :param pulumi.Input[List[pulumi.Input[str]]] values: A list of values to match for a given condition.
        """
        __self__.operator = operator
        __self__.values = values

@pulumi.input_type
class ActionRuleSuppressionConditionDescriptionArgs:
    operator: pulumi.Input[str] = pulumi.input_property("operator")
    """
    The operator for a given condition. Possible values are `Equals`, `NotEquals`, `Contains`, and `DoesNotContain`.
    """
    values: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("values")
    """
    A list of values to match for a given condition.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, operator: pulumi.Input[str], values: pulumi.Input[List[pulumi.Input[str]]]) -> None:
        """
        :param pulumi.Input[str] operator: The operator for a given condition. Possible values are `Equals`, `NotEquals`, `Contains`, and `DoesNotContain`.
        :param pulumi.Input[List[pulumi.Input[str]]] values: A list of values to match for a given condition.
        """
        __self__.operator = operator
        __self__.values = values

@pulumi.input_type
class ActionRuleSuppressionConditionMonitorArgs:
    operator: pulumi.Input[str] = pulumi.input_property("operator")
    """
    The operator for a given condition. Possible values are `Equals` and `NotEquals`.
    """
    values: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("values")
    """
    A list of values to match for a given condition. Possible values are `Fired` and `Resolved`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, operator: pulumi.Input[str], values: pulumi.Input[List[pulumi.Input[str]]]) -> None:
        """
        :param pulumi.Input[str] operator: The operator for a given condition. Possible values are `Equals` and `NotEquals`.
        :param pulumi.Input[List[pulumi.Input[str]]] values: A list of values to match for a given condition. Possible values are `Fired` and `Resolved`.
        """
        __self__.operator = operator
        __self__.values = values

@pulumi.input_type
class ActionRuleSuppressionConditionMonitorServiceArgs:
    operator: pulumi.Input[str] = pulumi.input_property("operator")
    """
    The operator for a given condition. Possible values are `Equals` and `NotEquals`.
    """
    values: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("values")
    """
    A list of values to match for a given condition. Possible values are `ActivityLog Administrative`, `ActivityLog Autoscale`, `ActivityLog Policy`, `ActivityLog Recommendation`, `ActivityLog Security`, `Application Insights`, `Azure Backup`, `Data Box Edge`, `Data Box Gateway`, `Health Platform`, `Log Analytics`, `Platform`, and `Resource Health`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, operator: pulumi.Input[str], values: pulumi.Input[List[pulumi.Input[str]]]) -> None:
        """
        :param pulumi.Input[str] operator: The operator for a given condition. Possible values are `Equals` and `NotEquals`.
        :param pulumi.Input[List[pulumi.Input[str]]] values: A list of values to match for a given condition. Possible values are `ActivityLog Administrative`, `ActivityLog Autoscale`, `ActivityLog Policy`, `ActivityLog Recommendation`, `ActivityLog Security`, `Application Insights`, `Azure Backup`, `Data Box Edge`, `Data Box Gateway`, `Health Platform`, `Log Analytics`, `Platform`, and `Resource Health`.
        """
        __self__.operator = operator
        __self__.values = values

@pulumi.input_type
class ActionRuleSuppressionConditionSeverityArgs:
    operator: pulumi.Input[str] = pulumi.input_property("operator")
    """
    The operator for a given condition. Possible values are `Equals`and `NotEquals`.
    """
    values: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("values")
    """
    A list of values to match for a given condition. Possible values are `Sev0`, `Sev1`, `Sev2`, `Sev3`, and `Sev4`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, operator: pulumi.Input[str], values: pulumi.Input[List[pulumi.Input[str]]]) -> None:
        """
        :param pulumi.Input[str] operator: The operator for a given condition. Possible values are `Equals`and `NotEquals`.
        :param pulumi.Input[List[pulumi.Input[str]]] values: A list of values to match for a given condition. Possible values are `Sev0`, `Sev1`, `Sev2`, `Sev3`, and `Sev4`.
        """
        __self__.operator = operator
        __self__.values = values

@pulumi.input_type
class ActionRuleSuppressionConditionTargetResourceTypeArgs:
    operator: pulumi.Input[str] = pulumi.input_property("operator")
    """
    The operator for a given condition. Possible values are `Equals` and `NotEquals`.
    """
    values: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("values")
    """
    A list of values to match for a given condition. The values should be valid resource types.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, operator: pulumi.Input[str], values: pulumi.Input[List[pulumi.Input[str]]]) -> None:
        """
        :param pulumi.Input[str] operator: The operator for a given condition. Possible values are `Equals` and `NotEquals`.
        :param pulumi.Input[List[pulumi.Input[str]]] values: A list of values to match for a given condition. The values should be valid resource types.
        """
        __self__.operator = operator
        __self__.values = values

@pulumi.input_type
class ActionRuleSuppressionScopeArgs:
    resource_ids: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("resourceIds")
    """
    A list of resource IDs of the given scope type which will be the target of action rule.
    """
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    Specifies the type of target scope. Possible values are `ResourceGroup` and `Resource`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, resource_ids: pulumi.Input[List[pulumi.Input[str]]], type: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[str]]] resource_ids: A list of resource IDs of the given scope type which will be the target of action rule.
        :param pulumi.Input[str] type: Specifies the type of target scope. Possible values are `ResourceGroup` and `Resource`.
        """
        __self__.resource_ids = resource_ids
        __self__.type = type

@pulumi.input_type
class ActionRuleSuppressionSuppressionArgs:
    recurrence_type: pulumi.Input[str] = pulumi.input_property("recurrenceType")
    """
    Specifies the type of suppression. Possible values are `Always`, `Daily`, `Monthly`, `Once`, and `Weekly`.
    """
    schedule: Optional[pulumi.Input['ActionRuleSuppressionSuppressionScheduleArgs']] = pulumi.input_property("schedule")
    """
    A `schedule` block as defined below. Required if `recurrence_type` is `Daily`, `Monthly`, `Once` or `Weekly`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, recurrence_type: pulumi.Input[str], schedule: Optional[pulumi.Input['ActionRuleSuppressionSuppressionScheduleArgs']] = None) -> None:
        """
        :param pulumi.Input[str] recurrence_type: Specifies the type of suppression. Possible values are `Always`, `Daily`, `Monthly`, `Once`, and `Weekly`.
        :param pulumi.Input['ActionRuleSuppressionSuppressionScheduleArgs'] schedule: A `schedule` block as defined below. Required if `recurrence_type` is `Daily`, `Monthly`, `Once` or `Weekly`.
        """
        __self__.recurrence_type = recurrence_type
        __self__.schedule = schedule

@pulumi.input_type
class ActionRuleSuppressionSuppressionScheduleArgs:
    end_date_utc: pulumi.Input[str] = pulumi.input_property("endDateUtc")
    """
    specifies the recurrence UTC end datetime (Y-m-d'T'H:M:S'Z').
    """
    start_date_utc: pulumi.Input[str] = pulumi.input_property("startDateUtc")
    """
    specifies the recurrence UTC start datetime (Y-m-d'T'H:M:S'Z').
    """
    recurrence_monthlies: Optional[pulumi.Input[List[pulumi.Input[float]]]] = pulumi.input_property("recurrenceMonthlies")
    """
    specifies the list of dayOfMonth to recurrence. Possible values are between `1` - `31`. Required if `recurrence_type` is `Monthly`.
    """
    recurrence_weeklies: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("recurrenceWeeklies")
    """
    specifies the list of dayOfWeek to recurrence. Possible values are `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` and  `Saturday`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, end_date_utc: pulumi.Input[str], start_date_utc: pulumi.Input[str], recurrence_monthlies: Optional[pulumi.Input[List[pulumi.Input[float]]]] = None, recurrence_weeklies: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[str] end_date_utc: specifies the recurrence UTC end datetime (Y-m-d'T'H:M:S'Z').
        :param pulumi.Input[str] start_date_utc: specifies the recurrence UTC start datetime (Y-m-d'T'H:M:S'Z').
        :param pulumi.Input[List[pulumi.Input[float]]] recurrence_monthlies: specifies the list of dayOfMonth to recurrence. Possible values are between `1` - `31`. Required if `recurrence_type` is `Monthly`.
        :param pulumi.Input[List[pulumi.Input[str]]] recurrence_weeklies: specifies the list of dayOfWeek to recurrence. Possible values are `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` and  `Saturday`.
        """
        __self__.end_date_utc = end_date_utc
        __self__.start_date_utc = start_date_utc
        __self__.recurrence_monthlies = recurrence_monthlies
        __self__.recurrence_weeklies = recurrence_weeklies

@pulumi.input_type
class ActivityLogAlertActionArgs:
    action_group_id: pulumi.Input[str] = pulumi.input_property("actionGroupId")
    """
    The ID of the Action Group can be sourced from the `monitoring.ActionGroup` resource.
    """
    webhook_properties: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("webhookProperties")
    """
    The map of custom string properties to include with the post operation. These data are appended to the webhook payload.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, action_group_id: pulumi.Input[str], webhook_properties: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[str] action_group_id: The ID of the Action Group can be sourced from the `monitoring.ActionGroup` resource.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] webhook_properties: The map of custom string properties to include with the post operation. These data are appended to the webhook payload.
        """
        __self__.action_group_id = action_group_id
        __self__.webhook_properties = webhook_properties

@pulumi.input_type
class ActivityLogAlertCriteriaArgs:
    category: pulumi.Input[str] = pulumi.input_property("category")
    """
    The category of the operation. Possible values are `Administrative`, `Autoscale`, `Policy`, `Recommendation`, `ResourceHealth`, `Security` and `ServiceHealth`.
    """
    caller: Optional[pulumi.Input[str]] = pulumi.input_property("caller")
    """
    The email address or Azure Active Directory identifier of the user who performed the operation.
    """
    level: Optional[pulumi.Input[str]] = pulumi.input_property("level")
    """
    The severity level of the event. Possible values are `Verbose`, `Informational`, `Warning`, `Error`, and `Critical`.
    """
    operation_name: Optional[pulumi.Input[str]] = pulumi.input_property("operationName")
    """
    The Resource Manager Role-Based Access Control operation name. Supported operation should be of the form: `<resourceProvider>/<resourceType>/<operation>`.
    """
    recommendation_category: Optional[pulumi.Input[str]] = pulumi.input_property("recommendationCategory")
    """
    The recommendation category of the event. Possible values are `Cost`, `Reliability`, `OperationalExcellence` and `Performance`. It is only allowed when `category` is `Recommendation`.
    """
    recommendation_impact: Optional[pulumi.Input[str]] = pulumi.input_property("recommendationImpact")
    """
    The recommendation impact of the event. Possible values are `High`, `Medium` and `Low`. It is only allowed when `category` is `Recommendation`.
    """
    recommendation_type: Optional[pulumi.Input[str]] = pulumi.input_property("recommendationType")
    """
    The recommendation type of the event. It is only allowed when `category` is `Recommendation`.
    """
    resource_group: Optional[pulumi.Input[str]] = pulumi.input_property("resourceGroup")
    """
    The name of resource group monitored by the activity log alert.
    """
    resource_id: Optional[pulumi.Input[str]] = pulumi.input_property("resourceId")
    """
    The specific resource monitored by the activity log alert. It should be within one of the `scopes`.
    """
    resource_provider: Optional[pulumi.Input[str]] = pulumi.input_property("resourceProvider")
    """
    The name of the resource provider monitored by the activity log alert.
    """
    resource_type: Optional[pulumi.Input[str]] = pulumi.input_property("resourceType")
    """
    The resource type monitored by the activity log alert.
    """
    status: Optional[pulumi.Input[str]] = pulumi.input_property("status")
    """
    The status of the event. For example, `Started`, `Failed`, or `Succeeded`.
    """
    sub_status: Optional[pulumi.Input[str]] = pulumi.input_property("subStatus")
    """
    The sub status of the event.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, category: pulumi.Input[str], caller: Optional[pulumi.Input[str]] = None, level: Optional[pulumi.Input[str]] = None, operation_name: Optional[pulumi.Input[str]] = None, recommendation_category: Optional[pulumi.Input[str]] = None, recommendation_impact: Optional[pulumi.Input[str]] = None, recommendation_type: Optional[pulumi.Input[str]] = None, resource_group: Optional[pulumi.Input[str]] = None, resource_id: Optional[pulumi.Input[str]] = None, resource_provider: Optional[pulumi.Input[str]] = None, resource_type: Optional[pulumi.Input[str]] = None, status: Optional[pulumi.Input[str]] = None, sub_status: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] category: The category of the operation. Possible values are `Administrative`, `Autoscale`, `Policy`, `Recommendation`, `ResourceHealth`, `Security` and `ServiceHealth`.
        :param pulumi.Input[str] caller: The email address or Azure Active Directory identifier of the user who performed the operation.
        :param pulumi.Input[str] level: The severity level of the event. Possible values are `Verbose`, `Informational`, `Warning`, `Error`, and `Critical`.
        :param pulumi.Input[str] operation_name: The Resource Manager Role-Based Access Control operation name. Supported operation should be of the form: `<resourceProvider>/<resourceType>/<operation>`.
        :param pulumi.Input[str] recommendation_category: The recommendation category of the event. Possible values are `Cost`, `Reliability`, `OperationalExcellence` and `Performance`. It is only allowed when `category` is `Recommendation`.
        :param pulumi.Input[str] recommendation_impact: The recommendation impact of the event. Possible values are `High`, `Medium` and `Low`. It is only allowed when `category` is `Recommendation`.
        :param pulumi.Input[str] recommendation_type: The recommendation type of the event. It is only allowed when `category` is `Recommendation`.
        :param pulumi.Input[str] resource_group: The name of resource group monitored by the activity log alert.
        :param pulumi.Input[str] resource_id: The specific resource monitored by the activity log alert. It should be within one of the `scopes`.
        :param pulumi.Input[str] resource_provider: The name of the resource provider monitored by the activity log alert.
        :param pulumi.Input[str] resource_type: The resource type monitored by the activity log alert.
        :param pulumi.Input[str] status: The status of the event. For example, `Started`, `Failed`, or `Succeeded`.
        :param pulumi.Input[str] sub_status: The sub status of the event.
        """
        __self__.category = category
        __self__.caller = caller
        __self__.level = level
        __self__.operation_name = operation_name
        __self__.recommendation_category = recommendation_category
        __self__.recommendation_impact = recommendation_impact
        __self__.recommendation_type = recommendation_type
        __self__.resource_group = resource_group
        __self__.resource_id = resource_id
        __self__.resource_provider = resource_provider
        __self__.resource_type = resource_type
        __self__.status = status
        __self__.sub_status = sub_status

@pulumi.input_type
class AutoscaleSettingNotificationArgs:
    email: Optional[pulumi.Input['AutoscaleSettingNotificationEmailArgs']] = pulumi.input_property("email")
    """
    A `email` block as defined below.
    """
    webhooks: Optional[pulumi.Input[List[pulumi.Input['AutoscaleSettingNotificationWebhookArgs']]]] = pulumi.input_property("webhooks")
    """
    One or more `webhook` blocks as defined below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, email: Optional[pulumi.Input['AutoscaleSettingNotificationEmailArgs']] = None, webhooks: Optional[pulumi.Input[List[pulumi.Input['AutoscaleSettingNotificationWebhookArgs']]]] = None) -> None:
        """
        :param pulumi.Input['AutoscaleSettingNotificationEmailArgs'] email: A `email` block as defined below.
        :param pulumi.Input[List[pulumi.Input['AutoscaleSettingNotificationWebhookArgs']]] webhooks: One or more `webhook` blocks as defined below.
        """
        __self__.email = email
        __self__.webhooks = webhooks

@pulumi.input_type
class AutoscaleSettingNotificationEmailArgs:
    custom_emails: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("customEmails")
    """
    Specifies a list of custom email addresses to which the email notifications will be sent.
    """
    send_to_subscription_administrator: Optional[pulumi.Input[bool]] = pulumi.input_property("sendToSubscriptionAdministrator")
    """
    Should email notifications be sent to the subscription administrator? Defaults to `false`.
    """
    send_to_subscription_co_administrator: Optional[pulumi.Input[bool]] = pulumi.input_property("sendToSubscriptionCoAdministrator")
    """
    Should email notifications be sent to the subscription co-administrator? Defaults to `false`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, custom_emails: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, send_to_subscription_administrator: Optional[pulumi.Input[bool]] = None, send_to_subscription_co_administrator: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[str]]] custom_emails: Specifies a list of custom email addresses to which the email notifications will be sent.
        :param pulumi.Input[bool] send_to_subscription_administrator: Should email notifications be sent to the subscription administrator? Defaults to `false`.
        :param pulumi.Input[bool] send_to_subscription_co_administrator: Should email notifications be sent to the subscription co-administrator? Defaults to `false`.
        """
        __self__.custom_emails = custom_emails
        __self__.send_to_subscription_administrator = send_to_subscription_administrator
        __self__.send_to_subscription_co_administrator = send_to_subscription_co_administrator

@pulumi.input_type
class AutoscaleSettingNotificationWebhookArgs:
    service_uri: pulumi.Input[str] = pulumi.input_property("serviceUri")
    """
    The HTTPS URI which should receive scale notifications.
    """
    properties: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("properties")
    """
    A map of settings.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, service_uri: pulumi.Input[str], properties: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[str] service_uri: The HTTPS URI which should receive scale notifications.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] properties: A map of settings.
        """
        __self__.service_uri = service_uri
        __self__.properties = properties

@pulumi.input_type
class AutoscaleSettingProfileArgs:
    capacity: pulumi.Input['AutoscaleSettingProfileCapacityArgs'] = pulumi.input_property("capacity")
    """
    A `capacity` block as defined below.
    """
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    Specifies the name of the profile.
    """
    fixed_date: Optional[pulumi.Input['AutoscaleSettingProfileFixedDateArgs']] = pulumi.input_property("fixedDate")
    """
    A `fixed_date` block as defined below. This cannot be specified if a `recurrence` block is specified.
    """
    recurrence: Optional[pulumi.Input['AutoscaleSettingProfileRecurrenceArgs']] = pulumi.input_property("recurrence")
    """
    A `recurrence` block as defined below. This cannot be specified if a `fixed_date` block is specified.
    """
    rules: Optional[pulumi.Input[List[pulumi.Input['AutoscaleSettingProfileRuleArgs']]]] = pulumi.input_property("rules")
    """
    One or more (up to 10) `rule` blocks as defined below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, capacity: pulumi.Input['AutoscaleSettingProfileCapacityArgs'], name: pulumi.Input[str], fixed_date: Optional[pulumi.Input['AutoscaleSettingProfileFixedDateArgs']] = None, recurrence: Optional[pulumi.Input['AutoscaleSettingProfileRecurrenceArgs']] = None, rules: Optional[pulumi.Input[List[pulumi.Input['AutoscaleSettingProfileRuleArgs']]]] = None) -> None:
        """
        :param pulumi.Input['AutoscaleSettingProfileCapacityArgs'] capacity: A `capacity` block as defined below.
        :param pulumi.Input[str] name: Specifies the name of the profile.
        :param pulumi.Input['AutoscaleSettingProfileFixedDateArgs'] fixed_date: A `fixed_date` block as defined below. This cannot be specified if a `recurrence` block is specified.
        :param pulumi.Input['AutoscaleSettingProfileRecurrenceArgs'] recurrence: A `recurrence` block as defined below. This cannot be specified if a `fixed_date` block is specified.
        :param pulumi.Input[List[pulumi.Input['AutoscaleSettingProfileRuleArgs']]] rules: One or more (up to 10) `rule` blocks as defined below.
        """
        __self__.capacity = capacity
        __self__.name = name
        __self__.fixed_date = fixed_date
        __self__.recurrence = recurrence
        __self__.rules = rules

@pulumi.input_type
class AutoscaleSettingProfileCapacityArgs:
    default: pulumi.Input[float] = pulumi.input_property("default")
    """
    The number of instances that are available for scaling if metrics are not available for evaluation. The default is only used if the current instance count is lower than the default. Valid values are between `0` and `1000`.
    """
    maximum: pulumi.Input[float] = pulumi.input_property("maximum")
    """
    The maximum number of instances for this resource. Valid values are between `0` and `1000`.
    """
    minimum: pulumi.Input[float] = pulumi.input_property("minimum")
    """
    The minimum number of instances for this resource. Valid values are between `0` and `1000`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, default: pulumi.Input[float], maximum: pulumi.Input[float], minimum: pulumi.Input[float]) -> None:
        """
        :param pulumi.Input[float] default: The number of instances that are available for scaling if metrics are not available for evaluation. The default is only used if the current instance count is lower than the default. Valid values are between `0` and `1000`.
        :param pulumi.Input[float] maximum: The maximum number of instances for this resource. Valid values are between `0` and `1000`.
        :param pulumi.Input[float] minimum: The minimum number of instances for this resource. Valid values are between `0` and `1000`.
        """
        __self__.default = default
        __self__.maximum = maximum
        __self__.minimum = minimum

@pulumi.input_type
class AutoscaleSettingProfileFixedDateArgs:
    end: pulumi.Input[str] = pulumi.input_property("end")
    """
    Specifies the end date for the profile, formatted as an RFC3339 date string.
    """
    start: pulumi.Input[str] = pulumi.input_property("start")
    """
    Specifies the start date for the profile, formatted as an RFC3339 date string.
    """
    timezone: Optional[pulumi.Input[str]] = pulumi.input_property("timezone")
    """
    The Time Zone of the `start` and `end` times. A list of [possible values can be found here](https://msdn.microsoft.com/en-us/library/azure/dn931928.aspx). Defaults to `UTC`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, end: pulumi.Input[str], start: pulumi.Input[str], timezone: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] end: Specifies the end date for the profile, formatted as an RFC3339 date string.
        :param pulumi.Input[str] start: Specifies the start date for the profile, formatted as an RFC3339 date string.
        :param pulumi.Input[str] timezone: The Time Zone of the `start` and `end` times. A list of [possible values can be found here](https://msdn.microsoft.com/en-us/library/azure/dn931928.aspx). Defaults to `UTC`.
        """
        __self__.end = end
        __self__.start = start
        __self__.timezone = timezone

@pulumi.input_type
class AutoscaleSettingProfileRecurrenceArgs:
    days: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("days")
    """
    A list of days that this profile takes effect on. Possible values include `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday` and `Sunday`.
    """
    hours: pulumi.Input[float] = pulumi.input_property("hours")
    """
    A list containing a single item, which specifies the Hour interval at which this recurrence should be triggered (in 24-hour time). Possible values are from `0` to `23`.
    """
    minutes: pulumi.Input[float] = pulumi.input_property("minutes")
    """
    A list containing a single item which specifies the Minute interval at which this recurrence should be triggered.
    """
    timezone: Optional[pulumi.Input[str]] = pulumi.input_property("timezone")
    """
    The Time Zone used for the `hours` field. A list of [possible values can be found here](https://msdn.microsoft.com/en-us/library/azure/dn931928.aspx). Defaults to `UTC`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, days: pulumi.Input[List[pulumi.Input[str]]], hours: pulumi.Input[float], minutes: pulumi.Input[float], timezone: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[str]]] days: A list of days that this profile takes effect on. Possible values include `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday` and `Sunday`.
        :param pulumi.Input[float] hours: A list containing a single item, which specifies the Hour interval at which this recurrence should be triggered (in 24-hour time). Possible values are from `0` to `23`.
        :param pulumi.Input[float] minutes: A list containing a single item which specifies the Minute interval at which this recurrence should be triggered.
        :param pulumi.Input[str] timezone: The Time Zone used for the `hours` field. A list of [possible values can be found here](https://msdn.microsoft.com/en-us/library/azure/dn931928.aspx). Defaults to `UTC`.
        """
        __self__.days = days
        __self__.hours = hours
        __self__.minutes = minutes
        __self__.timezone = timezone

@pulumi.input_type
class AutoscaleSettingProfileRuleArgs:
    metric_trigger: pulumi.Input['AutoscaleSettingProfileRuleMetricTriggerArgs'] = pulumi.input_property("metricTrigger")
    """
    A `metric_trigger` block as defined below.
    """
    scale_action: pulumi.Input['AutoscaleSettingProfileRuleScaleActionArgs'] = pulumi.input_property("scaleAction")
    """
    A `scale_action` block as defined below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, metric_trigger: pulumi.Input['AutoscaleSettingProfileRuleMetricTriggerArgs'], scale_action: pulumi.Input['AutoscaleSettingProfileRuleScaleActionArgs']) -> None:
        """
        :param pulumi.Input['AutoscaleSettingProfileRuleMetricTriggerArgs'] metric_trigger: A `metric_trigger` block as defined below.
        :param pulumi.Input['AutoscaleSettingProfileRuleScaleActionArgs'] scale_action: A `scale_action` block as defined below.
        """
        __self__.metric_trigger = metric_trigger
        __self__.scale_action = scale_action

@pulumi.input_type
class AutoscaleSettingProfileRuleMetricTriggerArgs:
    metric_name: pulumi.Input[str] = pulumi.input_property("metricName")
    """
    The name of the metric that defines what the rule monitors, such as `Percentage CPU` for `Virtual Machine Scale Sets` and `CpuPercentage` for `App Service Plan`.
    """
    metric_resource_id: pulumi.Input[str] = pulumi.input_property("metricResourceId")
    """
    The ID of the Resource which the Rule monitors.
    """
    operator: pulumi.Input[str] = pulumi.input_property("operator")
    """
    Specifies the operator used to compare the metric data and threshold. Possible values are: `Equals`, `NotEquals`, `GreaterThan`, `GreaterThanOrEqual`, `LessThan`, `LessThanOrEqual`.
    """
    statistic: pulumi.Input[str] = pulumi.input_property("statistic")
    """
    Specifies how the metrics from multiple instances are combined. Possible values are `Average`, `Min` and `Max`.
    """
    threshold: pulumi.Input[float] = pulumi.input_property("threshold")
    """
    Specifies the threshold of the metric that triggers the scale action.
    """
    time_aggregation: pulumi.Input[str] = pulumi.input_property("timeAggregation")
    """
    Specifies how the data that's collected should be combined over time. Possible values include `Average`, `Count`, `Maximum`, `Minimum`, `Last` and `Total`. Defaults to `Average`.
    """
    time_grain: pulumi.Input[str] = pulumi.input_property("timeGrain")
    """
    Specifies the granularity of metrics that the rule monitors, which must be one of the pre-defined values returned from the metric definitions for the metric. This value must be between 1 minute and 12 hours an be formatted as an ISO 8601 string.
    """
    time_window: pulumi.Input[str] = pulumi.input_property("timeWindow")
    """
    Specifies the time range for which data is collected, which must be greater than the delay in metric collection (which varies from resource to resource). This value must be between 5 minutes and 12 hours and be formatted as an ISO 8601 string.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, metric_name: pulumi.Input[str], metric_resource_id: pulumi.Input[str], operator: pulumi.Input[str], statistic: pulumi.Input[str], threshold: pulumi.Input[float], time_aggregation: pulumi.Input[str], time_grain: pulumi.Input[str], time_window: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] metric_name: The name of the metric that defines what the rule monitors, such as `Percentage CPU` for `Virtual Machine Scale Sets` and `CpuPercentage` for `App Service Plan`.
        :param pulumi.Input[str] metric_resource_id: The ID of the Resource which the Rule monitors.
        :param pulumi.Input[str] operator: Specifies the operator used to compare the metric data and threshold. Possible values are: `Equals`, `NotEquals`, `GreaterThan`, `GreaterThanOrEqual`, `LessThan`, `LessThanOrEqual`.
        :param pulumi.Input[str] statistic: Specifies how the metrics from multiple instances are combined. Possible values are `Average`, `Min` and `Max`.
        :param pulumi.Input[float] threshold: Specifies the threshold of the metric that triggers the scale action.
        :param pulumi.Input[str] time_aggregation: Specifies how the data that's collected should be combined over time. Possible values include `Average`, `Count`, `Maximum`, `Minimum`, `Last` and `Total`. Defaults to `Average`.
        :param pulumi.Input[str] time_grain: Specifies the granularity of metrics that the rule monitors, which must be one of the pre-defined values returned from the metric definitions for the metric. This value must be between 1 minute and 12 hours an be formatted as an ISO 8601 string.
        :param pulumi.Input[str] time_window: Specifies the time range for which data is collected, which must be greater than the delay in metric collection (which varies from resource to resource). This value must be between 5 minutes and 12 hours and be formatted as an ISO 8601 string.
        """
        __self__.metric_name = metric_name
        __self__.metric_resource_id = metric_resource_id
        __self__.operator = operator
        __self__.statistic = statistic
        __self__.threshold = threshold
        __self__.time_aggregation = time_aggregation
        __self__.time_grain = time_grain
        __self__.time_window = time_window

@pulumi.input_type
class AutoscaleSettingProfileRuleScaleActionArgs:
    cooldown: pulumi.Input[str] = pulumi.input_property("cooldown")
    """
    The amount of time to wait since the last scaling action before this action occurs. Must be between 1 minute and 1 week and formatted as a ISO 8601 string.
    """
    direction: pulumi.Input[str] = pulumi.input_property("direction")
    """
    The scale direction. Possible values are `Increase` and `Decrease`.
    """
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    The type of action that should occur. Possible values are `ChangeCount`, `ExactCount` and `PercentChangeCount`.
    """
    value: pulumi.Input[float] = pulumi.input_property("value")
    """
    The number of instances involved in the scaling action. Defaults to `1`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, cooldown: pulumi.Input[str], direction: pulumi.Input[str], type: pulumi.Input[str], value: pulumi.Input[float]) -> None:
        """
        :param pulumi.Input[str] cooldown: The amount of time to wait since the last scaling action before this action occurs. Must be between 1 minute and 1 week and formatted as a ISO 8601 string.
        :param pulumi.Input[str] direction: The scale direction. Possible values are `Increase` and `Decrease`.
        :param pulumi.Input[str] type: The type of action that should occur. Possible values are `ChangeCount`, `ExactCount` and `PercentChangeCount`.
        :param pulumi.Input[float] value: The number of instances involved in the scaling action. Defaults to `1`.
        """
        __self__.cooldown = cooldown
        __self__.direction = direction
        __self__.type = type
        __self__.value = value

@pulumi.input_type
class DiagnosticSettingLogArgs:
    category: pulumi.Input[str] = pulumi.input_property("category")
    """
    The name of a Diagnostic Log Category for this Resource.
    """
    enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("enabled")
    """
    Is this Diagnostic Log enabled? Defaults to `true`.
    """
    retention_policy: Optional[pulumi.Input['DiagnosticSettingLogRetentionPolicyArgs']] = pulumi.input_property("retentionPolicy")
    """
    A `retention_policy` block as defined below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, category: pulumi.Input[str], enabled: Optional[pulumi.Input[bool]] = None, retention_policy: Optional[pulumi.Input['DiagnosticSettingLogRetentionPolicyArgs']] = None) -> None:
        """
        :param pulumi.Input[str] category: The name of a Diagnostic Log Category for this Resource.
        :param pulumi.Input[bool] enabled: Is this Diagnostic Log enabled? Defaults to `true`.
        :param pulumi.Input['DiagnosticSettingLogRetentionPolicyArgs'] retention_policy: A `retention_policy` block as defined below.
        """
        __self__.category = category
        __self__.enabled = enabled
        __self__.retention_policy = retention_policy

@pulumi.input_type
class DiagnosticSettingLogRetentionPolicyArgs:
    enabled: pulumi.Input[bool] = pulumi.input_property("enabled")
    """
    Is this Retention Policy enabled?
    """
    days: Optional[pulumi.Input[float]] = pulumi.input_property("days")
    """
    The number of days for which this Retention Policy should apply.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, enabled: pulumi.Input[bool], days: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[bool] enabled: Is this Retention Policy enabled?
        :param pulumi.Input[float] days: The number of days for which this Retention Policy should apply.
        """
        __self__.enabled = enabled
        __self__.days = days

@pulumi.input_type
class DiagnosticSettingMetricArgs:
    category: pulumi.Input[str] = pulumi.input_property("category")
    """
    The name of a Diagnostic Metric Category for this Resource.
    """
    enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("enabled")
    """
    Is this Diagnostic Metric enabled? Defaults to `true`.
    """
    retention_policy: Optional[pulumi.Input['DiagnosticSettingMetricRetentionPolicyArgs']] = pulumi.input_property("retentionPolicy")
    """
    A `retention_policy` block as defined below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, category: pulumi.Input[str], enabled: Optional[pulumi.Input[bool]] = None, retention_policy: Optional[pulumi.Input['DiagnosticSettingMetricRetentionPolicyArgs']] = None) -> None:
        """
        :param pulumi.Input[str] category: The name of a Diagnostic Metric Category for this Resource.
        :param pulumi.Input[bool] enabled: Is this Diagnostic Metric enabled? Defaults to `true`.
        :param pulumi.Input['DiagnosticSettingMetricRetentionPolicyArgs'] retention_policy: A `retention_policy` block as defined below.
        """
        __self__.category = category
        __self__.enabled = enabled
        __self__.retention_policy = retention_policy

@pulumi.input_type
class DiagnosticSettingMetricRetentionPolicyArgs:
    enabled: pulumi.Input[bool] = pulumi.input_property("enabled")
    """
    Is this Retention Policy enabled?
    """
    days: Optional[pulumi.Input[float]] = pulumi.input_property("days")
    """
    The number of days for which this Retention Policy should apply.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, enabled: pulumi.Input[bool], days: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[bool] enabled: Is this Retention Policy enabled?
        :param pulumi.Input[float] days: The number of days for which this Retention Policy should apply.
        """
        __self__.enabled = enabled
        __self__.days = days

@pulumi.input_type
class LogProfileRetentionPolicyArgs:
    enabled: pulumi.Input[bool] = pulumi.input_property("enabled")
    """
    A boolean value to indicate whether the retention policy is enabled.
    """
    days: Optional[pulumi.Input[float]] = pulumi.input_property("days")
    """
    The number of days for the retention policy. Defaults to 0.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, enabled: pulumi.Input[bool], days: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[bool] enabled: A boolean value to indicate whether the retention policy is enabled.
        :param pulumi.Input[float] days: The number of days for the retention policy. Defaults to 0.
        """
        __self__.enabled = enabled
        __self__.days = days

@pulumi.input_type
class MetricAlertActionArgs:
    action_group_id: pulumi.Input[str] = pulumi.input_property("actionGroupId")
    """
    The ID of the Action Group can be sourced from the `monitoring.ActionGroup` resource
    """
    webhook_properties: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("webhookProperties")
    """
    The map of custom string properties to include with the post operation. These data are appended to the webhook payload.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, action_group_id: pulumi.Input[str], webhook_properties: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[str] action_group_id: The ID of the Action Group can be sourced from the `monitoring.ActionGroup` resource
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] webhook_properties: The map of custom string properties to include with the post operation. These data are appended to the webhook payload.
        """
        __self__.action_group_id = action_group_id
        __self__.webhook_properties = webhook_properties

@pulumi.input_type
class MetricAlertApplicationInsightsWebTestLocationAvailabilityCriteriaArgs:
    component_id: pulumi.Input[str] = pulumi.input_property("componentId")
    """
    The ID of the Application Insights Resource.
    """
    failed_location_count: pulumi.Input[float] = pulumi.input_property("failedLocationCount")
    """
    The number of failed locations.
    """
    web_test_id: pulumi.Input[str] = pulumi.input_property("webTestId")
    """
    The ID of the Application Insights Web Test.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, component_id: pulumi.Input[str], failed_location_count: pulumi.Input[float], web_test_id: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] component_id: The ID of the Application Insights Resource.
        :param pulumi.Input[float] failed_location_count: The number of failed locations.
        :param pulumi.Input[str] web_test_id: The ID of the Application Insights Web Test.
        """
        __self__.component_id = component_id
        __self__.failed_location_count = failed_location_count
        __self__.web_test_id = web_test_id

@pulumi.input_type
class MetricAlertCriteriaArgs:
    aggregation: pulumi.Input[str] = pulumi.input_property("aggregation")
    """
    The statistic that runs over the metric values. Possible values are `Average`, `Count`, `Minimum`, `Maximum` and `Total`.
    """
    metric_name: pulumi.Input[str] = pulumi.input_property("metricName")
    """
    One of the metric names to be monitored.
    """
    metric_namespace: pulumi.Input[str] = pulumi.input_property("metricNamespace")
    """
    One of the metric namespaces to be monitored.
    """
    operator: pulumi.Input[str] = pulumi.input_property("operator")
    """
    The criteria operator. Possible values are `Equals`, `NotEquals`, `GreaterThan`, `GreaterThanOrEqual`, `LessThan` and `LessThanOrEqual`.
    """
    threshold: pulumi.Input[float] = pulumi.input_property("threshold")
    """
    The criteria threshold value that activates the alert.
    """
    dimensions: Optional[pulumi.Input[List[pulumi.Input['MetricAlertCriteriaDimensionArgs']]]] = pulumi.input_property("dimensions")
    """
    One or more `dimension` blocks as defined below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, aggregation: pulumi.Input[str], metric_name: pulumi.Input[str], metric_namespace: pulumi.Input[str], operator: pulumi.Input[str], threshold: pulumi.Input[float], dimensions: Optional[pulumi.Input[List[pulumi.Input['MetricAlertCriteriaDimensionArgs']]]] = None) -> None:
        """
        :param pulumi.Input[str] aggregation: The statistic that runs over the metric values. Possible values are `Average`, `Count`, `Minimum`, `Maximum` and `Total`.
        :param pulumi.Input[str] metric_name: One of the metric names to be monitored.
        :param pulumi.Input[str] metric_namespace: One of the metric namespaces to be monitored.
        :param pulumi.Input[str] operator: The criteria operator. Possible values are `Equals`, `NotEquals`, `GreaterThan`, `GreaterThanOrEqual`, `LessThan` and `LessThanOrEqual`.
        :param pulumi.Input[float] threshold: The criteria threshold value that activates the alert.
        :param pulumi.Input[List[pulumi.Input['MetricAlertCriteriaDimensionArgs']]] dimensions: One or more `dimension` blocks as defined below.
        """
        __self__.aggregation = aggregation
        __self__.metric_name = metric_name
        __self__.metric_namespace = metric_namespace
        __self__.operator = operator
        __self__.threshold = threshold
        __self__.dimensions = dimensions

@pulumi.input_type
class MetricAlertCriteriaDimensionArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    One of the dimension names.
    """
    operator: pulumi.Input[str] = pulumi.input_property("operator")
    """
    The dimension operator. Possible values are `Include` and `Exclude`.
    """
    values: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("values")
    """
    The list of dimension values.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], operator: pulumi.Input[str], values: pulumi.Input[List[pulumi.Input[str]]]) -> None:
        """
        :param pulumi.Input[str] name: One of the dimension names.
        :param pulumi.Input[str] operator: The dimension operator. Possible values are `Include` and `Exclude`.
        :param pulumi.Input[List[pulumi.Input[str]]] values: The list of dimension values.
        """
        __self__.name = name
        __self__.operator = operator
        __self__.values = values

@pulumi.input_type
class MetricAlertDynamicCriteriaArgs:
    aggregation: pulumi.Input[str] = pulumi.input_property("aggregation")
    """
    The statistic that runs over the metric values. Possible values are `Average`, `Count`, `Minimum`, `Maximum` and `Total`.
    """
    alert_sensitivity: pulumi.Input[str] = pulumi.input_property("alertSensitivity")
    """
    The extent of deviation required to trigger an alert. Possible values are `Low`, `Medium` and `High`.
    """
    metric_name: pulumi.Input[str] = pulumi.input_property("metricName")
    """
    One of the metric names to be monitored.
    """
    metric_namespace: pulumi.Input[str] = pulumi.input_property("metricNamespace")
    """
    One of the metric namespaces to be monitored.
    """
    operator: pulumi.Input[str] = pulumi.input_property("operator")
    """
    The criteria operator. Possible values are `LessThan`, `GreaterThan` and `GreaterOrLessThan`.
    """
    dimensions: Optional[pulumi.Input[List[pulumi.Input['MetricAlertDynamicCriteriaDimensionArgs']]]] = pulumi.input_property("dimensions")
    """
    One or more `dimension` blocks as defined below.
    """
    evaluation_failure_count: Optional[pulumi.Input[float]] = pulumi.input_property("evaluationFailureCount")
    """
    The number of violations to trigger an alert. Should be smaller or equal to `evaluation_total_count`.
    """
    evaluation_total_count: Optional[pulumi.Input[float]] = pulumi.input_property("evaluationTotalCount")
    """
    The number of aggregated lookback points. The lookback time window is calculated based on the aggregation granularity (`window_size`) and the selected number of aggregated points.
    """
    ignore_data_before: Optional[pulumi.Input[str]] = pulumi.input_property("ignoreDataBefore")
    """
    The [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) date from which to start learning the metric historical data and calculate the dynamic thresholds.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, aggregation: pulumi.Input[str], alert_sensitivity: pulumi.Input[str], metric_name: pulumi.Input[str], metric_namespace: pulumi.Input[str], operator: pulumi.Input[str], dimensions: Optional[pulumi.Input[List[pulumi.Input['MetricAlertDynamicCriteriaDimensionArgs']]]] = None, evaluation_failure_count: Optional[pulumi.Input[float]] = None, evaluation_total_count: Optional[pulumi.Input[float]] = None, ignore_data_before: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] aggregation: The statistic that runs over the metric values. Possible values are `Average`, `Count`, `Minimum`, `Maximum` and `Total`.
        :param pulumi.Input[str] alert_sensitivity: The extent of deviation required to trigger an alert. Possible values are `Low`, `Medium` and `High`.
        :param pulumi.Input[str] metric_name: One of the metric names to be monitored.
        :param pulumi.Input[str] metric_namespace: One of the metric namespaces to be monitored.
        :param pulumi.Input[str] operator: The criteria operator. Possible values are `LessThan`, `GreaterThan` and `GreaterOrLessThan`.
        :param pulumi.Input[List[pulumi.Input['MetricAlertDynamicCriteriaDimensionArgs']]] dimensions: One or more `dimension` blocks as defined below.
        :param pulumi.Input[float] evaluation_failure_count: The number of violations to trigger an alert. Should be smaller or equal to `evaluation_total_count`.
        :param pulumi.Input[float] evaluation_total_count: The number of aggregated lookback points. The lookback time window is calculated based on the aggregation granularity (`window_size`) and the selected number of aggregated points.
        :param pulumi.Input[str] ignore_data_before: The [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) date from which to start learning the metric historical data and calculate the dynamic thresholds.
        """
        __self__.aggregation = aggregation
        __self__.alert_sensitivity = alert_sensitivity
        __self__.metric_name = metric_name
        __self__.metric_namespace = metric_namespace
        __self__.operator = operator
        __self__.dimensions = dimensions
        __self__.evaluation_failure_count = evaluation_failure_count
        __self__.evaluation_total_count = evaluation_total_count
        __self__.ignore_data_before = ignore_data_before

@pulumi.input_type
class MetricAlertDynamicCriteriaDimensionArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    One of the dimension names.
    """
    operator: pulumi.Input[str] = pulumi.input_property("operator")
    """
    The dimension operator. Possible values are `Include` and `Exclude`.
    """
    values: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("values")
    """
    The list of dimension values.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], operator: pulumi.Input[str], values: pulumi.Input[List[pulumi.Input[str]]]) -> None:
        """
        :param pulumi.Input[str] name: One of the dimension names.
        :param pulumi.Input[str] operator: The dimension operator. Possible values are `Include` and `Exclude`.
        :param pulumi.Input[List[pulumi.Input[str]]] values: The list of dimension values.
        """
        __self__.name = name
        __self__.operator = operator
        __self__.values = values

@pulumi.input_type
class ScheduledQueryRulesAlertActionArgs:
    action_groups: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("actionGroups")
    """
    List of action group reference resource IDs.
    """
    custom_webhook_payload: Optional[pulumi.Input[str]] = pulumi.input_property("customWebhookPayload")
    """
    Custom payload to be sent for all webhook payloads in alerting action.
    """
    email_subject: Optional[pulumi.Input[str]] = pulumi.input_property("emailSubject")
    """
    Custom subject override for all email ids in Azure action group.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, action_groups: pulumi.Input[List[pulumi.Input[str]]], custom_webhook_payload: Optional[pulumi.Input[str]] = None, email_subject: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[str]]] action_groups: List of action group reference resource IDs.
        :param pulumi.Input[str] custom_webhook_payload: Custom payload to be sent for all webhook payloads in alerting action.
        :param pulumi.Input[str] email_subject: Custom subject override for all email ids in Azure action group.
        """
        __self__.action_groups = action_groups
        __self__.custom_webhook_payload = custom_webhook_payload
        __self__.email_subject = email_subject

@pulumi.input_type
class ScheduledQueryRulesAlertTriggerArgs:
    operator: pulumi.Input[str] = pulumi.input_property("operator")
    """
    Evaluation operation for rule - 'Equal', 'GreaterThan' or 'LessThan'.
    """
    threshold: pulumi.Input[float] = pulumi.input_property("threshold")
    """
    Result or count threshold based on which rule should be triggered.  Values must be between 0 and 10000 inclusive.
    """
    metric_trigger: Optional[pulumi.Input['ScheduledQueryRulesAlertTriggerMetricTriggerArgs']] = pulumi.input_property("metricTrigger")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, operator: pulumi.Input[str], threshold: pulumi.Input[float], metric_trigger: Optional[pulumi.Input['ScheduledQueryRulesAlertTriggerMetricTriggerArgs']] = None) -> None:
        """
        :param pulumi.Input[str] operator: Evaluation operation for rule - 'Equal', 'GreaterThan' or 'LessThan'.
        :param pulumi.Input[float] threshold: Result or count threshold based on which rule should be triggered.  Values must be between 0 and 10000 inclusive.
        """
        __self__.operator = operator
        __self__.threshold = threshold
        __self__.metric_trigger = metric_trigger

@pulumi.input_type
class ScheduledQueryRulesAlertTriggerMetricTriggerArgs:
    metric_column: pulumi.Input[str] = pulumi.input_property("metricColumn")
    metric_trigger_type: pulumi.Input[str] = pulumi.input_property("metricTriggerType")
    operator: pulumi.Input[str] = pulumi.input_property("operator")
    """
    Evaluation operation for rule - 'Equal', 'GreaterThan' or 'LessThan'.
    """
    threshold: pulumi.Input[float] = pulumi.input_property("threshold")
    """
    The threshold of the metric trigger.    Values must be between 0 and 10000 inclusive.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, metric_column: pulumi.Input[str], metric_trigger_type: pulumi.Input[str], operator: pulumi.Input[str], threshold: pulumi.Input[float]) -> None:
        """
        :param pulumi.Input[str] operator: Evaluation operation for rule - 'Equal', 'GreaterThan' or 'LessThan'.
        :param pulumi.Input[float] threshold: The threshold of the metric trigger.    Values must be between 0 and 10000 inclusive.
        """
        __self__.metric_column = metric_column
        __self__.metric_trigger_type = metric_trigger_type
        __self__.operator = operator
        __self__.threshold = threshold

@pulumi.input_type
class ScheduledQueryRulesLogCriteriaArgs:
    dimensions: pulumi.Input[List[pulumi.Input['ScheduledQueryRulesLogCriteriaDimensionArgs']]] = pulumi.input_property("dimensions")
    """
    A `dimension` block as defined below.
    """
    metric_name: pulumi.Input[str] = pulumi.input_property("metricName")
    """
    Name of the metric.  Supported metrics are listed in the Azure Monitor [Microsoft.OperationalInsights/workspaces](https://docs.microsoft.com/en-us/azure/azure-monitor/platform/metrics-supported#microsoftoperationalinsightsworkspaces) metrics namespace.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, dimensions: pulumi.Input[List[pulumi.Input['ScheduledQueryRulesLogCriteriaDimensionArgs']]], metric_name: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[List[pulumi.Input['ScheduledQueryRulesLogCriteriaDimensionArgs']]] dimensions: A `dimension` block as defined below.
        :param pulumi.Input[str] metric_name: Name of the metric.  Supported metrics are listed in the Azure Monitor [Microsoft.OperationalInsights/workspaces](https://docs.microsoft.com/en-us/azure/azure-monitor/platform/metrics-supported#microsoftoperationalinsightsworkspaces) metrics namespace.
        """
        __self__.dimensions = dimensions
        __self__.metric_name = metric_name

@pulumi.input_type
class ScheduledQueryRulesLogCriteriaDimensionArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    Name of the dimension.
    """
    values: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("values")
    """
    List of dimension values.
    """
    operator: Optional[pulumi.Input[str]] = pulumi.input_property("operator")
    """
    Operator for dimension values, - 'Include'.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], values: pulumi.Input[List[pulumi.Input[str]]], operator: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] name: Name of the dimension.
        :param pulumi.Input[List[pulumi.Input[str]]] values: List of dimension values.
        :param pulumi.Input[str] operator: Operator for dimension values, - 'Include'.
        """
        __self__.name = name
        __self__.values = values
        __self__.operator = operator

