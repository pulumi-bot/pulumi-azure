# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

@pulumi.output_type
class ClusterIdentity(dict):
    identity_ids: Optional[List[str]] = pulumi.output_property("identityIds")
    """
    The list of user identities associated with the Kusto cluster.
    """
    principal_id: Optional[str] = pulumi.output_property("principalId")
    """
    Specifies the Principal ID of the System Assigned Managed Service Identity that is configured on this Kusto Cluster.
    """
    tenant_id: Optional[str] = pulumi.output_property("tenantId")
    """
    Specifies the Tenant ID of the System Assigned Managed Service Identity that is configured on this Kusto Cluster.
    """
    type: str = pulumi.output_property("type")
    """
    Specifies the type of Managed Service Identity that is configured on this Kusto Cluster. Possible values are: `SystemAssigned` (where Azure will generate a Service Principal for you).
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ClusterOptimizedAutoScale(dict):
    maximum_instances: float = pulumi.output_property("maximumInstances")
    """
    The maximum number of allowed instances. Must between `0` and `1000`.
    """
    minimum_instances: float = pulumi.output_property("minimumInstances")
    """
    The minimum number of allowed instances. Must between `0` and `1000`.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ClusterSku(dict):
    capacity: Optional[float] = pulumi.output_property("capacity")
    """
    Specifies the node count for the cluster. Boundaries depend on the sku name.
    """
    name: str = pulumi.output_property("name")
    """
    The name of the SKU. Valid values are: `Dev(No SLA)_Standard_D11_v2`, `Dev(No SLA)_Standard_E2a_v4`, `Standard_D11_v2`, `Standard_D12_v2`, `Standard_D13_v2`, `Standard_D14_v2`, `Standard_DS13_v2+1TB_PS`, `Standard_DS13_v2+2TB_PS`, `Standard_DS14_v2+3TB_PS`, `Standard_DS14_v2+4TB_PS`, `Standard_E16as_v4+3TB_PS`, `Standard_E16as_v4+4TB_PS`, `Standard_E16a_v4`, `Standard_E2a_v4`, `Standard_E4a_v4`, `Standard_E8as_v4+1TB_PS`, `Standard_E8as_v4+2TB_PS`, `Standard_E8a_v4`, `Standard_L16s`, `Standard_L4s` and `Standard_L8s`
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ClusterVirtualNetworkConfiguration(dict):
    data_management_public_ip_id: str = pulumi.output_property("dataManagementPublicIpId")
    """
    Data management's service public IP address resource id.
    """
    engine_public_ip_id: str = pulumi.output_property("enginePublicIpId")
    """
    Engine service's public IP address resource id.
    """
    subnet_id: str = pulumi.output_property("subnetId")
    """
    The subnet resource id.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


