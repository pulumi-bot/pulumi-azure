# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Mapping, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'ClusterIdentity',
    'ClusterOptimizedAutoScale',
    'ClusterSku',
    'ClusterVirtualNetworkConfiguration',
]

@pulumi.output_type
class ClusterIdentity(dict):
    @property
    @pulumi.getter(name="identityIds")
    def identity_ids(self) -> Optional[List[str]]:
        """
        The list of user identities associated with the Kusto cluster.
        """
        ...

    @property
    @pulumi.getter(name="principalId")
    def principal_id(self) -> Optional[str]:
        """
        Specifies the Principal ID of the System Assigned Managed Service Identity that is configured on this Kusto Cluster.
        """
        ...

    @property
    @pulumi.getter(name="tenantId")
    def tenant_id(self) -> Optional[str]:
        """
        Specifies the Tenant ID of the System Assigned Managed Service Identity that is configured on this Kusto Cluster.
        """
        ...

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        Specifies the type of Managed Service Identity that is configured on this Kusto Cluster. Possible values are: `SystemAssigned` (where Azure will generate a Service Principal for you).
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ClusterOptimizedAutoScale(dict):
    @property
    @pulumi.getter(name="maximumInstances")
    def maximum_instances(self) -> float:
        """
        The maximum number of allowed instances. Must between `0` and `1000`.
        """
        ...

    @property
    @pulumi.getter(name="minimumInstances")
    def minimum_instances(self) -> float:
        """
        The minimum number of allowed instances. Must between `0` and `1000`.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ClusterSku(dict):
    @property
    @pulumi.getter
    def capacity(self) -> Optional[float]:
        """
        Specifies the node count for the cluster. Boundaries depend on the sku name.
        """
        ...

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the SKU. Valid values are: `Dev(No SLA)_Standard_D11_v2`, `Dev(No SLA)_Standard_E2a_v4`, `Standard_D11_v2`, `Standard_D12_v2`, `Standard_D13_v2`, `Standard_D14_v2`, `Standard_DS13_v2+1TB_PS`, `Standard_DS13_v2+2TB_PS`, `Standard_DS14_v2+3TB_PS`, `Standard_DS14_v2+4TB_PS`, `Standard_E16as_v4+3TB_PS`, `Standard_E16as_v4+4TB_PS`, `Standard_E16a_v4`, `Standard_E2a_v4`, `Standard_E4a_v4`, `Standard_E8as_v4+1TB_PS`, `Standard_E8as_v4+2TB_PS`, `Standard_E8a_v4`, `Standard_L16s`, `Standard_L4s` and `Standard_L8s`
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ClusterVirtualNetworkConfiguration(dict):
    @property
    @pulumi.getter(name="dataManagementPublicIpId")
    def data_management_public_ip_id(self) -> str:
        """
        Data management's service public IP address resource id.
        """
        ...

    @property
    @pulumi.getter(name="enginePublicIpId")
    def engine_public_ip_id(self) -> str:
        """
        Engine service's public IP address resource id.
        """
        ...

    @property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> str:
        """
        The subnet resource id.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


