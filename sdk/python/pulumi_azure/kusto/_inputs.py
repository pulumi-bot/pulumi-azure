# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

@pulumi.input_type
class ClusterIdentityArgs:
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    Specifies the type of Managed Service Identity that is configured on this Kusto Cluster. Possible values are: `SystemAssigned` (where Azure will generate a Service Principal for you).
    """
    identity_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("identityIds")
    """
    The list of user identities associated with the Kusto cluster.
    """
    principal_id: Optional[pulumi.Input[str]] = pulumi.input_property("principalId")
    """
    Specifies the Principal ID of the System Assigned Managed Service Identity that is configured on this Kusto Cluster.
    """
    tenant_id: Optional[pulumi.Input[str]] = pulumi.input_property("tenantId")
    """
    Specifies the Tenant ID of the System Assigned Managed Service Identity that is configured on this Kusto Cluster.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, type: pulumi.Input[str], identity_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, principal_id: Optional[pulumi.Input[str]] = None, tenant_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] type: Specifies the type of Managed Service Identity that is configured on this Kusto Cluster. Possible values are: `SystemAssigned` (where Azure will generate a Service Principal for you).
        :param pulumi.Input[List[pulumi.Input[str]]] identity_ids: The list of user identities associated with the Kusto cluster.
        :param pulumi.Input[str] principal_id: Specifies the Principal ID of the System Assigned Managed Service Identity that is configured on this Kusto Cluster.
        :param pulumi.Input[str] tenant_id: Specifies the Tenant ID of the System Assigned Managed Service Identity that is configured on this Kusto Cluster.
        """
        __self__.type = type
        __self__.identity_ids = identity_ids
        __self__.principal_id = principal_id
        __self__.tenant_id = tenant_id

@pulumi.input_type
class ClusterOptimizedAutoScaleArgs:
    maximum_instances: pulumi.Input[float] = pulumi.input_property("maximumInstances")
    """
    The maximum number of allowed instances. Must between `0` and `1000`.
    """
    minimum_instances: pulumi.Input[float] = pulumi.input_property("minimumInstances")
    """
    The minimum number of allowed instances. Must between `0` and `1000`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, maximum_instances: pulumi.Input[float], minimum_instances: pulumi.Input[float]) -> None:
        """
        :param pulumi.Input[float] maximum_instances: The maximum number of allowed instances. Must between `0` and `1000`.
        :param pulumi.Input[float] minimum_instances: The minimum number of allowed instances. Must between `0` and `1000`.
        """
        __self__.maximum_instances = maximum_instances
        __self__.minimum_instances = minimum_instances

@pulumi.input_type
class ClusterSkuArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The name of the SKU. Valid values are: `Dev(No SLA)_Standard_D11_v2`, `Dev(No SLA)_Standard_E2a_v4`, `Standard_D11_v2`, `Standard_D12_v2`, `Standard_D13_v2`, `Standard_D14_v2`, `Standard_DS13_v2+1TB_PS`, `Standard_DS13_v2+2TB_PS`, `Standard_DS14_v2+3TB_PS`, `Standard_DS14_v2+4TB_PS`, `Standard_E16as_v4+3TB_PS`, `Standard_E16as_v4+4TB_PS`, `Standard_E16a_v4`, `Standard_E2a_v4`, `Standard_E4a_v4`, `Standard_E8as_v4+1TB_PS`, `Standard_E8as_v4+2TB_PS`, `Standard_E8a_v4`, `Standard_L16s`, `Standard_L4s` and `Standard_L8s`
    """
    capacity: Optional[pulumi.Input[float]] = pulumi.input_property("capacity")
    """
    Specifies the node count for the cluster. Boundaries depend on the sku name.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], capacity: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[str] name: The name of the SKU. Valid values are: `Dev(No SLA)_Standard_D11_v2`, `Dev(No SLA)_Standard_E2a_v4`, `Standard_D11_v2`, `Standard_D12_v2`, `Standard_D13_v2`, `Standard_D14_v2`, `Standard_DS13_v2+1TB_PS`, `Standard_DS13_v2+2TB_PS`, `Standard_DS14_v2+3TB_PS`, `Standard_DS14_v2+4TB_PS`, `Standard_E16as_v4+3TB_PS`, `Standard_E16as_v4+4TB_PS`, `Standard_E16a_v4`, `Standard_E2a_v4`, `Standard_E4a_v4`, `Standard_E8as_v4+1TB_PS`, `Standard_E8as_v4+2TB_PS`, `Standard_E8a_v4`, `Standard_L16s`, `Standard_L4s` and `Standard_L8s`
        :param pulumi.Input[float] capacity: Specifies the node count for the cluster. Boundaries depend on the sku name.
        """
        __self__.name = name
        __self__.capacity = capacity

@pulumi.input_type
class ClusterVirtualNetworkConfigurationArgs:
    data_management_public_ip_id: pulumi.Input[str] = pulumi.input_property("dataManagementPublicIpId")
    """
    Data management's service public IP address resource id.
    """
    engine_public_ip_id: pulumi.Input[str] = pulumi.input_property("enginePublicIpId")
    """
    Engine service's public IP address resource id.
    """
    subnet_id: pulumi.Input[str] = pulumi.input_property("subnetId")
    """
    The subnet resource id.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, data_management_public_ip_id: pulumi.Input[str], engine_public_ip_id: pulumi.Input[str], subnet_id: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] data_management_public_ip_id: Data management's service public IP address resource id.
        :param pulumi.Input[str] engine_public_ip_id: Engine service's public IP address resource id.
        :param pulumi.Input[str] subnet_id: The subnet resource id.
        """
        __self__.data_management_public_ip_id = data_management_public_ip_id
        __self__.engine_public_ip_id = engine_public_ip_id
        __self__.subnet_id = subnet_id

