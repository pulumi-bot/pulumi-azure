# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

@pulumi.input_type
class EndpointCustomDnsConfigArgs:
    fqdn: Optional[pulumi.Input[str]] = pulumi.input_property("fqdn")
    """
    The fully qualified domain name to the `private_dns_zone`.
    """
    ip_addresses: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("ipAddresses")
    """
    A list of all IP Addresses that map to the `private_dns_zone` fqdn.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, fqdn: Optional[pulumi.Input[str]] = None, ip_addresses: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[str] fqdn: The fully qualified domain name to the `private_dns_zone`.
        :param pulumi.Input[List[pulumi.Input[str]]] ip_addresses: A list of all IP Addresses that map to the `private_dns_zone` fqdn.
        """
        __self__.fqdn = fqdn
        __self__.ip_addresses = ip_addresses

@pulumi.input_type
class EndpointPrivateDnsZoneConfigArgs:
    id: Optional[pulumi.Input[str]] = pulumi.input_property("id")
    """
    The ID of the Private DNS Zone Config.
    """
    name: Optional[pulumi.Input[str]] = pulumi.input_property("name")
    """
    Specifies the Name of the Private Endpoint. Changing this forces a new resource to be created.
    """
    private_dns_zone_id: Optional[pulumi.Input[str]] = pulumi.input_property("privateDnsZoneId")
    """
    A list of IP Addresses
    """
    record_sets: Optional[pulumi.Input[List[pulumi.Input['EndpointPrivateDnsZoneConfigRecordSetArgs']]]] = pulumi.input_property("recordSets")
    """
    A `record_sets` block as defined below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, id: Optional[pulumi.Input[str]] = None, name: Optional[pulumi.Input[str]] = None, private_dns_zone_id: Optional[pulumi.Input[str]] = None, record_sets: Optional[pulumi.Input[List[pulumi.Input['EndpointPrivateDnsZoneConfigRecordSetArgs']]]] = None) -> None:
        """
        :param pulumi.Input[str] id: The ID of the Private DNS Zone Config.
        :param pulumi.Input[str] name: Specifies the Name of the Private Endpoint. Changing this forces a new resource to be created.
        :param pulumi.Input[str] private_dns_zone_id: A list of IP Addresses
        :param pulumi.Input[List[pulumi.Input['EndpointPrivateDnsZoneConfigRecordSetArgs']]] record_sets: A `record_sets` block as defined below.
        """
        __self__.id = id
        __self__.name = name
        __self__.private_dns_zone_id = private_dns_zone_id
        __self__.record_sets = record_sets

@pulumi.input_type
class EndpointPrivateDnsZoneConfigRecordSetArgs:
    fqdn: Optional[pulumi.Input[str]] = pulumi.input_property("fqdn")
    """
    The fully qualified domain name to the `private_dns_zone`.
    """
    ip_addresses: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("ipAddresses")
    """
    A list of all IP Addresses that map to the `private_dns_zone` fqdn.
    """
    name: Optional[pulumi.Input[str]] = pulumi.input_property("name")
    """
    Specifies the Name of the Private Endpoint. Changing this forces a new resource to be created.
    """
    ttl: Optional[pulumi.Input[float]] = pulumi.input_property("ttl")
    """
    The time to live for each connection to the `private_dns_zone`.
    """
    type: Optional[pulumi.Input[str]] = pulumi.input_property("type")
    """
    The type of DNS record.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, fqdn: Optional[pulumi.Input[str]] = None, ip_addresses: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, name: Optional[pulumi.Input[str]] = None, ttl: Optional[pulumi.Input[float]] = None, type: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] fqdn: The fully qualified domain name to the `private_dns_zone`.
        :param pulumi.Input[List[pulumi.Input[str]]] ip_addresses: A list of all IP Addresses that map to the `private_dns_zone` fqdn.
        :param pulumi.Input[str] name: Specifies the Name of the Private Endpoint. Changing this forces a new resource to be created.
        :param pulumi.Input[float] ttl: The time to live for each connection to the `private_dns_zone`.
        :param pulumi.Input[str] type: The type of DNS record.
        """
        __self__.fqdn = fqdn
        __self__.ip_addresses = ip_addresses
        __self__.name = name
        __self__.ttl = ttl
        __self__.type = type

@pulumi.input_type
class EndpointPrivateDnsZoneGroupArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    Specifies the Name of the Private DNS Zone Group. Changing this forces a new `private_dns_zone_group` resource to be created.
    """
    private_dns_zone_ids: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("privateDnsZoneIds")
    """
    Specifies the list of Private DNS Zones to include within the `private_dns_zone_group`.
    """
    id: Optional[pulumi.Input[str]] = pulumi.input_property("id")
    """
    The ID of the Private DNS Zone Config.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], private_dns_zone_ids: pulumi.Input[List[pulumi.Input[str]]], id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] name: Specifies the Name of the Private DNS Zone Group. Changing this forces a new `private_dns_zone_group` resource to be created.
        :param pulumi.Input[List[pulumi.Input[str]]] private_dns_zone_ids: Specifies the list of Private DNS Zones to include within the `private_dns_zone_group`.
        :param pulumi.Input[str] id: The ID of the Private DNS Zone Config.
        """
        __self__.name = name
        __self__.private_dns_zone_ids = private_dns_zone_ids
        __self__.id = id

@pulumi.input_type
class EndpointPrivateServiceConnectionArgs:
    is_manual_connection: pulumi.Input[bool] = pulumi.input_property("isManualConnection")
    """
    Does the Private Endpoint require Manual Approval from the remote resource owner? Changing this forces a new resource to be created.
    """
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    Specifies the Name of the Private Service Connection. Changing this forces a new resource to be created.
    """
    private_connection_resource_id: pulumi.Input[str] = pulumi.input_property("privateConnectionResourceId")
    """
    The ID of the Private Link Enabled Remote Resource which this Private Endpoint should be connected to. Changing this forces a new resource to be created.
    """
    private_ip_address: Optional[pulumi.Input[str]] = pulumi.input_property("privateIpAddress")
    """
    The private IP address associated with the private endpoint, note that you will have a private IP address assigned to the private endpoint even if the connection request was `Rejected`.
    """
    request_message: Optional[pulumi.Input[str]] = pulumi.input_property("requestMessage")
    """
    A message passed to the owner of the remote resource when the private endpoint attempts to establish the connection to the remote resource. The request message can be a maximum of `140` characters in length. Only valid if `is_manual_connection` is set to `true`.
    """
    subresource_names: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("subresourceNames")
    """
    A list of subresource names which the Private Endpoint is able to connect to. `subresource_names` corresponds to `group_id`. Changing this forces a new resource to be created.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, is_manual_connection: pulumi.Input[bool], name: pulumi.Input[str], private_connection_resource_id: pulumi.Input[str], private_ip_address: Optional[pulumi.Input[str]] = None, request_message: Optional[pulumi.Input[str]] = None, subresource_names: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[bool] is_manual_connection: Does the Private Endpoint require Manual Approval from the remote resource owner? Changing this forces a new resource to be created.
        :param pulumi.Input[str] name: Specifies the Name of the Private Service Connection. Changing this forces a new resource to be created.
        :param pulumi.Input[str] private_connection_resource_id: The ID of the Private Link Enabled Remote Resource which this Private Endpoint should be connected to. Changing this forces a new resource to be created.
        :param pulumi.Input[str] private_ip_address: The private IP address associated with the private endpoint, note that you will have a private IP address assigned to the private endpoint even if the connection request was `Rejected`.
        :param pulumi.Input[str] request_message: A message passed to the owner of the remote resource when the private endpoint attempts to establish the connection to the remote resource. The request message can be a maximum of `140` characters in length. Only valid if `is_manual_connection` is set to `true`.
        :param pulumi.Input[List[pulumi.Input[str]]] subresource_names: A list of subresource names which the Private Endpoint is able to connect to. `subresource_names` corresponds to `group_id`. Changing this forces a new resource to be created.
        """
        __self__.is_manual_connection = is_manual_connection
        __self__.name = name
        __self__.private_connection_resource_id = private_connection_resource_id
        __self__.private_ip_address = private_ip_address
        __self__.request_message = request_message
        __self__.subresource_names = subresource_names

