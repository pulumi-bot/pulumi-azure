# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Mapping, Optional, Tuple, Union
from .. import _utilities, _tables
from . import outputs

__all__ = [
    'EndpointCustomDnsConfig',
    'EndpointPrivateDnsZoneConfig',
    'EndpointPrivateDnsZoneConfigRecordSet',
    'EndpointPrivateDnsZoneGroup',
    'EndpointPrivateServiceConnection',
    'GetEndpointConnectionPrivateServiceConnection',
    'GetServiceEndpointConnectionsPrivateEndpointConnection',
    'GetServiceNatIpConfiguration',
]

@pulumi.output_type
class EndpointCustomDnsConfig(dict):
    @property
    @pulumi.getter
    def fqdn(self) -> Optional[str]:
        """
        The fully qualified domain name to the `private_dns_zone`.
        """
        ...

    @property
    @pulumi.getter(name="ipAddresses")
    def ip_addresses(self) -> Optional[List[str]]:
        """
        A list of all IP Addresses that map to the `private_dns_zone` fqdn.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class EndpointPrivateDnsZoneConfig(dict):
    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        """
        The ID of the Private DNS Zone Config.
        """
        ...

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        """
        Specifies the Name of the Private Endpoint. Changing this forces a new resource to be created.
        """
        ...

    @property
    @pulumi.getter(name="privateDnsZoneId")
    def private_dns_zone_id(self) -> Optional[str]:
        """
        A list of IP Addresses
        """
        ...

    @property
    @pulumi.getter(name="recordSets")
    def record_sets(self) -> Optional[List['outputs.EndpointPrivateDnsZoneConfigRecordSet']]:
        """
        A `record_sets` block as defined below.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class EndpointPrivateDnsZoneConfigRecordSet(dict):
    @property
    @pulumi.getter
    def fqdn(self) -> Optional[str]:
        """
        The fully qualified domain name to the `private_dns_zone`.
        """
        ...

    @property
    @pulumi.getter(name="ipAddresses")
    def ip_addresses(self) -> Optional[List[str]]:
        """
        A list of all IP Addresses that map to the `private_dns_zone` fqdn.
        """
        ...

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        """
        Specifies the Name of the Private Endpoint. Changing this forces a new resource to be created.
        """
        ...

    @property
    @pulumi.getter
    def ttl(self) -> Optional[float]:
        """
        The time to live for each connection to the `private_dns_zone`.
        """
        ...

    @property
    @pulumi.getter
    def type(self) -> Optional[str]:
        """
        The type of DNS record.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class EndpointPrivateDnsZoneGroup(dict):
    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        """
        The ID of the Private DNS Zone Config.
        """
        ...

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Specifies the Name of the Private DNS Zone Group. Changing this forces a new `private_dns_zone_group` resource to be created.
        """
        ...

    @property
    @pulumi.getter(name="privateDnsZoneIds")
    def private_dns_zone_ids(self) -> List[str]:
        """
        Specifies the list of Private DNS Zones to include within the `private_dns_zone_group`.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class EndpointPrivateServiceConnection(dict):
    @property
    @pulumi.getter(name="isManualConnection")
    def is_manual_connection(self) -> bool:
        """
        Does the Private Endpoint require Manual Approval from the remote resource owner? Changing this forces a new resource to be created.
        """
        ...

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Specifies the Name of the Private Service Connection. Changing this forces a new resource to be created.
        """
        ...

    @property
    @pulumi.getter(name="privateConnectionResourceId")
    def private_connection_resource_id(self) -> str:
        """
        The ID of the Private Link Enabled Remote Resource which this Private Endpoint should be connected to. Changing this forces a new resource to be created.
        """
        ...

    @property
    @pulumi.getter(name="privateIpAddress")
    def private_ip_address(self) -> Optional[str]:
        """
        The private IP address associated with the private endpoint, note that you will have a private IP address assigned to the private endpoint even if the connection request was `Rejected`.
        """
        ...

    @property
    @pulumi.getter(name="requestMessage")
    def request_message(self) -> Optional[str]:
        """
        A message passed to the owner of the remote resource when the private endpoint attempts to establish the connection to the remote resource. The request message can be a maximum of `140` characters in length. Only valid if `is_manual_connection` is set to `true`.
        """
        ...

    @property
    @pulumi.getter(name="subresourceNames")
    def subresource_names(self) -> Optional[List[str]]:
        """
        A list of subresource names which the Private Endpoint is able to connect to. `subresource_names` corresponds to `group_id`. Changing this forces a new resource to be created.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetEndpointConnectionPrivateServiceConnection(dict):
    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Specifies the Name of the private endpoint.
        """
        ...

    @property
    @pulumi.getter(name="privateIpAddress")
    def private_ip_address(self) -> str:
        """
        The private IP address associated with the private endpoint, note that you will have a private IP address assigned to the private endpoint even if the connection request was `Rejected`.
        """
        ...

    @property
    @pulumi.getter(name="requestResponse")
    def request_response(self) -> str:
        """
        Possible values are as follows:
        Value | Meaning
        -- | --
        `Auto-Approved` | The remote resource owner has added you to the `Auto-Approved` RBAC permission list for the remote resource, all private endpoint connection requests will be automatically `Approved`.
        `Deleted state` | The resource owner has `Rejected` the private endpoint connection request and has removed your private endpoint request from the remote resource.
        `request/response message` | If you submitted a manual private endpoint connection request, while in the `Pending` status the `request_response` will display the same text from your `request_message` in the `private_service_connection` block above. If the private endpoint connection request was `Rejected` by the owner of the remote resource, the text for the rejection will be displayed as the `request_response` text, if the private endpoint connection request was `Approved` by the owner of the remote resource, the text for the approval will be displayed as the `request_response` text
        """
        ...

    @property
    @pulumi.getter
    def status(self) -> str:
        """
        The current status of the private endpoint request, possible values will be `Pending`, `Approved`, `Rejected`, or `Disconnected`.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetServiceEndpointConnectionsPrivateEndpointConnection(dict):
    @property
    @pulumi.getter(name="actionRequired")
    def action_required(self) -> str:
        """
        A message indicating if changes on the service provider require any updates or not.
        """
        ...

    @property
    @pulumi.getter(name="connectionId")
    def connection_id(self) -> str:
        """
        The resource id of the private link service connection between the private link service and the private link endpoint.
        """
        ...

    @property
    @pulumi.getter(name="connectionName")
    def connection_name(self) -> str:
        """
        The name of the connection between the private link service and the private link endpoint.
        """
        ...

    @property
    @pulumi.getter
    def description(self) -> str:
        """
        The request for approval message or the reason for rejection message.
        """
        ...

    @property
    @pulumi.getter(name="privateEndpointId")
    def private_endpoint_id(self) -> str:
        """
        The resource id of the private link endpoint.
        """
        ...

    @property
    @pulumi.getter(name="privateEndpointName")
    def private_endpoint_name(self) -> str:
        """
        The name of the private link endpoint.
        """
        ...

    @property
    @pulumi.getter
    def status(self) -> str:
        """
        Indicates the state of the connection between the private link service and the private link endpoint, possible values are `Pending`, `Approved` or `Rejected`.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetServiceNatIpConfiguration(dict):
    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the private link service.
        """
        ...

    @property
    @pulumi.getter
    def primary(self) -> bool:
        """
        Value that indicates if the IP configuration is the primary configuration or not.
        """
        ...

    @property
    @pulumi.getter(name="privateIpAddress")
    def private_ip_address(self) -> str:
        """
        The private IP address of the NAT IP configuration.
        """
        ...

    @property
    @pulumi.getter(name="privateIpAddressVersion")
    def private_ip_address_version(self) -> str:
        """
        The version of the IP Protocol.
        """
        ...

    @property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> str:
        """
        The ID of the subnet to be used by the service.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


