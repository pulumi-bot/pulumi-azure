// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package mariadb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing MariaDB Server.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/mariadb"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := mariadb.GetMariaDbServer(ctx, &mariadb.GetMariaDbServerArgs{
// 			Name:              "mariadb-server",
// 			ResourceGroupName: azurerm_mariadb_server.Example.Resource_group_name,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("mariadbServerId", data.Azurerm_mariadb_server.Example.Id)
// 		return nil
// 	})
// }
// ```
func GetMariaDbServer(ctx *pulumi.Context, args *GetMariaDbServerArgs, opts ...pulumi.InvokeOption) (*GetMariaDbServerResult, error) {
	var rv GetMariaDbServerResult
	err := ctx.Invoke("azure:mariadb/getMariaDbServer:getMariaDbServer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMariaDbServer.
type GetMariaDbServerArgs struct {
	// The name of the MariaDB Server to retrieve information about.
	Name string `pulumi:"name"`
	// The name of the resource group where the MariaDB Server exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getMariaDbServer.
type GetMariaDbServerResult struct {
	// The Administrator Login for the MariaDB Server.
	AdministratorLogin string `pulumi:"administratorLogin"`
	// The FQDN of the MariaDB Server.
	Fqdn string `pulumi:"fqdn"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The Azure location where the resource exists.
	Location          string `pulumi:"location"`
	Name              string `pulumi:"name"`
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The SKU Name for this MariaDB Server.
	SkuName string `pulumi:"skuName"`
	// The SSL being enforced on connections.
	SslEnforcement string `pulumi:"sslEnforcement"`
	// A `storageProfile` block as defined below.
	StorageProfiles []GetMariaDbServerStorageProfile `pulumi:"storageProfiles"`
	// A mapping of tags assigned to the resource.
	// ---
	Tags map[string]string `pulumi:"tags"`
	// The version of MariaDB being used.
	Version string `pulumi:"version"`
}

func GetMariaDbServerApply(ctx *pulumi.Context, args GetMariaDbServerApplyInput, opts ...pulumi.InvokeOption) GetMariaDbServerResultOutput {
	return args.ToGetMariaDbServerApplyOutput().ApplyT(func(v GetMariaDbServerArgs) (GetMariaDbServerResult, error) {
		r, err := GetMariaDbServer(ctx, &v, opts...)
		return *r, err

	}).(GetMariaDbServerResultOutput)
}

// GetMariaDbServerApplyInput is an input type that accepts GetMariaDbServerApplyArgs and GetMariaDbServerApplyOutput values.
// You can construct a concrete instance of `GetMariaDbServerApplyInput` via:
//
//          GetMariaDbServerApplyArgs{...}
type GetMariaDbServerApplyInput interface {
	pulumi.Input

	ToGetMariaDbServerApplyOutput() GetMariaDbServerApplyOutput
	ToGetMariaDbServerApplyOutputWithContext(context.Context) GetMariaDbServerApplyOutput
}

// A collection of arguments for invoking getMariaDbServer.
type GetMariaDbServerApplyArgs struct {
	// The name of the MariaDB Server to retrieve information about.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the resource group where the MariaDB Server exists.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (GetMariaDbServerApplyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMariaDbServerArgs)(nil)).Elem()
}

func (i GetMariaDbServerApplyArgs) ToGetMariaDbServerApplyOutput() GetMariaDbServerApplyOutput {
	return i.ToGetMariaDbServerApplyOutputWithContext(context.Background())
}

func (i GetMariaDbServerApplyArgs) ToGetMariaDbServerApplyOutputWithContext(ctx context.Context) GetMariaDbServerApplyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMariaDbServerApplyOutput)
}

// A collection of arguments for invoking getMariaDbServer.
type GetMariaDbServerApplyOutput struct{ *pulumi.OutputState }

func (GetMariaDbServerApplyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMariaDbServerArgs)(nil)).Elem()
}

func (o GetMariaDbServerApplyOutput) ToGetMariaDbServerApplyOutput() GetMariaDbServerApplyOutput {
	return o
}

func (o GetMariaDbServerApplyOutput) ToGetMariaDbServerApplyOutputWithContext(ctx context.Context) GetMariaDbServerApplyOutput {
	return o
}

// The name of the MariaDB Server to retrieve information about.
func (o GetMariaDbServerApplyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMariaDbServerArgs) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the resource group where the MariaDB Server exists.
func (o GetMariaDbServerApplyOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMariaDbServerArgs) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A collection of values returned by getMariaDbServer.
type GetMariaDbServerResultOutput struct{ *pulumi.OutputState }

func (GetMariaDbServerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMariaDbServerResult)(nil)).Elem()
}

func (o GetMariaDbServerResultOutput) ToGetMariaDbServerResultOutput() GetMariaDbServerResultOutput {
	return o
}

func (o GetMariaDbServerResultOutput) ToGetMariaDbServerResultOutputWithContext(ctx context.Context) GetMariaDbServerResultOutput {
	return o
}

// The Administrator Login for the MariaDB Server.
func (o GetMariaDbServerResultOutput) AdministratorLogin() pulumi.StringOutput {
	return o.ApplyT(func(v GetMariaDbServerResult) string { return v.AdministratorLogin }).(pulumi.StringOutput)
}

// The FQDN of the MariaDB Server.
func (o GetMariaDbServerResultOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v GetMariaDbServerResult) string { return v.Fqdn }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetMariaDbServerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMariaDbServerResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Azure location where the resource exists.
func (o GetMariaDbServerResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetMariaDbServerResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o GetMariaDbServerResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMariaDbServerResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetMariaDbServerResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMariaDbServerResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The SKU Name for this MariaDB Server.
func (o GetMariaDbServerResultOutput) SkuName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMariaDbServerResult) string { return v.SkuName }).(pulumi.StringOutput)
}

// The SSL being enforced on connections.
func (o GetMariaDbServerResultOutput) SslEnforcement() pulumi.StringOutput {
	return o.ApplyT(func(v GetMariaDbServerResult) string { return v.SslEnforcement }).(pulumi.StringOutput)
}

// A `storageProfile` block as defined below.
func (o GetMariaDbServerResultOutput) StorageProfiles() GetMariaDbServerStorageProfileArrayOutput {
	return o.ApplyT(func(v GetMariaDbServerResult) []GetMariaDbServerStorageProfile { return v.StorageProfiles }).(GetMariaDbServerStorageProfileArrayOutput)
}

// A mapping of tags assigned to the resource.
// ---
func (o GetMariaDbServerResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMariaDbServerResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The version of MariaDB being used.
func (o GetMariaDbServerResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetMariaDbServerResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMariaDbServerApplyOutput{})
	pulumi.RegisterOutputType(GetMariaDbServerResultOutput{})
}
