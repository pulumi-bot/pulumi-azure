// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package managedapplication

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Uses this data source to access information about an existing Managed Application Definition.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/managedapplication"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		example, err := managedapplication.LookupDefinition(ctx, &managedapplication.LookupDefinitionArgs{
// 			Name:              "example-managedappdef",
// 			ResourceGroupName: "example-resources",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("id", example.Id)
// 		return nil
// 	})
// }
// ```
func LookupDefinition(ctx *pulumi.Context, args *LookupDefinitionArgs, opts ...pulumi.InvokeOption) (*LookupDefinitionResult, error) {
	var rv LookupDefinitionResult
	err := ctx.Invoke("azure:managedapplication/getDefinition:getDefinition", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDefinition.
type LookupDefinitionArgs struct {
	// Specifies the name of the Managed Application Definition.
	Name string `pulumi:"name"`
	// Specifies the name of the Resource Group where this Managed Application Definition exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getDefinition.
type LookupDefinitionResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id                string `pulumi:"id"`
	Location          string `pulumi:"location"`
	Name              string `pulumi:"name"`
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

func LookupDefinitionApply(ctx *pulumi.Context, args LookupDefinitionApplyInput, opts ...pulumi.InvokeOption) LookupDefinitionResultOutput {
	return args.ToLookupDefinitionApplyOutput().ApplyT(func(v LookupDefinitionArgs) (LookupDefinitionResult, error) {
		r, err := LookupDefinition(ctx, &v, opts...)
		return *r, err

	}).(LookupDefinitionResultOutput)
}

// LookupDefinitionApplyInput is an input type that accepts LookupDefinitionApplyArgs and LookupDefinitionApplyOutput values.
// You can construct a concrete instance of `LookupDefinitionApplyInput` via:
//
//          LookupDefinitionApplyArgs{...}
type LookupDefinitionApplyInput interface {
	pulumi.Input

	ToLookupDefinitionApplyOutput() LookupDefinitionApplyOutput
	ToLookupDefinitionApplyOutputWithContext(context.Context) LookupDefinitionApplyOutput
}

// A collection of arguments for invoking getDefinition.
type LookupDefinitionApplyArgs struct {
	// Specifies the name of the Managed Application Definition.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the name of the Resource Group where this Managed Application Definition exists.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupDefinitionApplyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDefinitionArgs)(nil)).Elem()
}

func (i LookupDefinitionApplyArgs) ToLookupDefinitionApplyOutput() LookupDefinitionApplyOutput {
	return i.ToLookupDefinitionApplyOutputWithContext(context.Background())
}

func (i LookupDefinitionApplyArgs) ToLookupDefinitionApplyOutputWithContext(ctx context.Context) LookupDefinitionApplyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupDefinitionApplyOutput)
}

// A collection of arguments for invoking getDefinition.
type LookupDefinitionApplyOutput struct{ *pulumi.OutputState }

func (LookupDefinitionApplyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDefinitionArgs)(nil)).Elem()
}

func (o LookupDefinitionApplyOutput) ToLookupDefinitionApplyOutput() LookupDefinitionApplyOutput {
	return o
}

func (o LookupDefinitionApplyOutput) ToLookupDefinitionApplyOutputWithContext(ctx context.Context) LookupDefinitionApplyOutput {
	return o
}

// Specifies the name of the Managed Application Definition.
func (o LookupDefinitionApplyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDefinitionArgs) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the name of the Resource Group where this Managed Application Definition exists.
func (o LookupDefinitionApplyOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDefinitionArgs) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A collection of values returned by getDefinition.
type LookupDefinitionResultOutput struct{ *pulumi.OutputState }

func (LookupDefinitionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDefinitionResult)(nil)).Elem()
}

func (o LookupDefinitionResultOutput) ToLookupDefinitionResultOutput() LookupDefinitionResultOutput {
	return o
}

func (o LookupDefinitionResultOutput) ToLookupDefinitionResultOutputWithContext(ctx context.Context) LookupDefinitionResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDefinitionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDefinitionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupDefinitionResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDefinitionResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupDefinitionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDefinitionResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupDefinitionResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDefinitionResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDefinitionApplyOutput{})
	pulumi.RegisterOutputType(LookupDefinitionResultOutput{})
}
