// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing IoTHub.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/iot"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		example, err := iot.GetIotHub(ctx, &iot.GetIotHubArgs{
// 			Name:              "existing",
// 			ResourceGroupName: "existing",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("id", example.Id)
// 		return nil
// 	})
// }
// ```
func GetIotHub(ctx *pulumi.Context, args *GetIotHubArgs, opts ...pulumi.InvokeOption) (*GetIotHubResult, error) {
	var rv GetIotHubResult
	err := ctx.Invoke("azure:iot/getIotHub:getIotHub", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIotHub.
type GetIotHubArgs struct {
	// The name of this IoTHub.
	Name string `pulumi:"name"`
	// The name of the Resource Group where the IoTHub exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A mapping of tags which should be assigned to the IoTHub.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getIotHub.
type GetIotHubResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id                string            `pulumi:"id"`
	Name              string            `pulumi:"name"`
	ResourceGroupName string            `pulumi:"resourceGroupName"`
	Tags              map[string]string `pulumi:"tags"`
}

func GetIotHubApply(ctx *pulumi.Context, args GetIotHubApplyInput, opts ...pulumi.InvokeOption) GetIotHubResultOutput {
	return args.ToGetIotHubApplyOutput().ApplyT(func(v GetIotHubArgs) (GetIotHubResult, error) {
		r, err := GetIotHub(ctx, &v, opts...)
		return *r, err

	}).(GetIotHubResultOutput)
}

// GetIotHubApplyInput is an input type that accepts GetIotHubApplyArgs and GetIotHubApplyOutput values.
// You can construct a concrete instance of `GetIotHubApplyInput` via:
//
//          GetIotHubApplyArgs{...}
type GetIotHubApplyInput interface {
	pulumi.Input

	ToGetIotHubApplyOutput() GetIotHubApplyOutput
	ToGetIotHubApplyOutputWithContext(context.Context) GetIotHubApplyOutput
}

// A collection of arguments for invoking getIotHub.
type GetIotHubApplyArgs struct {
	// The name of this IoTHub.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the Resource Group where the IoTHub exists.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// A mapping of tags which should be assigned to the IoTHub.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (GetIotHubApplyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIotHubArgs)(nil)).Elem()
}

func (i GetIotHubApplyArgs) ToGetIotHubApplyOutput() GetIotHubApplyOutput {
	return i.ToGetIotHubApplyOutputWithContext(context.Background())
}

func (i GetIotHubApplyArgs) ToGetIotHubApplyOutputWithContext(ctx context.Context) GetIotHubApplyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIotHubApplyOutput)
}

// A collection of arguments for invoking getIotHub.
type GetIotHubApplyOutput struct{ *pulumi.OutputState }

func (GetIotHubApplyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIotHubArgs)(nil)).Elem()
}

func (o GetIotHubApplyOutput) ToGetIotHubApplyOutput() GetIotHubApplyOutput {
	return o
}

func (o GetIotHubApplyOutput) ToGetIotHubApplyOutputWithContext(ctx context.Context) GetIotHubApplyOutput {
	return o
}

// The name of this IoTHub.
func (o GetIotHubApplyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetIotHubArgs) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the Resource Group where the IoTHub exists.
func (o GetIotHubApplyOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetIotHubArgs) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A mapping of tags which should be assigned to the IoTHub.
func (o GetIotHubApplyOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetIotHubArgs) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// A collection of values returned by getIotHub.
type GetIotHubResultOutput struct{ *pulumi.OutputState }

func (GetIotHubResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIotHubResult)(nil)).Elem()
}

func (o GetIotHubResultOutput) ToGetIotHubResultOutput() GetIotHubResultOutput {
	return o
}

func (o GetIotHubResultOutput) ToGetIotHubResultOutputWithContext(ctx context.Context) GetIotHubResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetIotHubResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIotHubResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetIotHubResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetIotHubResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetIotHubResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetIotHubResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

func (o GetIotHubResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetIotHubResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIotHubApplyOutput{})
	pulumi.RegisterOutputType(GetIotHubResultOutput{})
}
