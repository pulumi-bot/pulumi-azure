// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package storage

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Storage Container.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/storage"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := storage.GetStorageContainer(ctx, &storage.GetStorageContainerArgs{
// 			Name:               "example-container-name",
// 			StorageAccountName: "example-storage-account-name",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetStorageContainer(ctx *pulumi.Context, args *GetStorageContainerArgs, opts ...pulumi.InvokeOption) (*GetStorageContainerResult, error) {
	var rv GetStorageContainerResult
	err := ctx.Invoke("azure:storage/getStorageContainer:getStorageContainer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getStorageContainer.
type GetStorageContainerArgs struct {
	// A mapping of MetaData for this Container.
	Metadata map[string]string `pulumi:"metadata"`
	// The name of the Container.
	Name string `pulumi:"name"`
	// The name of the Storage Account where the Container exists.
	StorageAccountName string `pulumi:"storageAccountName"`
}

// A collection of values returned by getStorageContainer.
type GetStorageContainerResult struct {
	// The Access Level configured for this Container.
	ContainerAccessType string `pulumi:"containerAccessType"`
	// Is there an Immutability Policy configured on this Storage Container?
	HasImmutabilityPolicy bool `pulumi:"hasImmutabilityPolicy"`
	// Is there a Legal Hold configured on this Storage Container?
	HasLegalHold bool `pulumi:"hasLegalHold"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A mapping of MetaData for this Container.
	Metadata map[string]string `pulumi:"metadata"`
	Name     string            `pulumi:"name"`
	// The Resource Manager ID of this Storage Container.
	ResourceManagerId  string `pulumi:"resourceManagerId"`
	StorageAccountName string `pulumi:"storageAccountName"`
}

func GetStorageContainerApply(ctx *pulumi.Context, args GetStorageContainerApplyInput, opts ...pulumi.InvokeOption) GetStorageContainerResultOutput {
	return args.ToGetStorageContainerApplyOutput().ApplyT(func(v GetStorageContainerArgs) (GetStorageContainerResult, error) {
		r, err := GetStorageContainer(ctx, &v, opts...)
		return *r, err

	}).(GetStorageContainerResultOutput)
}

// GetStorageContainerApplyInput is an input type that accepts GetStorageContainerApplyArgs and GetStorageContainerApplyOutput values.
// You can construct a concrete instance of `GetStorageContainerApplyInput` via:
//
//          GetStorageContainerApplyArgs{...}
type GetStorageContainerApplyInput interface {
	pulumi.Input

	ToGetStorageContainerApplyOutput() GetStorageContainerApplyOutput
	ToGetStorageContainerApplyOutputWithContext(context.Context) GetStorageContainerApplyOutput
}

// A collection of arguments for invoking getStorageContainer.
type GetStorageContainerApplyArgs struct {
	// A mapping of MetaData for this Container.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// The name of the Container.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the Storage Account where the Container exists.
	StorageAccountName pulumi.StringInput `pulumi:"storageAccountName"`
}

func (GetStorageContainerApplyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStorageContainerArgs)(nil)).Elem()
}

func (i GetStorageContainerApplyArgs) ToGetStorageContainerApplyOutput() GetStorageContainerApplyOutput {
	return i.ToGetStorageContainerApplyOutputWithContext(context.Background())
}

func (i GetStorageContainerApplyArgs) ToGetStorageContainerApplyOutputWithContext(ctx context.Context) GetStorageContainerApplyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStorageContainerApplyOutput)
}

// A collection of arguments for invoking getStorageContainer.
type GetStorageContainerApplyOutput struct{ *pulumi.OutputState }

func (GetStorageContainerApplyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStorageContainerArgs)(nil)).Elem()
}

func (o GetStorageContainerApplyOutput) ToGetStorageContainerApplyOutput() GetStorageContainerApplyOutput {
	return o
}

func (o GetStorageContainerApplyOutput) ToGetStorageContainerApplyOutputWithContext(ctx context.Context) GetStorageContainerApplyOutput {
	return o
}

// A mapping of MetaData for this Container.
func (o GetStorageContainerApplyOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetStorageContainerArgs) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// The name of the Container.
func (o GetStorageContainerApplyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageContainerArgs) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the Storage Account where the Container exists.
func (o GetStorageContainerApplyOutput) StorageAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageContainerArgs) string { return v.StorageAccountName }).(pulumi.StringOutput)
}

// A collection of values returned by getStorageContainer.
type GetStorageContainerResultOutput struct{ *pulumi.OutputState }

func (GetStorageContainerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStorageContainerResult)(nil)).Elem()
}

func (o GetStorageContainerResultOutput) ToGetStorageContainerResultOutput() GetStorageContainerResultOutput {
	return o
}

func (o GetStorageContainerResultOutput) ToGetStorageContainerResultOutputWithContext(ctx context.Context) GetStorageContainerResultOutput {
	return o
}

// The Access Level configured for this Container.
func (o GetStorageContainerResultOutput) ContainerAccessType() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageContainerResult) string { return v.ContainerAccessType }).(pulumi.StringOutput)
}

// Is there an Immutability Policy configured on this Storage Container?
func (o GetStorageContainerResultOutput) HasImmutabilityPolicy() pulumi.BoolOutput {
	return o.ApplyT(func(v GetStorageContainerResult) bool { return v.HasImmutabilityPolicy }).(pulumi.BoolOutput)
}

// Is there a Legal Hold configured on this Storage Container?
func (o GetStorageContainerResultOutput) HasLegalHold() pulumi.BoolOutput {
	return o.ApplyT(func(v GetStorageContainerResult) bool { return v.HasLegalHold }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetStorageContainerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageContainerResult) string { return v.Id }).(pulumi.StringOutput)
}

// A mapping of MetaData for this Container.
func (o GetStorageContainerResultOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetStorageContainerResult) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o GetStorageContainerResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageContainerResult) string { return v.Name }).(pulumi.StringOutput)
}

// The Resource Manager ID of this Storage Container.
func (o GetStorageContainerResultOutput) ResourceManagerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageContainerResult) string { return v.ResourceManagerId }).(pulumi.StringOutput)
}

func (o GetStorageContainerResultOutput) StorageAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageContainerResult) string { return v.StorageAccountName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetStorageContainerApplyOutput{})
	pulumi.RegisterOutputType(GetStorageContainerResultOutput{})
}
