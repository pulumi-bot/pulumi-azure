// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about a Platform Image.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/compute"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		example, err := compute.GetPlatformImage(ctx, &compute.GetPlatformImageArgs{
// 			Location:  "West Europe",
// 			Publisher: "Canonical",
// 			Offer:     "UbuntuServer",
// 			Sku:       "16.04-LTS",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("id", example.Id)
// 		return nil
// 	})
// }
// ```
func GetPlatformImage(ctx *pulumi.Context, args *GetPlatformImageArgs, opts ...pulumi.InvokeOption) (*GetPlatformImageResult, error) {
	var rv GetPlatformImageResult
	err := ctx.Invoke("azure:compute/getPlatformImage:getPlatformImage", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPlatformImage.
type GetPlatformImageArgs struct {
	// Specifies the Location to pull information about this Platform Image from.
	Location string `pulumi:"location"`
	// Specifies the Offer associated with the Platform Image.
	Offer string `pulumi:"offer"`
	// Specifies the Publisher associated with the Platform Image.
	Publisher string `pulumi:"publisher"`
	// Specifies the SKU of the Platform Image.
	Sku string `pulumi:"sku"`
	// The version of the Platform Image.
	Version *string `pulumi:"version"`
}

// A collection of values returned by getPlatformImage.
type GetPlatformImageResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id        string `pulumi:"id"`
	Location  string `pulumi:"location"`
	Offer     string `pulumi:"offer"`
	Publisher string `pulumi:"publisher"`
	Sku       string `pulumi:"sku"`
	Version   string `pulumi:"version"`
}

func GetPlatformImageApply(ctx *pulumi.Context, args GetPlatformImageApplyInput, opts ...pulumi.InvokeOption) GetPlatformImageResultOutput {
	return args.ToGetPlatformImageApplyOutput().ApplyT(func(v GetPlatformImageArgs) (GetPlatformImageResult, error) {
		r, err := GetPlatformImage(ctx, &v, opts...)
		return *r, err

	}).(GetPlatformImageResultOutput)
}

// GetPlatformImageApplyInput is an input type that accepts GetPlatformImageApplyArgs and GetPlatformImageApplyOutput values.
// You can construct a concrete instance of `GetPlatformImageApplyInput` via:
//
//          GetPlatformImageApplyArgs{...}
type GetPlatformImageApplyInput interface {
	pulumi.Input

	ToGetPlatformImageApplyOutput() GetPlatformImageApplyOutput
	ToGetPlatformImageApplyOutputWithContext(context.Context) GetPlatformImageApplyOutput
}

// A collection of arguments for invoking getPlatformImage.
type GetPlatformImageApplyArgs struct {
	// Specifies the Location to pull information about this Platform Image from.
	Location pulumi.StringInput `pulumi:"location"`
	// Specifies the Offer associated with the Platform Image.
	Offer pulumi.StringInput `pulumi:"offer"`
	// Specifies the Publisher associated with the Platform Image.
	Publisher pulumi.StringInput `pulumi:"publisher"`
	// Specifies the SKU of the Platform Image.
	Sku pulumi.StringInput `pulumi:"sku"`
	// The version of the Platform Image.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GetPlatformImageApplyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPlatformImageArgs)(nil)).Elem()
}

func (i GetPlatformImageApplyArgs) ToGetPlatformImageApplyOutput() GetPlatformImageApplyOutput {
	return i.ToGetPlatformImageApplyOutputWithContext(context.Background())
}

func (i GetPlatformImageApplyArgs) ToGetPlatformImageApplyOutputWithContext(ctx context.Context) GetPlatformImageApplyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPlatformImageApplyOutput)
}

// A collection of arguments for invoking getPlatformImage.
type GetPlatformImageApplyOutput struct{ *pulumi.OutputState }

func (GetPlatformImageApplyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPlatformImageArgs)(nil)).Elem()
}

func (o GetPlatformImageApplyOutput) ToGetPlatformImageApplyOutput() GetPlatformImageApplyOutput {
	return o
}

func (o GetPlatformImageApplyOutput) ToGetPlatformImageApplyOutputWithContext(ctx context.Context) GetPlatformImageApplyOutput {
	return o
}

// Specifies the Location to pull information about this Platform Image from.
func (o GetPlatformImageApplyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetPlatformImageArgs) string { return v.Location }).(pulumi.StringOutput)
}

// Specifies the Offer associated with the Platform Image.
func (o GetPlatformImageApplyOutput) Offer() pulumi.StringOutput {
	return o.ApplyT(func(v GetPlatformImageArgs) string { return v.Offer }).(pulumi.StringOutput)
}

// Specifies the Publisher associated with the Platform Image.
func (o GetPlatformImageApplyOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v GetPlatformImageArgs) string { return v.Publisher }).(pulumi.StringOutput)
}

// Specifies the SKU of the Platform Image.
func (o GetPlatformImageApplyOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v GetPlatformImageArgs) string { return v.Sku }).(pulumi.StringOutput)
}

// The version of the Platform Image.
func (o GetPlatformImageApplyOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPlatformImageArgs) *string { return v.Version }).(pulumi.StringPtrOutput)
}

// A collection of values returned by getPlatformImage.
type GetPlatformImageResultOutput struct{ *pulumi.OutputState }

func (GetPlatformImageResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPlatformImageResult)(nil)).Elem()
}

func (o GetPlatformImageResultOutput) ToGetPlatformImageResultOutput() GetPlatformImageResultOutput {
	return o
}

func (o GetPlatformImageResultOutput) ToGetPlatformImageResultOutputWithContext(ctx context.Context) GetPlatformImageResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetPlatformImageResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPlatformImageResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPlatformImageResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetPlatformImageResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o GetPlatformImageResultOutput) Offer() pulumi.StringOutput {
	return o.ApplyT(func(v GetPlatformImageResult) string { return v.Offer }).(pulumi.StringOutput)
}

func (o GetPlatformImageResultOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v GetPlatformImageResult) string { return v.Publisher }).(pulumi.StringOutput)
}

func (o GetPlatformImageResultOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v GetPlatformImageResult) string { return v.Sku }).(pulumi.StringOutput)
}

func (o GetPlatformImageResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetPlatformImageResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPlatformImageApplyOutput{})
	pulumi.RegisterOutputType(GetPlatformImageResultOutput{})
}
